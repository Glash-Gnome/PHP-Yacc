EMPTY nonterminals: 
  $start
  start
  top_statement_list
  top_statement_list_ex
  no_comma
  optional_comma
  inner_statement_list_ex
  inner_statement_list
  elseif_list
  else_single
  new_elseif_list
  new_else_single
  for_expr
  optional_expr
  catches
  optional_finally
  optional_ref
  optional_ellipsis
  parameter_list
  optional_return_type
  extends_from
  implements_list
  class_statement_list
  interface_extends_list
  case_list
  non_empty_parameter_list
  parameter
  optional_param_type
  class_statement
  method_modifiers
  trait_adaptation_list
  exit_expr
  backticks_expr
  lexical_vars
  ctor_arguments
  lexical_var_list
  non_empty_lexical_var_list
  lexical_var
  array_pair_list
  list_expr_elements
  list_expr_element
  inner_array_pair_list
  array_pair
First:
$start	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
start	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement_list	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement_list_ex	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
reserved_non_modifiers	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
semi_reserved	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
identifier	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
namespace_name_parts	[ T_STRING ]
namespace_name	[ T_STRING ]
semi	[ error ';' ]
no_comma	[ ',' @ ]
optional_comma	[ ',' @ ]
statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
function_declaration_statement	[ T_FUNCTION ]
class_declaration_statement	[ T_ABSTRACT T_FINAL T_CLASS T_TRAIT T_INTERFACE ]
use_declarations	[ T_STRING T_NS_SEPARATOR ]
use_type	[ T_FUNCTION T_CONST ]
group_use_declaration	[ T_USE ]
constant_declaration_list	[ T_STRING ]
unprefixed_use_declarations	[ T_STRING ]
inline_use_declarations	[ T_STRING T_FUNCTION T_CONST ]
non_empty_unprefixed_use_declarations	[ T_STRING ]
unprefixed_use_declaration	[ T_STRING ]
non_empty_use_declarations	[ T_STRING T_NS_SEPARATOR ]
use_declaration	[ T_STRING T_NS_SEPARATOR ]
non_empty_inline_use_declarations	[ T_STRING T_FUNCTION T_CONST ]
inline_use_declaration	[ T_STRING T_FUNCTION T_CONST ]
non_empty_constant_declaration_list	[ T_STRING ]
constant_declaration	[ T_STRING ]
expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
class_const_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
non_empty_class_const_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
class_const	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
inner_statement_list_ex	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
inner_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
inner_statement_list	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
non_empty_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '{' '(' '`' '"' '$' ]
elseif_list	[ T_ELSEIF @ ]
else_single	[ T_ELSE @ ]
new_elseif_list	[ T_ELSEIF @ ]
new_else_single	[ T_ELSE @ ]
while_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
for_expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
for_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
switch_case_list	[ ':' '{' ]
optional_expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
global_var_list	[ T_VARIABLE '$' ]
static_var_list	[ T_VARIABLE ]
expr_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
variables_list	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
foreach_variable	[ '&' '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_LIST T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
foreach_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
variable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
declare_list	[ T_STRING ]
declare_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
catches	[ T_CATCH @ ]
optional_finally	[ T_FINALLY @ ]
catch	[ T_CATCH ]
name_union	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
name	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
non_empty_variables_list	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
optional_ref	[ '&' @ ]
optional_ellipsis	[ T_ELLIPSIS @ ]
parameter_list	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS @ ]
optional_return_type	[ ':' @ ]
class_entry_type	[ T_ABSTRACT T_FINAL T_CLASS ]
extends_from	[ T_EXTENDS @ ]
implements_list	[ T_IMPLEMENTS @ ]
class_statement_list	[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR @ ]
interface_extends_list	[ T_EXTENDS @ ]
class_name	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
class_name_list	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
non_empty_class_name_list	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
non_empty_declare_list	[ T_STRING ]
declare_list_element	[ T_STRING ]
case_list	[ T_CASE T_DEFAULT @ ]
case	[ T_CASE T_DEFAULT ]
case_separator	[ ':' ';' ]
elseif	[ T_ELSEIF ]
new_elseif	[ T_ELSEIF ]
list_expr	[ T_LIST ]
array_short_syntax	[ '[' ]
non_empty_parameter_list	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS ]
parameter	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS ]
optional_param_type	[ '?' T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR @ ]
type_expr	[ '?' T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR ]
type	[ T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR ]
argument_list	[ '(' ]
non_empty_argument_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR T_ELLIPSIS '(' '`' '"' '$' ]
argument	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR T_ELLIPSIS '(' '`' '"' '$' ]
non_empty_global_var_list	[ T_VARIABLE '$' ]
global_var	[ T_VARIABLE '$' ]
simple_variable	[ T_VARIABLE '$' ]
non_empty_static_var_list	[ T_VARIABLE ]
static_var	[ T_VARIABLE ]
class_statement	[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR ]
variable_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR ]
property_declaration_list	[ T_VARIABLE ]
method_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC @ ]
method_body	[ ';' '{' ]
trait_adaptations	[ ';' '{' ]
trait_adaptation_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR @ ]
trait_adaptation	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ]
trait_method_reference_fully_qualified	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
trait_method_reference	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ]
member_modifier	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
non_empty_member_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
non_empty_property_declaration_list	[ T_VARIABLE ]
property_declaration	[ T_VARIABLE ]
non_empty_expr_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
new_expr	[ T_NEW ]
class_name_reference	[ error T_STRING T_VARIABLE T_STATIC T_NAMESPACE T_NS_SEPARATOR '$' ]
exit_expr	[ '(' @ ]
scalar	[ '[' T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '"' '$' ]
backticks_expr	[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN @ ]
lexical_vars	[ T_USE @ ]
anonymous_class	[ T_CLASS ]
ctor_arguments	[ '(' @ ]
lexical_var_list	[ '&' T_VARIABLE ]
non_empty_lexical_var_list	[ '&' T_VARIABLE ]
lexical_var	[ '&' T_VARIABLE ]
function_call	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
callable_expr	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
class_name_or_var	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
member_name	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR '{' '$' ]
new_variable	[ T_STRING T_VARIABLE T_STATIC T_NAMESPACE T_NS_SEPARATOR '$' ]
dereferencable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
encaps_list	[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
constant	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
array_pair_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
dereferencable_scalar	[ '[' T_CONSTANT_ENCAPSED_STRING T_ARRAY ]
callable_variable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
property_name	[ error T_STRING T_VARIABLE '{' '$' ]
static_member	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
list_expr_elements	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
list_expr_element	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
inner_array_pair_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
array_pair	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
encaps_var	[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
encaps_string_part	[ T_ENCAPSED_AND_WHITESPACE ]
encaps_base_var	[ T_VARIABLE ]
encaps_var_offset	[ '-' T_STRING T_VARIABLE T_NUM_STRING ]
@nil	[ ]
state unknown:
	(0) $start : . start 
		[ EOF ]
	(3) top_statement_list_ex : . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(0) $start : start . 
		[ EOF ]
state unknown:
	(1) start : top_statement_list . 
		[ EOF ]
state unknown:
	(2) top_statement_list_ex : top_statement_list_ex . top_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(4) top_statement_list : top_statement_list_ex . 
		[ EOF '}' ]
state unknown:
	(161) non_empty_statement : error . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(364) expr : T_INCLUDE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(365) expr : T_INCLUDE_ONCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(366) expr : T_EVAL . '(' expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(367) expr : T_REQUIRE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(368) expr : T_REQUIRE_ONCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(380) expr : T_PRINT . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(381) expr : T_YIELD . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(382) expr : T_YIELD . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD . expr T_DOUBLE_ARROW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(384) expr : T_YIELD_FROM . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(344) expr : '+' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(345) expr : '-' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(346) expr : '!' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(347) expr : '~' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(324) expr : T_INC . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(326) expr : T_DEC . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(369) expr : T_INT_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(370) expr : T_DOUBLE_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(371) expr : T_STRING_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(372) expr : T_ARRAY_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(373) expr : T_OBJECT_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(374) expr : T_BOOL_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(375) expr : T_UNSET_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(377) expr : '@' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' . array_pair_list ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(489) array_pair : . 
		[ ',' ']' ]
state unknown:
	(388) new_expr : T_NEW . class_name_reference ctor_arguments 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(389) new_expr : T_NEW . anonymous_class 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(310) expr : T_CLONE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(376) expr : T_EXIT . exit_expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(409) exit_expr : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF . '(' expr ')' statement elseif_list else_single 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF . '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(423) scalar : T_LNUMBER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(424) scalar : T_DNUMBER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(82) namespace_name_parts : T_STRING . 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR ';' '(' ]
	(160) non_empty_statement : T_STRING . ':' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(456) simple_variable : T_VARIABLE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(151) non_empty_statement : T_INLINE_HTML . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(422) dereferencable_scalar : T_CONSTANT_ENCAPSED_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(150) non_empty_statement : T_ECHO . expr_list semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO . statement T_WHILE '(' expr ')' ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE . '(' expr ')' while_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR . '(' for_expr ';' for_expr ';' for_expr ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(154) non_empty_statement : T_FOREACH . '(' expr T_AS foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH . '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE . '(' declare_list ')' declare_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(144) non_empty_statement : T_SWITCH . '(' expr ')' switch_case_list 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(145) non_empty_statement : T_BREAK . optional_expr semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE . optional_expr semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ]
state unknown:
	(159) non_empty_statement : T_GOTO . T_STRING semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION . optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(174) optional_ref : . 
		[ T_STRING '(' ]
state unknown:
	(101) top_statement : T_CONST . constant_declaration_list semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(147) non_empty_statement : T_RETURN . optional_expr semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ]
state unknown:
	(157) non_empty_statement : T_TRY . '{' inner_statement_list '}' catches optional_finally 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW . expr semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(98) top_statement : T_USE . use_declarations semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(99) top_statement : T_USE . use_type use_declarations semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(104) group_use_declaration : T_USE . use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(105) group_use_declaration : T_USE . use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(106) group_use_declaration : T_USE . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
	(107) group_use_declaration : T_USE . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL . global_var_list semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(149) non_empty_statement : T_STATIC . static_var_list semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(399) class_name : T_STATIC . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(183) class_entry_type : T_ABSTRACT . T_CLASS 
		[ T_STRING ]
state unknown:
	(184) class_entry_type : T_FINAL . T_CLASS 
		[ T_STRING ]
state unknown:
	(153) non_empty_statement : T_UNSET . '(' variables_list ')' semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(362) expr : T_ISSET . '(' variables_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY . '(' expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(94) top_statement : T_HALT_COMPILER . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(182) class_entry_type : T_CLASS . 
		[ T_STRING ]
state unknown:
	(181) class_declaration_statement : T_TRAIT . T_STRING '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE . T_STRING interface_extends_list '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(474) list_expr : T_LIST . '(' list_expr_elements ')' 
		[ ',' '=' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY . '(' array_pair_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(428) scalar : T_CLASS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(429) scalar : T_TRAIT_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(430) scalar : T_METHOD_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(431) scalar : T_FUNC_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(425) scalar : T_LINE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(426) scalar : T_FILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(435) scalar : T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(436) scalar : T_START_HEREDOC . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(438) scalar : T_START_HEREDOC . encaps_list T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(95) top_statement : T_NAMESPACE . namespace_name semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(96) top_statement : T_NAMESPACE . namespace_name '{' top_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(97) top_statement : T_NAMESPACE . '{' top_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_PAAMAYIM_NEKUDOTAYIM ';' '(' ]
state unknown:
	(432) scalar : T_NS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(427) scalar : T_DIR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(402) name : T_NS_SEPARATOR . namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(163) statement : ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(138) non_empty_statement : '{' . inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(358) expr : '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' . expr ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' . expr ')' 
		[ '(' ]
state unknown:
	(379) expr : '`' . backticks_expr '`' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(411) backticks_expr : . 
		[ '`' ]
state unknown:
	(437) scalar : '"' . encaps_list '"' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(457) simple_variable : '$' . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(458) simple_variable : '$' . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(459) simple_variable : '$' . error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(2) top_statement_list_ex : top_statement_list_ex top_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(401) name : namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(91) top_statement : statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(92) top_statement : function_declaration_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(93) top_statement : class_declaration_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(100) top_statement : group_use_declaration . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(152) non_empty_statement : expr . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(162) statement : non_empty_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(304) expr : variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(307) expr : variable . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable . '=' '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(311) expr : variable . T_PLUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(312) expr : variable . T_MINUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(313) expr : variable . T_MUL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(314) expr : variable . T_DIV_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(315) expr : variable . T_CONCAT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(316) expr : variable . T_MOD_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(317) expr : variable . T_AND_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(318) expr : variable . T_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(319) expr : variable . T_XOR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(320) expr : variable . T_SL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(321) expr : variable . T_SR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(322) expr : variable . T_POW_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(323) expr : variable . T_INC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(325) expr : variable . T_DEC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(396) function_call : name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(400) class_name : name . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
	(416) constant : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
state unknown:
	(179) class_declaration_statement : class_entry_type . T_STRING extends_from implements_list '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(407) class_name_or_var : class_name . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(305) expr : list_expr . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(421) dereferencable_scalar : array_short_syntax . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(447) callable_variable : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(309) expr : new_expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(378) expr : scalar . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(451) callable_variable : function_call . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(397) function_call : callable_expr . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(398) function_call : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM member_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(417) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM identifier 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(418) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(460) static_member : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(408) class_name_or_var : dereferencable . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
	(448) callable_variable : dereferencable . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(450) callable_variable : dereferencable . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(452) callable_variable : dereferencable . T_OBJECT_OPERATOR property_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable . T_OBJECT_OPERATOR property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(434) scalar : constant . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(449) callable_variable : constant . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(433) scalar : dereferencable_scalar . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(443) dereferencable : dereferencable_scalar . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(446) callable_expr : dereferencable_scalar . 
		[ '(' ]
state unknown:
	(444) callable_expr : callable_variable . 
		[ '(' ]
	(453) variable : callable_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(454) variable : static_member . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(82) namespace_name_parts : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ '(' ]
state unknown:
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(399) class_name : T_STATIC . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(364) expr : T_INCLUDE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(365) expr : T_INCLUDE_ONCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(366) expr : T_EVAL '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(367) expr : T_REQUIRE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(368) expr : T_REQUIRE_ONCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(380) expr : T_PRINT expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(382) expr : T_YIELD expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD expr . T_DOUBLE_ARROW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(384) expr : T_YIELD_FROM expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(344) expr : '+' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(345) expr : '-' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(346) expr : '!' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(347) expr : '~' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(399) class_name : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(442) dereferencable : '(' . expr ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' . expr ')' 
		[ '(' ]
state unknown:
	(324) expr : T_INC variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(421) dereferencable_scalar : array_short_syntax . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' '(' ]
state unknown:
	(449) callable_variable : constant . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(443) dereferencable : dereferencable_scalar . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(446) callable_expr : dereferencable_scalar . 
		[ '(' ]
state unknown:
	(326) expr : T_DEC variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(369) expr : T_INT_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(370) expr : T_DOUBLE_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(371) expr : T_STRING_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(372) expr : T_ARRAY_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(373) expr : T_OBJECT_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(374) expr : T_BOOL_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(375) expr : T_UNSET_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(377) expr : '@' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(488) array_pair : '&' . variable 
		[ ',' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(485) array_pair : expr . T_DOUBLE_ARROW expr 
		[ ',' ')' ']' ]
	(486) array_pair : expr . 
		[ ',' ')' ']' ]
	(487) array_pair : expr . T_DOUBLE_ARROW '&' variable 
		[ ',' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' array_pair_list . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(482) array_pair_list : inner_array_pair_list . 
		[ ')' ']' ]
	(483) inner_array_pair_list : inner_array_pair_list . ',' array_pair 
		[ ',' ')' ']' ]
state unknown:
	(484) inner_array_pair_list : array_pair . 
		[ ',' ')' ']' ]
state unknown:
	(406) class_name_reference : error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS . ctor_arguments extends_from implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(414) ctor_arguments : . 
		[ T_EXTENDS T_IMPLEMENTS '{' ]
state unknown:
	(400) class_name : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(404) class_name_reference : class_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
	(465) new_variable : class_name . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(461) new_variable : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW class_name_reference . ctor_arguments 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(414) ctor_arguments : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(389) new_expr : T_NEW anonymous_class . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(405) class_name_reference : new_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
	(462) new_variable : new_variable . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(463) new_variable : new_variable . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(464) new_variable : new_variable . T_OBJECT_OPERATOR property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(466) new_variable : new_variable . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(310) expr : T_CLONE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(410) exit_expr : '(' . optional_expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(439) optional_expr : . 
		[ ')' ]
state unknown:
	(376) expr : T_EXIT exit_expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' . expr ')' statement elseif_list else_single 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' . expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(160) non_empty_statement : T_STRING ':' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(301) non_empty_expr_list : expr . 
		[ error ',' ';' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
state unknown:
	(150) non_empty_statement : T_ECHO expr_list . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(299) expr_list : non_empty_expr_list . no_comma 
		[ error ';' ')' ]
	(300) non_empty_expr_list : non_empty_expr_list . ',' expr 
		[ error ',' ';' ')' ]
	(87) no_comma : . 
		[ error ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement . T_WHILE '(' expr ')' ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' . expr ')' while_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' . for_expr ';' for_expr ';' for_expr ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' . expr T_AS foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' . expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' . declare_list ')' declare_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' . expr ')' switch_case_list 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(440) optional_expr : expr . 
		[ error ';' ')' ']' ]
state unknown:
	(145) non_empty_statement : T_BREAK optional_expr . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE optional_expr . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(159) non_empty_statement : T_GOTO T_STRING . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(175) optional_ref : '&' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref . T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(126) constant_declaration : T_STRING . '=' expr 
		[ error ',' ';' ]
state unknown:
	(101) top_statement : T_CONST constant_declaration_list . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(123) constant_declaration_list : non_empty_constant_declaration_list . no_comma 
		[ error ';' ]
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list . ',' constant_declaration 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(125) non_empty_constant_declaration_list : constant_declaration . 
		[ error ',' ';' ]
state unknown:
	(147) non_empty_statement : T_RETURN optional_expr . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' . inner_statement_list '}' catches optional_finally 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW expr . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(102) use_type : T_FUNCTION . 
		[ T_STRING T_NS_SEPARATOR ]
state unknown:
	(103) use_type : T_CONST . 
		[ T_STRING T_NS_SEPARATOR ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(106) group_use_declaration : T_USE namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(117) unprefixed_use_declaration : namespace_name . 
		[ error ',' ';' '}' ]
	(118) unprefixed_use_declaration : namespace_name . T_AS T_STRING 
		[ error ',' ';' '}' ]
state unknown:
	(98) top_statement : T_USE use_declarations . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(99) top_statement : T_USE use_type . use_declarations semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(104) group_use_declaration : T_USE use_type . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(105) group_use_declaration : T_USE use_type . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(119) use_declaration : unprefixed_use_declaration . 
		[ error ',' ';' ]
state unknown:
	(111) use_declarations : non_empty_use_declarations . no_comma 
		[ error ';' ]
	(112) non_empty_use_declarations : non_empty_use_declarations . ',' use_declaration 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(113) non_empty_use_declarations : use_declaration . 
		[ error ',' ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL global_var_list . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(253) global_var_list : non_empty_global_var_list . no_comma 
		[ error ';' ]
	(254) non_empty_global_var_list : non_empty_global_var_list . ',' global_var 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(255) non_empty_global_var_list : global_var . 
		[ error ',' ';' ]
state unknown:
	(256) global_var : simple_variable . 
		[ error ',' ';' ]
state unknown:
	(260) static_var : T_VARIABLE . 
		[ error ',' ';' ]
	(261) static_var : T_VARIABLE . '=' expr 
		[ error ',' ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ '(' ]
state unknown:
	(149) non_empty_statement : T_STATIC static_var_list . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(257) static_var_list : non_empty_static_var_list . no_comma 
		[ error ';' ]
	(258) non_empty_static_var_list : non_empty_static_var_list . ',' static_var 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(259) non_empty_static_var_list : static_var . 
		[ error ',' ';' ]
state unknown:
	(183) class_entry_type : T_ABSTRACT T_CLASS . 
		[ T_STRING ]
state unknown:
	(184) class_entry_type : T_FINAL T_CLASS . 
		[ T_STRING ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' . variables_list ')' semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(362) expr : T_ISSET '(' . variables_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING . '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING . interface_extends_list '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(187) interface_extends_list : . 
		[ '{' ]
state unknown:
	(474) list_expr : T_LIST '(' . list_expr_elements ')' 
		[ ',' '=' ')' ]
	(481) list_expr_element : . 
		[ ',' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' . array_pair_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ]
state unknown:
	(495) encaps_base_var : T_VARIABLE . 
		[ '[' T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_OBJECT_OPERATOR T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
state unknown:
	(436) scalar : T_START_HEREDOC T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . expr '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(502) encaps_var : T_CURLY_OPEN . variable '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(438) scalar : T_START_HEREDOC encaps_list . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
state unknown:
	(492) encaps_list : encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(493) encaps_list : encaps_string_part . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(496) encaps_var : encaps_base_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(497) encaps_var : encaps_base_var . '[' encaps_var_offset ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(498) encaps_var : encaps_base_var . T_OBJECT_OPERATOR T_STRING 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(403) name : T_NAMESPACE T_NS_SEPARATOR . namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' . top_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(3) top_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' '{' '}' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
state unknown:
	(95) top_statement : T_NAMESPACE namespace_name . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(96) top_statement : T_NAMESPACE namespace_name . '{' top_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(402) name : T_NS_SEPARATOR namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(131) inner_statement_list_ex : inner_statement_list_ex . inner_statement 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(133) inner_statement_list : inner_statement_list_ex . 
		[ T_ELSEIF T_ELSE T_ENDIF T_ENDWHILE T_ENDFOR T_ENDFOREACH T_ENDDECLARE T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(138) non_empty_statement : '{' inner_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(358) expr : '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(442) dereferencable : '(' expr . ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr . ')' 
		[ '(' ]
state unknown:
	(412) backticks_expr : T_ENCAPSED_AND_WHITESPACE . 
		[ '`' ]
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
state unknown:
	(379) expr : '`' backticks_expr . '`' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(413) backticks_expr : encaps_list . 
		[ '`' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' ]
state unknown:
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(437) scalar : '"' encaps_list . '"' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '"' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '"' ]
state unknown:
	(459) simple_variable : '$' error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(457) simple_variable : '$' '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(458) simple_variable : '$' simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(86) semi : error . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(85) semi : ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(100) top_statement : group_use_declaration semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(329) expr : expr T_LOGICAL_OR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(331) expr : expr T_LOGICAL_XOR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(330) expr : expr T_LOGICAL_AND . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(359) expr : expr '?' . expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr '?' . ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(361) expr : expr T_COALESCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr T_BOOLEAN_OR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(328) expr : expr T_BOOLEAN_AND . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(332) expr : expr '|' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(334) expr : expr '^' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(333) expr : expr '&' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(350) expr : expr T_IS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(351) expr : expr T_IS_NOT_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(348) expr : expr T_IS_IDENTICAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(349) expr : expr T_IS_NOT_IDENTICAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(352) expr : expr T_SPACESHIP . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(353) expr : expr '<' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(354) expr : expr T_IS_SMALLER_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(355) expr : expr '>' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(356) expr : expr T_IS_GREATER_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(341) expr : expr T_SL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(342) expr : expr T_SR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(336) expr : expr '+' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(337) expr : expr '-' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(335) expr : expr '.' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(338) expr : expr '*' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(339) expr : expr '/' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(340) expr : expr '%' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(357) expr : expr T_INSTANCEOF . class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(343) expr : expr T_POW . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(152) non_empty_statement : expr semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(307) expr : variable '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable '=' . '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(311) expr : variable T_PLUS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(312) expr : variable T_MINUS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(313) expr : variable T_MUL_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(314) expr : variable T_DIV_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(315) expr : variable T_CONCAT_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(316) expr : variable T_MOD_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(317) expr : variable T_AND_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(318) expr : variable T_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(319) expr : variable T_XOR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(320) expr : variable T_SL_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(321) expr : variable T_SR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(322) expr : variable T_POW_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(323) expr : variable T_INC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(325) expr : variable T_DEC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(246) argument_list : '(' . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(247) argument_list : '(' . non_empty_argument_list no_comma ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(396) function_call : name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING . extends_from implements_list '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(185) extends_from : . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(305) expr : list_expr '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(397) function_call : callable_expr argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . member_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . identifier 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR . property_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable T_OBJECT_OPERATOR . property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(450) callable_variable : dereferencable '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ ']' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(366) expr : T_EVAL '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(383) expr : T_YIELD expr T_DOUBLE_ARROW . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(442) dereferencable : '(' expr . ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr . ')' 
		[ '(' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(488) array_pair : '&' variable . 
		[ ',' ')' ']' ]
state unknown:
	(485) array_pair : expr T_DOUBLE_ARROW . expr 
		[ ',' ')' ']' ]
	(487) array_pair : expr T_DOUBLE_ARROW . '&' variable 
		[ ',' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' array_pair_list ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(483) inner_array_pair_list : inner_array_pair_list ',' . array_pair 
		[ ',' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ']' ]
state unknown:
	(415) ctor_arguments : argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_EXTENDS T_IMPLEMENTS ';' '{' '}' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments . extends_from implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(185) extends_from : . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW class_name_reference ctor_arguments . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ ']' ]
state unknown:
	(464) new_variable : new_variable T_OBJECT_OPERATOR . property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(463) new_variable : new_variable '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(410) exit_expr : '(' optional_expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr . ')' statement elseif_list else_single 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' expr . ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(150) non_empty_statement : T_ECHO expr_list semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ')' ]
	(300) non_empty_expr_list : non_empty_expr_list ',' . expr 
		[ error ',' ';' ')' ]
state unknown:
	(299) expr_list : non_empty_expr_list no_comma . 
		[ error ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE . '(' expr ')' ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr . ')' while_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr . ';' for_expr ';' for_expr ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(303) for_expr : expr_list . 
		[ ';' ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr . T_AS foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' expr . T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
state unknown:
	(204) declare_list_element : T_STRING . '=' expr 
		[ ',' ')' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list . ')' declare_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(201) declare_list : non_empty_declare_list . no_comma 
		[ ')' ]
	(203) non_empty_declare_list : non_empty_declare_list . ',' declare_list_element 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(202) non_empty_declare_list : declare_list_element . 
		[ ',' ')' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr . ')' switch_case_list 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(145) non_empty_statement : T_BREAK optional_expr semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE optional_expr semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(159) non_empty_statement : T_GOTO T_STRING semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING . '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(126) constant_declaration : T_STRING '=' . expr 
		[ error ',' ';' ]
state unknown:
	(101) top_statement : T_CONST constant_declaration_list semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' . constant_declaration 
		[ error ',' ';' ]
state unknown:
	(123) constant_declaration_list : non_empty_constant_declaration_list no_comma . 
		[ error ';' ]
state unknown:
	(147) non_empty_statement : T_RETURN optional_expr semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list . '}' catches optional_finally 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW expr semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(120) use_declaration : T_NS_SEPARATOR unprefixed_use_declaration . 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(118) unprefixed_use_declaration : namespace_name T_AS . T_STRING 
		[ error ',' ';' '}' ]
state unknown:
	(98) top_statement : T_USE use_declarations semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(104) group_use_declaration : T_USE use_type namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(99) top_statement : T_USE use_type use_declarations . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(112) non_empty_use_declarations : non_empty_use_declarations ',' . use_declaration 
		[ error ',' ';' ]
state unknown:
	(111) use_declarations : non_empty_use_declarations no_comma . 
		[ error ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL global_var_list semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(254) non_empty_global_var_list : non_empty_global_var_list ',' . global_var 
		[ error ',' ';' ]
state unknown:
	(253) global_var_list : non_empty_global_var_list no_comma . 
		[ error ';' ]
state unknown:
	(261) static_var : T_VARIABLE '=' . expr 
		[ error ',' ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(149) non_empty_statement : T_STATIC static_var_list semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(258) non_empty_static_var_list : non_empty_static_var_list ',' . static_var 
		[ error ',' ';' ]
state unknown:
	(257) static_var_list : non_empty_static_var_list no_comma . 
		[ error ';' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list . ')' semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(172) non_empty_variables_list : variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(171) variables_list : non_empty_variables_list . no_comma 
		[ ')' ]
	(173) non_empty_variables_list : non_empty_variables_list . ',' variable 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(362) expr : T_ISSET '(' variables_list . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(363) expr : T_EMPTY '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' . class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(188) interface_extends_list : T_EXTENDS . class_name_list 
		[ '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list . '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(479) list_expr_element : expr . T_DOUBLE_ARROW variable 
		[ ',' ')' ]
	(480) list_expr_element : expr . T_DOUBLE_ARROW list_expr 
		[ ',' ')' ]
state unknown:
	(304) expr : variable . 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(307) expr : variable . '=' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(308) expr : variable . '=' '&' variable 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(311) expr : variable . T_PLUS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(312) expr : variable . T_MINUS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(313) expr : variable . T_MUL_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(314) expr : variable . T_DIV_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(315) expr : variable . T_CONCAT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(316) expr : variable . T_MOD_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(317) expr : variable . T_AND_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(318) expr : variable . T_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(319) expr : variable . T_XOR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(320) expr : variable . T_SL_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(321) expr : variable . T_SR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(322) expr : variable . T_POW_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(323) expr : variable . T_INC 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(325) expr : variable . T_DEC 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(477) list_expr_element : variable . 
		[ ',' ')' ]
state unknown:
	(305) expr : list_expr . '=' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(478) list_expr_element : list_expr . 
		[ ',' ')' ]
state unknown:
	(474) list_expr : T_LIST '(' list_expr_elements . ')' 
		[ ',' '=' ')' ]
	(475) list_expr_elements : list_expr_elements . ',' list_expr_element 
		[ ',' ')' ]
state unknown:
	(476) list_expr_elements : list_expr_element . 
		[ ',' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(502) encaps_var : T_CURLY_OPEN variable . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(438) scalar : T_START_HEREDOC encaps_list T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(490) encaps_list : encaps_list encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(491) encaps_list : encaps_list encaps_string_part . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(493) encaps_list : encaps_string_part encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' . encaps_var_offset ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR . T_STRING 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(403) name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' top_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' . top_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(3) top_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(95) top_statement : T_NAMESPACE namespace_name semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(137) inner_statement : T_HALT_COMPILER . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(134) inner_statement : statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(135) inner_statement : function_declaration_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(136) inner_statement : class_declaration_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(131) inner_statement_list_ex : inner_statement_list_ex inner_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(138) non_empty_statement : '{' inner_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(358) expr : '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' expr ')' . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr ')' . 
		[ '(' ]
state unknown:
	(379) expr : '`' backticks_expr '`' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(437) scalar : '"' encaps_list '"' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(457) simple_variable : '$' '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr T_LOGICAL_OR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr T_LOGICAL_XOR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr T_LOGICAL_AND expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(360) expr : expr '?' ':' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(359) expr : expr '?' expr . ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr T_COALESCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr T_BOOLEAN_OR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr T_BOOLEAN_AND expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr '|' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr '^' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr '&' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr T_IS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr T_IS_NOT_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr T_IS_IDENTICAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr T_IS_NOT_IDENTICAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr T_SPACESHIP expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr '<' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr T_IS_SMALLER_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr '>' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr T_IS_GREATER_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr T_SL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr T_SR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr '+' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr '-' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr '.' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr '*' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr '/' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr '%' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(357) expr : expr T_INSTANCEOF class_name_reference . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr T_POW expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(308) expr : variable '=' '&' . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(307) expr : variable '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(311) expr : variable T_PLUS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(312) expr : variable T_MINUS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(313) expr : variable T_MUL_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(314) expr : variable T_DIV_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(315) expr : variable T_CONCAT_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(316) expr : variable T_MOD_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(317) expr : variable T_AND_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(318) expr : variable T_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(319) expr : variable T_XOR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(320) expr : variable T_SL_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(321) expr : variable T_SR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(322) expr : variable T_POW_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(251) argument : '&' . variable 
		[ ',' ')' ]
state unknown:
	(252) argument : T_ELLIPSIS . expr 
		[ ',' ')' ]
state unknown:
	(246) argument_list : '(' ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(250) argument : expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list . no_comma ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(249) non_empty_argument_list : non_empty_argument_list . ',' argument 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(248) non_empty_argument_list : argument . 
		[ ',' ')' ]
state unknown:
	(186) extends_from : T_EXTENDS . class_name 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from . implements_list '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(189) implements_list : . 
		[ '{' ]
state unknown:
	(305) expr : list_expr '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
state unknown:
	(5) reserved_non_modifiers : T_INCLUDE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(6) reserved_non_modifiers : T_INCLUDE_ONCE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(7) reserved_non_modifiers : T_EVAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(8) reserved_non_modifiers : T_REQUIRE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(9) reserved_non_modifiers : T_REQUIRE_ONCE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(10) reserved_non_modifiers : T_LOGICAL_OR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(11) reserved_non_modifiers : T_LOGICAL_XOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(12) reserved_non_modifiers : T_LOGICAL_AND . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(48) reserved_non_modifiers : T_PRINT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(49) reserved_non_modifiers : T_YIELD . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(13) reserved_non_modifiers : T_INSTANCEOF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(14) reserved_non_modifiers : T_NEW . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(15) reserved_non_modifiers : T_CLONE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(16) reserved_non_modifiers : T_EXIT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(17) reserved_non_modifiers : T_IF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(18) reserved_non_modifiers : T_ELSEIF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(19) reserved_non_modifiers : T_ELSE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(20) reserved_non_modifiers : T_ENDIF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(80) identifier : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(21) reserved_non_modifiers : T_ECHO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(22) reserved_non_modifiers : T_DO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(23) reserved_non_modifiers : T_WHILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(24) reserved_non_modifiers : T_ENDWHILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(25) reserved_non_modifiers : T_FOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(26) reserved_non_modifiers : T_ENDFOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(27) reserved_non_modifiers : T_FOREACH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(28) reserved_non_modifiers : T_ENDFOREACH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(29) reserved_non_modifiers : T_DECLARE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(30) reserved_non_modifiers : T_ENDDECLARE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(31) reserved_non_modifiers : T_AS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(51) reserved_non_modifiers : T_SWITCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(52) reserved_non_modifiers : T_ENDSWITCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(53) reserved_non_modifiers : T_CASE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(54) reserved_non_modifiers : T_DEFAULT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(55) reserved_non_modifiers : T_BREAK . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(43) reserved_non_modifiers : T_CONTINUE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(44) reserved_non_modifiers : T_GOTO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(45) reserved_non_modifiers : T_FUNCTION . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(46) reserved_non_modifiers : T_CONST . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(47) reserved_non_modifiers : T_RETURN . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(32) reserved_non_modifiers : T_TRY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(33) reserved_non_modifiers : T_CATCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(34) reserved_non_modifiers : T_FINALLY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(35) reserved_non_modifiers : T_THROW . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(36) reserved_non_modifiers : T_USE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(37) reserved_non_modifiers : T_INSTEADOF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(38) reserved_non_modifiers : T_GLOBAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(74) semi_reserved : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(75) semi_reserved : T_ABSTRACT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(76) semi_reserved : T_FINAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(77) semi_reserved : T_PRIVATE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(78) semi_reserved : T_PROTECTED . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(79) semi_reserved : T_PUBLIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(39) reserved_non_modifiers : T_VAR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(40) reserved_non_modifiers : T_UNSET . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(41) reserved_non_modifiers : T_ISSET . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(42) reserved_non_modifiers : T_EMPTY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(72) reserved_non_modifiers : T_HALT_COMPILER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(63) reserved_non_modifiers : T_CLASS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(61) reserved_non_modifiers : T_TRAIT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(62) reserved_non_modifiers : T_INTERFACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(58) reserved_non_modifiers : T_EXTENDS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(59) reserved_non_modifiers : T_IMPLEMENTS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(50) reserved_non_modifiers : T_LIST . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(56) reserved_non_modifiers : T_ARRAY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(57) reserved_non_modifiers : T_CALLABLE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(64) reserved_non_modifiers : T_CLASS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(65) reserved_non_modifiers : T_TRAIT_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(67) reserved_non_modifiers : T_METHOD_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(66) reserved_non_modifiers : T_FUNC_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(68) reserved_non_modifiers : T_LINE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(69) reserved_non_modifiers : T_FILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(60) reserved_non_modifiers : T_NAMESPACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(71) reserved_non_modifiers : T_NS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(70) reserved_non_modifiers : T_DIR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(468) member_name : '{' . expr '}' 
		[ '(' ]
state unknown:
	(73) semi_reserved : reserved_non_modifiers . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(81) identifier : semi_reserved . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM identifier . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(467) member_name : identifier . 
		[ '(' ]
state unknown:
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
	(469) member_name : simple_variable . 
		[ '(' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(473) property_name : error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(470) property_name : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(471) property_name : '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(472) property_name : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable T_OBJECT_OPERATOR property_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(450) callable_variable : dereferencable '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(366) expr : T_EVAL '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD expr T_DOUBLE_ARROW expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(442) dereferencable : '(' expr ')' . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr ')' . 
		[ '(' ]
state unknown:
	(487) array_pair : expr T_DOUBLE_ARROW '&' . variable 
		[ ',' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(485) array_pair : expr T_DOUBLE_ARROW expr . 
		[ ',' ')' ']' ]
state unknown:
	(483) inner_array_pair_list : inner_array_pair_list ',' array_pair . 
		[ ',' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from . implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(189) implements_list : . 
		[ '{' ]
state unknown:
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(464) new_variable : new_variable T_OBJECT_OPERATOR property_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(463) new_variable : new_variable '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(410) exit_expr : '(' optional_expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' . statement elseif_list else_single 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' expr ')' . ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(300) non_empty_expr_list : non_empty_expr_list ',' expr . 
		[ error ',' ';' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' . expr ')' ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr ')' . while_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' . for_expr ';' for_expr ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS . foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' expr T_AS . variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(204) declare_list_element : T_STRING '=' . expr 
		[ ',' ')' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' . declare_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(203) non_empty_declare_list : non_empty_declare_list ',' . declare_list_element 
		[ ',' ')' ]
state unknown:
	(201) declare_list : non_empty_declare_list no_comma . 
		[ ')' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr ')' . switch_case_list 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' . parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(238) type_expr : '?' . type 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(240) type : T_ARRAY . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(241) type : T_CALLABLE . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(239) type : name . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(231) parameter_list : non_empty_parameter_list . no_comma 
		[ ')' ]
	(234) non_empty_parameter_list : non_empty_parameter_list . ',' parameter 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(233) non_empty_parameter_list : parameter . 
		[ ',' ')' ]
state unknown:
	(235) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE '=' expr 
		[ ',' ')' ]
	(174) optional_ref : . 
		[ T_VARIABLE T_ELLIPSIS ]
state unknown:
	(243) optional_param_type : type_expr . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
state unknown:
	(237) type_expr : type . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(126) constant_declaration : T_STRING '=' expr . 
		[ error ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' constant_declaration . 
		[ error ',' ';' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' . catches optional_finally 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(164) catches : . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(118) unprefixed_use_declaration : namespace_name T_AS T_STRING . 
		[ error ',' ';' '}' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(99) top_statement : T_USE use_type use_declarations semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(112) non_empty_use_declarations : non_empty_use_declarations ',' use_declaration . 
		[ error ',' ';' ]
state unknown:
	(254) non_empty_global_var_list : non_empty_global_var_list ',' global_var . 
		[ error ',' ';' ]
state unknown:
	(261) static_var : T_VARIABLE '=' expr . 
		[ error ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(258) non_empty_static_var_list : non_empty_static_var_list ',' static_var . 
		[ error ',' ';' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list ')' . semi 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(173) non_empty_variables_list : non_empty_variables_list ',' . variable 
		[ ',' ')' ]
state unknown:
	(171) variables_list : non_empty_variables_list no_comma . 
		[ ')' ]
state unknown:
	(362) expr : T_ISSET '(' variables_list ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(192) non_empty_class_name_list : class_name . 
		[ ',' ';' '{' ]
state unknown:
	(188) interface_extends_list : T_EXTENDS class_name_list . 
		[ '{' ]
state unknown:
	(191) class_name_list : non_empty_class_name_list . no_comma 
		[ ';' '{' ]
	(193) non_empty_class_name_list : non_empty_class_name_list . ',' class_name 
		[ ',' ';' '{' ]
	(87) no_comma : . 
		[ ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' . class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(479) list_expr_element : expr T_DOUBLE_ARROW . variable 
		[ ',' ')' ]
	(480) list_expr_element : expr T_DOUBLE_ARROW . list_expr 
		[ ',' ')' ]
state unknown:
	(475) list_expr_elements : list_expr_elements ',' . list_expr_element 
		[ ',' ')' ]
	(481) list_expr_element : . 
		[ ',' ')' ]
state unknown:
	(474) list_expr : T_LIST '(' list_expr_elements ')' . 
		[ ',' '=' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(502) encaps_var : T_CURLY_OPEN variable '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(505) encaps_var_offset : '-' . T_NUM_STRING 
		[ ']' ]
state unknown:
	(503) encaps_var_offset : T_STRING . 
		[ ']' ]
state unknown:
	(506) encaps_var_offset : T_VARIABLE . 
		[ ']' ]
state unknown:
	(504) encaps_var_offset : T_NUM_STRING . 
		[ ']' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' encaps_var_offset . ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR T_STRING . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' top_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(457) simple_variable : '$' '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr '?' ':' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(359) expr : expr '?' expr ':' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(308) expr : variable '=' '&' variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(251) argument : '&' variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(252) argument : T_ELLIPSIS expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(249) non_empty_argument_list : non_empty_argument_list ',' . argument 
		[ ',' ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list no_comma . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(186) extends_from : T_EXTENDS class_name . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(190) implements_list : T_IMPLEMENTS . class_name_list 
		[ '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list . '{' class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(468) member_name : '{' expr . '}' 
		[ '(' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(471) property_name : '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(450) callable_variable : dereferencable '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(487) array_pair : expr T_DOUBLE_ARROW '&' variable . 
		[ ',' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list . '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(463) new_variable : new_variable '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' . inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement . elseif_list else_single 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(217) elseif_list : . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr . ')' ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(216) while_statement : ':' . inner_statement_list T_ENDWHILE ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(215) while_statement : statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr ')' while_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr . ';' for_expr ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(228) foreach_variable : '&' . variable 
		[ ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable . ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable . T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(227) foreach_variable : variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(229) foreach_variable : list_expr . 
		[ ')' ]
state unknown:
	(230) foreach_variable : array_short_syntax . 
		[ ')' ]
	(421) dereferencable_scalar : array_short_syntax . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' '(' ]
state unknown:
	(204) declare_list_element : T_STRING '=' expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(200) declare_statement : ':' . inner_statement_list T_ENDDECLARE ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(199) declare_statement : ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(198) declare_statement : non_empty_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' declare_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(203) non_empty_declare_list : non_empty_declare_list ',' declare_list_element . 
		[ ',' ')' ]
state unknown:
	(207) switch_case_list : ':' . case_list T_ENDSWITCH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(208) switch_case_list : ':' . ';' case_list T_ENDSWITCH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(205) switch_case_list : '{' . case_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(206) switch_case_list : '{' . ';' case_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr ')' switch_case_list . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list . ')' optional_return_type '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(238) type_expr : '?' type . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(390) lexical_vars : . 
		[ ':' '{' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(234) non_empty_parameter_list : non_empty_parameter_list ',' . parameter 
		[ ',' ')' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
state unknown:
	(231) parameter_list : non_empty_parameter_list no_comma . 
		[ ')' ]
state unknown:
	(235) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE '=' expr 
		[ ',' ')' ]
	(176) optional_ellipsis : . 
		[ T_VARIABLE ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches . optional_finally 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(165) catches : catches . catch 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(169) optional_finally : . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(122) inline_use_declaration : use_type . unprefixed_use_declaration 
		[ ',' '}' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(121) inline_use_declaration : unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(114) inline_use_declarations : non_empty_inline_use_declarations . optional_comma 
		[ '}' ]
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations . ',' inline_use_declaration 
		[ ',' '}' ]
	(89) optional_comma : . 
		[ '}' ]
state unknown:
	(116) non_empty_inline_use_declarations : inline_use_declaration . 
		[ ',' '}' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list ')' semi . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(173) non_empty_variables_list : non_empty_variables_list ',' variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(267) class_statement : T_USE . class_name_list trait_adaptations 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(291) member_modifier : T_STATIC . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(292) member_modifier : T_ABSTRACT . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(293) member_modifier : T_FINAL . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(290) member_modifier : T_PRIVATE . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(289) member_modifier : T_PROTECTED . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(288) member_modifier : T_PUBLIC . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(283) variable_modifiers : T_VAR . 
		[ T_VARIABLE ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(262) class_statement_list : class_statement_list class_statement . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(264) class_statement : variable_modifiers . property_declaration_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(265) class_statement : method_modifiers . T_CONST class_const_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(266) class_statement : method_modifiers . T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(286) non_empty_member_modifiers : member_modifier . 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(282) variable_modifiers : non_empty_member_modifiers . 
		[ T_VARIABLE ]
	(285) method_modifiers : non_empty_member_modifiers . 
		[ T_FUNCTION T_CONST ]
	(287) non_empty_member_modifiers : non_empty_member_modifiers . member_modifier 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(88) no_comma : ',' . 
		[ ';' '{' ]
	(193) non_empty_class_name_list : non_empty_class_name_list ',' . class_name 
		[ ',' ';' '{' ]
state unknown:
	(191) class_name_list : non_empty_class_name_list no_comma . 
		[ ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(479) list_expr_element : expr T_DOUBLE_ARROW variable . 
		[ ',' ')' ]
state unknown:
	(480) list_expr_element : expr T_DOUBLE_ARROW list_expr . 
		[ ',' ')' ]
state unknown:
	(475) list_expr_elements : list_expr_elements ',' list_expr_element . 
		[ ',' ')' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(505) encaps_var_offset : '-' T_NUM_STRING . 
		[ ']' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' encaps_var_offset ']' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr '?' expr ':' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(249) non_empty_argument_list : non_empty_argument_list ',' argument . 
		[ ',' ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list no_comma ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(190) implements_list : T_IMPLEMENTS class_name_list . 
		[ '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' . class_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(468) member_name : '{' expr '}' . 
		[ '(' ]
state unknown:
	(471) property_name : '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' . class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list . new_elseif_list new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(220) new_elseif_list : . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list . else_single 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(218) elseif_list : elseif_list . elseif 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(223) else_single : . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list . T_ENDWHILE ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' . for_expr ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ')' ]
state unknown:
	(228) foreach_variable : '&' variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' . foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW . foreach_variable ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list . T_ENDDECLARE ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' . case_list T_ENDSWITCH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(207) switch_case_list : ':' case_list . T_ENDSWITCH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(206) switch_case_list : '{' ';' . case_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' case_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' . optional_return_type '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(244) optional_return_type : . 
		[ '{' ]
state unknown:
	(391) lexical_vars : T_USE . '(' lexical_var_list ')' 
		[ ':' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(244) optional_return_type : . 
		[ '{' ]
state unknown:
	(234) non_empty_parameter_list : non_empty_parameter_list ',' parameter . 
		[ ',' ')' ]
state unknown:
	(177) optional_ellipsis : T_ELLIPSIS . 
		[ T_VARIABLE ]
state unknown:
	(235) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE '=' expr 
		[ ',' ')' ]
state unknown:
	(168) catch : T_CATCH . '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY . '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches optional_finally . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(165) catches : catches catch . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(122) inline_use_declaration : use_type unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(90) optional_comma : ',' . 
		[ '}' ]
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' . inline_use_declaration 
		[ ',' '}' ]
state unknown:
	(114) inline_use_declarations : non_empty_inline_use_declarations optional_comma . 
		[ '}' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations . optional_comma 
		[ '}' ]
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations . ',' unprefixed_use_declaration 
		[ ',' '}' ]
	(89) optional_comma : . 
		[ '}' ]
state unknown:
	(110) non_empty_unprefixed_use_declarations : unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(390) lexical_vars : . 
		[ ':' '{' ]
state unknown:
	(267) class_statement : T_USE class_name_list . trait_adaptations 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(297) property_declaration : T_VARIABLE . 
		[ ',' ';' ]
	(298) property_declaration : T_VARIABLE . '=' expr 
		[ ',' ';' ]
state unknown:
	(264) class_statement : variable_modifiers property_declaration_list . ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(294) property_declaration_list : non_empty_property_declaration_list . no_comma 
		[ ';' ]
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list . ',' property_declaration 
		[ ',' ';' ]
	(87) no_comma : . 
		[ ';' ]
state unknown:
	(295) non_empty_property_declaration_list : property_declaration . 
		[ ',' ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION . optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
state unknown:
	(265) class_statement : method_modifiers T_CONST . class_const_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(287) non_empty_member_modifiers : non_empty_member_modifiers member_modifier . 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(193) non_empty_class_name_list : non_empty_class_name_list ',' class_name . 
		[ ',' ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list . new_else_single T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(221) new_elseif_list : new_elseif_list . new_elseif 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(225) new_else_single : . 
		[ T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF . '(' expr ')' statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(224) else_single : T_ELSE . statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list else_single . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(218) elseif_list : elseif_list elseif . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list T_ENDWHILE . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr . ')' for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' . inner_statement_list T_ENDFOREACH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_ENDFOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(196) foreach_statement : statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable . ')' foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(227) foreach_variable : variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list . T_ENDSWITCH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(207) switch_case_list : ':' case_list T_ENDSWITCH . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE . expr case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(212) case : T_DEFAULT . case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(210) case_list : case_list case . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(206) switch_case_list : '{' ';' case_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' case_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(245) optional_return_type : ':' . type_expr 
		[ ';' '{' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type . '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(391) lexical_vars : T_USE '(' . lexical_var_list ')' 
		[ ':' '{' ]
	(174) optional_ref : . 
		[ T_VARIABLE ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(235) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . '=' expr 
		[ ',' ')' ]
state unknown:
	(168) catch : T_CATCH '(' . name_union T_VARIABLE ')' '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY '{' . inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' inline_use_declaration . 
		[ ',' '}' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(90) optional_comma : ',' . 
		[ '}' ]
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' . unprefixed_use_declaration 
		[ ',' '}' ]
state unknown:
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations optional_comma . 
		[ '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(244) optional_return_type : . 
		[ '{' ]
state unknown:
	(268) trait_adaptations : ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(269) trait_adaptations : '{' . trait_adaptation_list '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(270) trait_adaptation_list : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(267) class_statement : T_USE class_name_list trait_adaptations . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(298) property_declaration : T_VARIABLE '=' . expr 
		[ ',' ';' ]
state unknown:
	(264) class_statement : variable_modifiers property_declaration_list ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(88) no_comma : ',' . 
		[ ';' ]
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' . property_declaration 
		[ ',' ';' ]
state unknown:
	(294) property_declaration_list : non_empty_property_declaration_list no_comma . 
		[ ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref . identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(130) class_const : identifier . '=' expr 
		[ ',' ';' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST class_const_list . ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(127) class_const_list : non_empty_class_const_list . no_comma 
		[ ';' ]
	(128) non_empty_class_const_list : non_empty_class_const_list . ',' class_const 
		[ ',' ';' ]
	(87) no_comma : . 
		[ ';' ]
state unknown:
	(129) non_empty_class_const_list : class_const . 
		[ ',' ';' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(222) new_elseif : T_ELSEIF . '(' expr ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(226) new_else_single : T_ELSE . ':' inner_statement_list 
		[ T_ENDIF ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single . T_ENDIF ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(221) new_elseif_list : new_elseif_list new_elseif . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF '(' . expr ')' statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(224) else_single : T_ELSE statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list T_ENDWHILE ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' . for_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list . T_ENDFOREACH ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' . foreach_statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(207) switch_case_list : ':' case_list T_ENDSWITCH ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr . case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(213) case_separator : ':' . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(214) case_separator : ';' . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(212) case : T_DEFAULT case_separator . inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(206) switch_case_list : '{' ';' case_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(245) optional_return_type : ':' type_expr . 
		[ ';' '{' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' . inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(395) lexical_var : optional_ref . T_VARIABLE 
		[ ',' ')' ]
state unknown:
	(391) lexical_vars : T_USE '(' lexical_var_list . ')' 
		[ ':' '{' ]
state unknown:
	(392) lexical_var_list : non_empty_lexical_var_list . no_comma 
		[ ')' ]
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list . ',' lexical_var 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(393) non_empty_lexical_var_list : lexical_var . 
		[ ',' ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' . expr 
		[ ',' ')' ]
state unknown:
	(167) name_union : name_union . '|' name 
		[ '|' T_VARIABLE ]
	(168) catch : T_CATCH '(' name_union . T_VARIABLE ')' '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(166) name_union : name . 
		[ '|' T_VARIABLE ]
state unknown:
	(170) optional_finally : T_FINALLY '{' inner_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(269) trait_adaptations : '{' trait_adaptation_list . '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(271) trait_adaptation_list : trait_adaptation_list . trait_adaptation 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(298) property_declaration : T_VARIABLE '=' expr . 
		[ ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' property_declaration . 
		[ ',' ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier . '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(130) class_const : identifier '=' . expr 
		[ ',' ';' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST class_const_list ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(88) no_comma : ',' . 
		[ ';' ]
	(128) non_empty_class_const_list : non_empty_class_const_list ',' . class_const 
		[ ',' ';' ]
state unknown:
	(127) class_const_list : non_empty_class_const_list no_comma . 
		[ ';' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' . expr ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(226) new_else_single : T_ELSE ':' . inner_statement_list 
		[ T_ENDIF ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr . ')' statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(195) for_statement : ':' . inner_statement_list T_ENDFOR ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_ENDFOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(194) for_statement : statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr case_separator . inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(212) case : T_DEFAULT case_separator inner_statement_list . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(395) lexical_var : optional_ref T_VARIABLE . 
		[ ',' ')' ]
state unknown:
	(391) lexical_vars : T_USE '(' lexical_var_list ')' . 
		[ ':' '{' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' . lexical_var 
		[ ',' ')' ]
	(174) optional_ref : . 
		[ T_VARIABLE ]
state unknown:
	(392) lexical_var_list : non_empty_lexical_var_list no_comma . 
		[ ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(167) name_union : name_union '|' . name 
		[ '|' T_VARIABLE ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE . ')' '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY '{' inner_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(80) identifier : T_STRING . 
		[ T_AS ]
	(82) namespace_name_parts : T_STRING . 
		[ T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR ]
state unknown:
	(60) reserved_non_modifiers : T_NAMESPACE . 
		[ T_AS ]
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(269) trait_adaptations : '{' trait_adaptation_list '}' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(279) trait_method_reference : identifier . 
		[ T_AS ]
state unknown:
	(277) trait_method_reference_fully_qualified : name . T_PAAMAYIM_NEKUDOTAYIM identifier 
		[ T_AS T_INSTEADOF ]
state unknown:
	(271) trait_adaptation_list : trait_adaptation_list trait_adaptation . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified . T_INSTEADOF class_name_list ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(278) trait_method_reference : trait_method_reference_fully_qualified . 
		[ T_AS ]
state unknown:
	(273) trait_adaptation : trait_method_reference . T_AS member_modifier identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference . T_AS member_modifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(275) trait_adaptation : trait_method_reference . T_AS T_STRING ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(276) trait_adaptation : trait_method_reference . T_AS reserved_non_modifiers ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' . parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(130) class_const : identifier '=' expr . 
		[ ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(128) non_empty_class_const_list : non_empty_class_const_list ',' class_const . 
		[ ',' ';' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr . ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(226) new_else_single : T_ELSE ':' inner_statement_list . 
		[ T_ENDIF ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr ')' . statement 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list . T_ENDFOR ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr case_separator inner_statement_list . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' lexical_var . 
		[ ',' ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(167) name_union : name_union '|' name . 
		[ '|' T_VARIABLE ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' . '{' inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM . identifier 
		[ T_AS T_INSTEADOF ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF . class_name_list ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS . member_modifier identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference T_AS . member_modifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(275) trait_adaptation : trait_method_reference T_AS . T_STRING ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(276) trait_adaptation : trait_method_reference T_AS . reserved_non_modifiers ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list . ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' . ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr ')' statement . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list T_ENDFOR . ';' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' . inner_statement_list '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM identifier . 
		[ T_AS T_INSTEADOF ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(275) trait_adaptation : trait_method_reference T_AS T_STRING . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier . identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference T_AS member_modifier . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' . optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(244) optional_return_type : . 
		[ ';' '{' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' . inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list T_ENDFOR ';' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list . '}' 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(275) trait_adaptation : trait_method_reference T_AS T_STRING ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(274) trait_adaptation : trait_method_reference T_AS member_modifier ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type . method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' inner_statement_list . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' . 
		[ EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(280) method_body : ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' . inner_statement_list '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' inner_statement_list . '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' inner_statement_list '}' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state 0
	(0) $start : . start 
	(3) top_statement_list_ex : . 

	start		goto 388
	top_statement_list	goto 575
	top_statement_list_ex	goto 2
	@nil		reduce (3)

state 1
	(131) inner_statement_list_ex : inner_statement_list_ex . inner_statement 
	(133) inner_statement_list : inner_statement_list_ex . 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_ELSEIF	reduce (133)
	T_ELSE		reduce (133)
	T_ENDIF		reduce (133)
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_ENDWHILE	reduce (133)
	T_FOR		shift 393
	T_ENDFOR	reduce (133)
	T_FOREACH	shift 394
	T_ENDFOREACH	reduce (133)
	T_DECLARE	shift 395
	T_ENDDECLARE	reduce (133)
	T_SWITCH	shift 396
	T_ENDSWITCH	reduce (133)
	T_CASE		reduce (133)
	T_DEFAULT	reduce (133)
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 345
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_ABSTRACT	shift 399
	T_FINAL		shift 400
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_HALT_COMPILER	shift 668
	T_CLASS		shift 583
	T_TRAIT		shift 404
	T_INTERFACE	shift 405
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'}'		reduce (133)
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 669
	function_declaration_statement	goto 670
	class_declaration_statement	goto 671
	expr		goto 133
	inner_statement	goto 672
	non_empty_statement	goto 597
	variable	goto 202
	name		goto 294
	class_entry_type	goto 409
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 2
	(2) top_statement_list_ex : top_statement_list_ex . top_statement 
	(4) top_statement_list : top_statement_list_ex . 

	EOF		reduce (4)
	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 345
	T_CONST		shift 334
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_USE		shift 253
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_ABSTRACT	shift 399
	T_FINAL		shift 400
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_HALT_COMPILER	shift 582
	T_CLASS		shift 583
	T_TRAIT		shift 404
	T_INTERFACE	shift 405
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 273
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'}'		reduce (4)
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	top_statement	goto 593
	namespace_name_parts	goto 408
	statement	goto 594
	function_declaration_statement	goto 595
	class_declaration_statement	goto 596
	group_use_declaration	goto 293
	expr		goto 133
	non_empty_statement	goto 597
	variable	goto 202
	name		goto 294
	class_entry_type	goto 409
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 3
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . member_name argument_list 
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . identifier 
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . error 
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	error		shift 680
	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 699
	T_VARIABLE	shift 579
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	'{'		shift 121
	'$'		shift 263
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 468
	simple_variable	goto 469
	member_name	goto 365
	@nil		error

state 4
	(269) trait_adaptations : '{' trait_adaptation_list . '}' 
	(271) trait_adaptation_list : trait_adaptation_list . trait_adaptation 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 529
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 530
	T_NS_C		shift 754
	T_DIR		shift 755
	T_NS_SEPARATOR	shift 346
	'}'		shift 895
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 896
	namespace_name_parts	goto 408
	name		goto 531
	trait_adaptation	goto 897
	trait_method_reference_fully_qualified	goto 532
	trait_method_reference	goto 533
	@nil		error

state 5
	(273) trait_adaptation : trait_method_reference T_AS member_modifier . identifier ';' 
	(274) trait_adaptation : trait_method_reference T_AS member_modifier . ';' 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 699
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	';'		shift 914
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 544
	@nil		error

state 6
	(265) class_statement : method_modifiers T_CONST . class_const_list ';' 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 699
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 512
	class_const_list	goto 513
	non_empty_class_const_list	goto 385
	class_const	goto 866
	@nil		error

state 7
	(88) no_comma : ',' . 
	(128) non_empty_class_const_list : non_empty_class_const_list ',' . class_const 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 699
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 512
	class_const	goto 898
	@nil		reduce (88)

state 8
	(266) class_statement : method_modifiers T_FUNCTION optional_ref . identifier '(' parameter_list ')' optional_return_type method_body 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 699
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 523
	@nil		error

state 9
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM . identifier 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 699
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 728
	T_ABSTRACT	shift 729
	T_FINAL		shift 730
	T_PRIVATE	shift 731
	T_PROTECTED	shift 732
	T_PUBLIC	shift 733
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	reserved_non_modifiers	goto 756
	semi_reserved	goto 757
	identifier	goto 909
	@nil		error

state 10
	(273) trait_adaptation : trait_method_reference T_AS . member_modifier identifier ';' 
	(274) trait_adaptation : trait_method_reference T_AS . member_modifier ';' 
	(275) trait_adaptation : trait_method_reference T_AS . T_STRING ';' 
	(276) trait_adaptation : trait_method_reference T_AS . reserved_non_modifiers ';' 

	T_INCLUDE	shift 681
	T_INCLUDE_ONCE	shift 682
	T_EVAL		shift 683
	T_REQUIRE	shift 684
	T_REQUIRE_ONCE	shift 685
	T_LOGICAL_OR	shift 686
	T_LOGICAL_XOR	shift 687
	T_LOGICAL_AND	shift 688
	T_PRINT		shift 689
	T_YIELD		shift 690
	T_INSTANCEOF	shift 691
	T_NEW		shift 692
	T_CLONE		shift 693
	T_EXIT		shift 694
	T_IF		shift 695
	T_ELSEIF	shift 696
	T_ELSE		shift 697
	T_ENDIF		shift 698
	T_STRING	shift 541
	T_ECHO		shift 700
	T_DO		shift 701
	T_WHILE		shift 702
	T_ENDWHILE	shift 703
	T_FOR		shift 704
	T_ENDFOR	shift 705
	T_FOREACH	shift 706
	T_ENDFOREACH	shift 707
	T_DECLARE	shift 708
	T_ENDDECLARE	shift 709
	T_AS		shift 710
	T_SWITCH	shift 711
	T_ENDSWITCH	shift 712
	T_CASE		shift 713
	T_DEFAULT	shift 714
	T_BREAK		shift 715
	T_CONTINUE	shift 716
	T_GOTO		shift 717
	T_FUNCTION	shift 718
	T_CONST		shift 719
	T_RETURN	shift 720
	T_TRY		shift 721
	T_CATCH		shift 722
	T_FINALLY	shift 723
	T_THROW		shift 724
	T_USE		shift 725
	T_INSTEADOF	shift 726
	T_GLOBAL	shift 727
	T_STATIC	shift 818
	T_ABSTRACT	shift 819
	T_FINAL		shift 820
	T_PRIVATE	shift 821
	T_PROTECTED	shift 822
	T_PUBLIC	shift 823
	T_VAR		shift 734
	T_UNSET		shift 735
	T_ISSET		shift 736
	T_EMPTY		shift 737
	T_HALT_COMPILER	shift 738
	T_CLASS		shift 739
	T_TRAIT		shift 740
	T_INTERFACE	shift 741
	T_EXTENDS	shift 742
	T_IMPLEMENTS	shift 743
	T_LIST		shift 744
	T_ARRAY		shift 745
	T_CALLABLE	shift 746
	T_CLASS_C	shift 747
	T_TRAIT_C	shift 748
	T_METHOD_C	shift 749
	T_FUNC_C	shift 750
	T_LINE		shift 751
	T_FILE		shift 752
	T_NAMESPACE	shift 753
	T_NS_C		shift 754
	T_DIR		shift 755
	reserved_non_modifiers	goto 542
	member_modifier	goto 5
	@nil		error

state 11
	(141) non_empty_statement : T_WHILE '(' expr ')' . while_statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 551
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 805
	expr		goto 133
	non_empty_statement	goto 597
	while_statement	goto 806
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 12
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' . foreach_statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 553
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 854
	expr		goto 133
	non_empty_statement	goto 597
	foreach_statement	goto 855
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 13
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' . for_statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 559
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 886
	expr		goto 133
	non_empty_statement	goto 597
	for_statement	goto 887
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 14
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' . foreach_statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 553
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 854
	expr		goto 133
	non_empty_statement	goto 597
	foreach_statement	goto 888
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 15
	(139) non_empty_statement : T_IF '(' expr ')' . statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' expr ')' . ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 550
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 568
	expr		goto 133
	non_empty_statement	goto 597
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 16
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' . declare_statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 552
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 808
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 133
	non_empty_statement	goto 809
	variable	goto 202
	declare_statement	goto 810
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 17
	(142) non_empty_statement : T_DO . statement T_WHILE '(' expr ')' ';' 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 433
	expr		goto 133
	non_empty_statement	goto 597
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 18
	(224) else_single : T_ELSE . statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 871
	expr		goto 133
	non_empty_statement	goto 597
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 19
	(219) elseif : T_ELSEIF '(' expr ')' . statement 

	error		shift 576
	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_IF		shift 390
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 391
	T_VARIABLE	shift 579
	T_INLINE_HTML	shift 580
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_ECHO		shift 32
	T_DO		shift 17
	T_WHILE		shift 392
	T_FOR		shift 393
	T_FOREACH	shift 394
	T_DECLARE	shift 395
	T_SWITCH	shift 396
	T_BREAK		shift 34
	T_CONTINUE	shift 35
	T_GOTO		shift 397
	T_FUNCTION	shift 348
	T_RETURN	shift 36
	T_TRY		shift 398
	T_THROW		shift 62
	T_GLOBAL	shift 285
	T_STATIC	shift 287
	T_UNSET		shift 401
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	';'		shift 592
	'{'		shift 546
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	statement	goto 907
	expr		goto 133
	non_empty_statement	goto 597
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 20
	(246) argument_list : '(' . ')' 
	(247) argument_list : '(' . non_empty_argument_list no_comma ')' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 223
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	T_ELLIPSIS	shift 120
	'('		shift 63
	')'		shift 678
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 163
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	non_empty_argument_list	goto 363
	argument	goto 679
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 21
	(88) no_comma : ',' . 
	(249) non_empty_argument_list : non_empty_argument_list ',' . argument 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 223
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	T_ELLIPSIS	shift 120
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 163
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	argument	goto 834
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (88)

state 22
	(419) array_short_syntax : '[' . array_pair_list ']' 
	(489) array_pair : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 220
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 136
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	array_pair_list	goto 430
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	inner_array_pair_list	goto 431
	array_pair	goto 607
	@nil		reduce (489)

state 23
	(420) dereferencable_scalar : T_ARRAY '(' . array_pair_list ')' 
	(489) array_pair : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 220
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 136
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	array_pair_list	goto 462
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	inner_array_pair_list	goto 431
	array_pair	goto 607
	@nil		reduce (489)

state 24
	(483) inner_array_pair_list : inner_array_pair_list ',' . array_pair 
	(489) array_pair : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 220
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 136
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	array_pair	goto 763
	@nil		reduce (489)

state 25
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . expr '}' 
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '}' 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_STRING_VARNAME	shift 318
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 146
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 26
	(359) expr : expr '?' . expr ':' expr 
	(360) expr : expr '?' . ':' expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	':'		shift 119
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 148
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 27
	(307) expr : variable '=' . expr 
	(308) expr : variable '=' . '&' variable 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 222
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 179
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 28
	(485) array_pair : expr T_DOUBLE_ARROW . expr 
	(487) array_pair : expr T_DOUBLE_ARROW . '&' variable 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'&'		shift 224
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 164
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 29
	(143) non_empty_statement : T_FOR '(' . for_expr ';' for_expr ';' for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 161
	for_expr	goto 449
	expr_list	goto 645
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	non_empty_expr_list	goto 349
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (302)

state 30
	(143) non_empty_statement : T_FOR '(' for_expr ';' . for_expr ';' for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 161
	for_expr	goto 482
	expr_list	goto 645
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	non_empty_expr_list	goto 349
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (302)

state 31
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' . for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 161
	for_expr	goto 503
	expr_list	goto 645
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	non_empty_expr_list	goto 349
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (302)

state 32
	(150) non_empty_statement : T_ECHO . expr_list semi 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 161
	expr_list	goto 295
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	non_empty_expr_list	goto 349
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 33
	(474) list_expr : T_LIST '(' . list_expr_elements ')' 
	(481) list_expr_element : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 145
	variable	goto 199
	name		goto 294
	class_name	goto 598
	list_expr	goto 461
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	list_expr_elements	goto 317
	list_expr_element	goto 661
	@nil		reduce (481)

state 34
	(145) non_empty_statement : T_BREAK . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 296
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 35
	(146) non_empty_statement : T_CONTINUE . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 297
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 36
	(147) non_empty_statement : T_RETURN . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 300
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 37
	(410) exit_expr : '(' . optional_expr ')' 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 447
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 38
	(448) callable_variable : dereferencable '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 470
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 39
	(449) callable_variable : constant '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 471
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 40
	(462) new_variable : new_variable '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 162
	optional_expr	goto 473
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (439)

state 41
	(475) list_expr_elements : list_expr_elements ',' . list_expr_element 
	(481) list_expr_element : . 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 145
	variable	goto 199
	name		goto 294
	class_name	goto 598
	list_expr	goto 461
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	list_expr_element	goto 830
	@nil		reduce (481)

state 42
	(364) expr : T_INCLUDE . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 157
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 43
	(365) expr : T_INCLUDE_ONCE . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 158
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 44
	(367) expr : T_REQUIRE . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 159
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 45
	(368) expr : T_REQUIRE_ONCE . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 160
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 46
	(380) expr : T_PRINT . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 176
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 47
	(381) expr : T_YIELD . 
	(382) expr : T_YIELD . expr 
	(383) expr : T_YIELD . expr T_DOUBLE_ARROW expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 174
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (381)

state 48
	(384) expr : T_YIELD_FROM . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 177
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 49
	(344) expr : '+' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 417
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 50
	(345) expr : '-' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 418
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 51
	(346) expr : '!' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 312
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 52
	(347) expr : '~' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 419
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 53
	(369) expr : T_INT_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 422
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 54
	(370) expr : T_DOUBLE_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 423
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 55
	(371) expr : T_STRING_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 424
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 56
	(372) expr : T_ARRAY_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 425
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 57
	(373) expr : T_OBJECT_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 426
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 58
	(374) expr : T_BOOL_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 427
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 59
	(375) expr : T_UNSET_CAST . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 428
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 60
	(377) expr : '@' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 429
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 61
	(310) expr : T_CLONE . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 612
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 62
	(158) non_empty_statement : T_THROW . expr semi 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 134
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 63
	(358) expr : '(' . expr ')' 
	(442) dereferencable : '(' . expr ')' 
	(445) callable_expr : '(' . expr ')' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 137
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 64
	(366) expr : T_EVAL '(' . expr ')' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 138
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 65
	(442) dereferencable : '(' . expr ')' 
	(445) callable_expr : '(' . expr ')' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 139
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 66
	(139) non_empty_statement : T_IF '(' . expr ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' . expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 140
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 67
	(141) non_empty_statement : T_WHILE '(' . expr ')' while_statement 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 141
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 68
	(154) non_empty_statement : T_FOREACH '(' . expr T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' . expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 142
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 69
	(144) non_empty_statement : T_SWITCH '(' . expr ')' switch_case_list 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 143
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 70
	(363) expr : T_EMPTY '(' . expr ')' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 144
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 71
	(457) simple_variable : '$' '{' . expr '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 147
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 72
	(329) expr : expr T_LOGICAL_OR . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 173
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 73
	(331) expr : expr T_LOGICAL_XOR . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 175
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 74
	(330) expr : expr T_LOGICAL_AND . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 178
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 75
	(361) expr : expr T_COALESCE . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 194
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 76
	(327) expr : expr T_BOOLEAN_OR . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 197
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 77
	(328) expr : expr T_BOOLEAN_AND . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 198
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 78
	(332) expr : expr '|' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 200
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 79
	(334) expr : expr '^' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 201
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 80
	(333) expr : expr '&' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 203
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 81
	(350) expr : expr T_IS_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 204
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 82
	(351) expr : expr T_IS_NOT_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 205
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 83
	(348) expr : expr T_IS_IDENTICAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 206
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 84
	(349) expr : expr T_IS_NOT_IDENTICAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 207
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 85
	(352) expr : expr T_SPACESHIP . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 208
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 86
	(353) expr : expr '<' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 209
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 87
	(354) expr : expr T_IS_SMALLER_OR_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 210
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 88
	(355) expr : expr '>' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 211
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 89
	(356) expr : expr T_IS_GREATER_OR_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 212
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 90
	(341) expr : expr T_SL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 232
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 91
	(342) expr : expr T_SR . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 233
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 92
	(336) expr : expr '+' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 250
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 93
	(337) expr : expr '-' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 251
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 94
	(335) expr : expr '.' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 252
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 95
	(338) expr : expr '*' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 319
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 96
	(339) expr : expr '/' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 320
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 97
	(340) expr : expr '%' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 321
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 98
	(343) expr : expr T_POW . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 467
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 99
	(311) expr : variable T_PLUS_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 180
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 100
	(312) expr : variable T_MINUS_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 181
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 101
	(313) expr : variable T_MUL_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 182
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 102
	(314) expr : variable T_DIV_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 183
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 103
	(315) expr : variable T_CONCAT_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 184
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 104
	(316) expr : variable T_MOD_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 185
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 105
	(317) expr : variable T_AND_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 186
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 106
	(318) expr : variable T_OR_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 187
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 107
	(319) expr : variable T_XOR_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 188
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 108
	(320) expr : variable T_SL_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 189
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 109
	(321) expr : variable T_SR_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 190
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 110
	(322) expr : variable T_POW_EQUAL . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 191
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 111
	(305) expr : list_expr '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 192
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 112
	(306) expr : array_short_syntax '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 193
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 113
	(450) callable_variable : dereferencable '{' . expr '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 149
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 114
	(383) expr : T_YIELD expr T_DOUBLE_ARROW . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 762
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 115
	(463) new_variable : new_variable '{' . expr '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 150
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 116
	(88) no_comma : ',' . 
	(300) non_empty_expr_list : non_empty_expr_list ',' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 165
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (88)

state 117
	(126) constant_declaration : T_STRING '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 166
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 118
	(261) static_var : T_VARIABLE '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 167
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 119
	(360) expr : expr '?' ':' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 195
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 120
	(252) argument : T_ELLIPSIS . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 168
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 121
	(468) member_name : '{' . expr '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 151
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 122
	(471) property_name : '{' . expr '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 152
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 123
	(142) non_empty_statement : T_DO statement T_WHILE '(' . expr ')' ';' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 153
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 124
	(204) declare_list_element : T_STRING '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 169
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 125
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}' 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 154
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 126
	(359) expr : expr '?' expr ':' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 196
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 127
	(211) case : T_CASE . expr case_separator inner_statement_list 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 135
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 128
	(298) property_declaration : T_VARIABLE '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 170
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 129
	(219) elseif : T_ELSEIF '(' . expr ')' statement 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 155
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 130
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 171
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 131
	(130) class_const : identifier '=' . expr 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 172
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 132
	(222) new_elseif : T_ELSEIF '(' . expr ')' ':' inner_statement_list 

	T_INCLUDE	shift 42
	T_INCLUDE_ONCE	shift 43
	T_EVAL		shift 389
	T_REQUIRE	shift 44
	T_REQUIRE_ONCE	shift 45
	T_PRINT		shift 46
	T_YIELD		shift 47
	T_YIELD_FROM	shift 48
	'+'		shift 49
	'-'		shift 50
	'!'		shift 51
	'~'		shift 52
	T_INC		shift 218
	T_DEC		shift 219
	T_INT_CAST	shift 53
	T_DOUBLE_CAST	shift 54
	T_STRING_CAST	shift 55
	T_ARRAY_CAST	shift 56
	T_OBJECT_CAST	shift 57
	T_BOOL_CAST	shift 58
	T_UNSET_CAST	shift 59
	'@'		shift 60
	'['		shift 22
	T_NEW		shift 231
	T_CLONE		shift 61
	T_EXIT		shift 344
	T_LNUMBER	shift 577
	T_DNUMBER	shift 578
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_FUNCTION	shift 348
	T_STATIC	shift 415
	T_ISSET		shift 402
	T_EMPTY		shift 403
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_CLASS_C	shift 584
	T_TRAIT_C	shift 585
	T_METHOD_C	shift 586
	T_FUNC_C	shift 587
	T_LINE		shift 588
	T_FILE		shift 589
	T_START_HEREDOC	shift 242
	T_NAMESPACE	shift 416
	T_NS_C		shift 590
	T_DIR		shift 591
	T_NS_SEPARATOR	shift 346
	'('		shift 63
	'`'		shift 254
	'"'		shift 259
	'$'		shift 263
	namespace_name_parts	goto 408
	expr		goto 156
	variable	goto 202
	name		goto 294
	class_name	goto 598
	list_expr	goto 410
	array_short_syntax	goto 411
	simple_variable	goto 599
	new_expr	goto 600
	scalar		goto 601
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 413
	dereferencable_scalar	goto 248
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 133
	(152) non_empty_statement : expr . semi 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	error		shift 632
	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	';'		shift 633
	semi		goto 635
	@nil		error

state 134
	(158) non_empty_statement : T_THROW expr . semi 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	error		shift 632
	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	';'		shift 633
	semi		goto 653
	@nil		error

state 135
	(211) case : T_CASE expr . case_separator inner_statement_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	':'		shift 875
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	';'		shift 876
	case_separator	goto 560
	@nil		error

state 136
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(485) array_pair : expr . T_DOUBLE_ARROW expr 
	(486) array_pair : expr . 
	(487) array_pair : expr . T_DOUBLE_ARROW '&' variable 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	T_DOUBLE_ARROW	shift 28
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (486)

state 137
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(358) expr : '(' expr . ')' 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(442) dereferencable : '(' expr . ')' 
	(445) callable_expr : '(' expr . ')' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 249
	@nil		error

state 138
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(366) expr : T_EVAL '(' expr . ')' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 761
	@nil		error

state 139
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(442) dereferencable : '(' expr . ')' 
	(445) callable_expr : '(' expr . ')' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 472
	@nil		error

state 140
	(139) non_empty_statement : T_IF '(' expr . ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' expr . ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 15
	@nil		error

state 141
	(141) non_empty_statement : T_WHILE '(' expr . ')' while_statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 11
	@nil		error

state 142
	(154) non_empty_statement : T_FOREACH '(' expr . T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' expr . T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	T_AS		shift 213
	@nil		error

state 143
	(144) non_empty_statement : T_SWITCH '(' expr . ')' switch_case_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 307
	@nil		error

state 144
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(363) expr : T_EMPTY '(' expr . ')' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 783
	@nil		error

state 145
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(479) list_expr_element : expr . T_DOUBLE_ARROW variable 
	(480) list_expr_element : expr . T_DOUBLE_ARROW list_expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	T_DOUBLE_ARROW	shift 215
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		error

state 146
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr . '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	'}'		shift 789
	@nil		error

state 147
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(457) simple_variable : '$' '{' expr . '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	'}'		shift 796
	@nil		error

state 148
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(359) expr : expr '?' expr . ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	':'		shift 126
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		error

state 149
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(450) callable_variable : dereferencable '{' expr . '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	'}'		shift 801
	@nil		error

state 150
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(463) new_variable : new_variable '{' expr . '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	'}'		shift 804
	@nil		error

state 151
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(468) member_name : '{' expr . '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	'}'		shift 837
	@nil		error

state 152
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(471) property_name : '{' expr . '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	'}'		shift 838
	@nil		error

state 153
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr . ')' ';' 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 488
	@nil		error

state 154
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}' 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	']'		shift 500
	@nil		error

state 155
	(219) elseif : T_ELSEIF '(' expr . ')' statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 19
	@nil		error

state 156
	(222) new_elseif : T_ELSEIF '(' expr . ')' ':' inner_statement_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	')'		shift 538
	@nil		error

state 157
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(364) expr : T_INCLUDE expr . 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (364)

state 158
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(365) expr : T_INCLUDE_ONCE expr . 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (365)

state 159
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(367) expr : T_REQUIRE expr . 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (367)

state 160
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(368) expr : T_REQUIRE_ONCE expr . 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (368)

state 161
	(301) non_empty_expr_list : expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (301)

state 162
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(440) optional_expr : expr . 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (440)

state 163
	(250) argument : expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (250)

state 164
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(485) array_pair : expr T_DOUBLE_ARROW expr . 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (485)

state 165
	(300) non_empty_expr_list : non_empty_expr_list ',' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (300)

state 166
	(126) constant_declaration : T_STRING '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (126)

state 167
	(261) static_var : T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (261)

state 168
	(252) argument : T_ELLIPSIS expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (252)

state 169
	(204) declare_list_element : T_STRING '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (204)

state 170
	(298) property_declaration : T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (298)

state 171
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (236)

state 172
	(130) class_const : identifier '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 72
	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (130)

state 173
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(329) expr : expr T_LOGICAL_OR expr . 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_XOR	shift 73
	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (329)

state 174
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(382) expr : T_YIELD expr . 
	(383) expr : T_YIELD expr . T_DOUBLE_ARROW expr 

	T_DOUBLE_ARROW	shift 114
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (382)

state 175
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(331) expr : expr T_LOGICAL_XOR expr . 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_AND	shift 74
	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (331)

state 176
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(380) expr : T_PRINT expr . 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (380)

state 177
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(384) expr : T_YIELD_FROM expr . 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (384)

state 178
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(330) expr : expr T_LOGICAL_AND expr . 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (330)

state 179
	(307) expr : variable '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (307)

state 180
	(311) expr : variable T_PLUS_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (311)

state 181
	(312) expr : variable T_MINUS_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (312)

state 182
	(313) expr : variable T_MUL_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (313)

state 183
	(314) expr : variable T_DIV_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (314)

state 184
	(315) expr : variable T_CONCAT_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (315)

state 185
	(316) expr : variable T_MOD_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (316)

state 186
	(317) expr : variable T_AND_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (317)

state 187
	(318) expr : variable T_OR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (318)

state 188
	(319) expr : variable T_XOR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (319)

state 189
	(320) expr : variable T_SL_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (320)

state 190
	(321) expr : variable T_SR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (321)

state 191
	(322) expr : variable T_POW_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (322)

state 192
	(305) expr : list_expr '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (305)

state 193
	(306) expr : array_short_syntax '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 26
	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (306)

state 194
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(361) expr : expr T_COALESCE expr . 

	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (361)

state 195
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(360) expr : expr '?' ':' expr . 
	(361) expr : expr . T_COALESCE expr 

	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (360)

state 196
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(359) expr : expr '?' expr ':' expr . 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_COALESCE	shift 75
	T_BOOLEAN_OR	shift 76
	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (359)

state 197
	(327) expr : expr . T_BOOLEAN_OR expr 
	(327) expr : expr T_BOOLEAN_OR expr . 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_BOOLEAN_AND	shift 77
	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (327)

state 198
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(328) expr : expr T_BOOLEAN_AND expr . 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'|'		shift 78
	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (328)

state 199
	(304) expr : variable . 
	(307) expr : variable . '=' expr 
	(308) expr : variable . '=' '&' variable 
	(311) expr : variable . T_PLUS_EQUAL expr 
	(312) expr : variable . T_MINUS_EQUAL expr 
	(313) expr : variable . T_MUL_EQUAL expr 
	(314) expr : variable . T_DIV_EQUAL expr 
	(315) expr : variable . T_CONCAT_EQUAL expr 
	(316) expr : variable . T_MOD_EQUAL expr 
	(317) expr : variable . T_AND_EQUAL expr 
	(318) expr : variable . T_OR_EQUAL expr 
	(319) expr : variable . T_XOR_EQUAL expr 
	(320) expr : variable . T_SL_EQUAL expr 
	(321) expr : variable . T_SR_EQUAL expr 
	(322) expr : variable . T_POW_EQUAL expr 
	(323) expr : variable . T_INC 
	(325) expr : variable . T_DEC 
	(441) dereferencable : variable . 
	(477) list_expr_element : variable . 

	','		reduce (477)
	'='		shift 27
	T_PLUS_EQUAL	shift 99
	T_MINUS_EQUAL	shift 100
	T_MUL_EQUAL	shift 101
	T_DIV_EQUAL	shift 102
	T_CONCAT_EQUAL	shift 103
	T_MOD_EQUAL	shift 104
	T_AND_EQUAL	shift 105
	T_OR_EQUAL	shift 106
	T_XOR_EQUAL	shift 107
	T_SL_EQUAL	shift 108
	T_SR_EQUAL	shift 109
	T_POW_EQUAL	shift 110
	T_INC		shift 636
	T_DEC		shift 637
	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	')'		reduce (477)
	@nil		reduce (304)

state 200
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(332) expr : expr '|' expr . 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'^'		shift 79
	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (332)

state 201
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(334) expr : expr '^' expr . 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'&'		shift 80
	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (334)

state 202
	(304) expr : variable . 
	(307) expr : variable . '=' expr 
	(308) expr : variable . '=' '&' variable 
	(311) expr : variable . T_PLUS_EQUAL expr 
	(312) expr : variable . T_MINUS_EQUAL expr 
	(313) expr : variable . T_MUL_EQUAL expr 
	(314) expr : variable . T_DIV_EQUAL expr 
	(315) expr : variable . T_CONCAT_EQUAL expr 
	(316) expr : variable . T_MOD_EQUAL expr 
	(317) expr : variable . T_AND_EQUAL expr 
	(318) expr : variable . T_OR_EQUAL expr 
	(319) expr : variable . T_XOR_EQUAL expr 
	(320) expr : variable . T_SL_EQUAL expr 
	(321) expr : variable . T_SR_EQUAL expr 
	(322) expr : variable . T_POW_EQUAL expr 
	(323) expr : variable . T_INC 
	(325) expr : variable . T_DEC 
	(441) dereferencable : variable . 

	'='		shift 27
	T_PLUS_EQUAL	shift 99
	T_MINUS_EQUAL	shift 100
	T_MUL_EQUAL	shift 101
	T_DIV_EQUAL	shift 102
	T_CONCAT_EQUAL	shift 103
	T_MOD_EQUAL	shift 104
	T_AND_EQUAL	shift 105
	T_OR_EQUAL	shift 106
	T_XOR_EQUAL	shift 107
	T_SL_EQUAL	shift 108
	T_SR_EQUAL	shift 109
	T_POW_EQUAL	shift 110
	T_INC		shift 636
	T_DEC		shift 637
	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	@nil		reduce (304)

state 203
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(333) expr : expr '&' expr . 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	shift 81
	T_IS_NOT_EQUAL	shift 82
	T_IS_IDENTICAL	shift 83
	T_IS_NOT_IDENTICAL	shift 84
	T_SPACESHIP	shift 85
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (333)

state 204
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(350) expr : expr T_IS_EQUAL expr . 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (350)

state 205
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(351) expr : expr T_IS_NOT_EQUAL expr . 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (351)

state 206
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(348) expr : expr T_IS_IDENTICAL expr . 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (348)

state 207
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(349) expr : expr T_IS_NOT_IDENTICAL expr . 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (349)

state 208
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(352) expr : expr T_SPACESHIP expr . 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 86
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 88
	T_IS_GREATER_OR_EQUAL	shift 89
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (352)

state 209
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(353) expr : expr '<' expr . 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (353)

state 210
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(354) expr : expr T_IS_SMALLER_OR_EQUAL expr . 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (354)

state 211
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(355) expr : expr '>' expr . 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (355)

state 212
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(356) expr : expr T_IS_GREATER_OR_EQUAL expr . 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 90
	T_SR		shift 91
	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (356)

state 213
	(154) non_empty_statement : T_FOREACH '(' expr T_AS . foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' expr T_AS . variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	'&'		shift 226
	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	foreach_variable	goto 483
	variable	goto 325
	name		goto 294
	class_name	goto 598
	list_expr	goto 807
	array_short_syntax	goto 484
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 214
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW . foreach_variable ')' foreach_statement 

	'&'		shift 226
	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	foreach_variable	goto 504
	variable	goto 505
	name		goto 294
	class_name	goto 598
	list_expr	goto 807
	array_short_syntax	goto 484
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 215
	(479) list_expr_element : expr T_DOUBLE_ARROW . variable 
	(480) list_expr_element : expr T_DOUBLE_ARROW . list_expr 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_LIST		shift 406
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 329
	name		goto 294
	class_name	goto 598
	list_expr	goto 829
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 216
	(153) non_empty_statement : T_UNSET '(' . variables_list ')' semi 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variables_list	goto 458
	variable	goto 316
	name		goto 294
	non_empty_variables_list	goto 362
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 217
	(362) expr : T_ISSET '(' . variables_list ')' 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variables_list	goto 459
	variable	goto 316
	name		goto 294
	non_empty_variables_list	goto 362
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 218
	(324) expr : T_INC . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 265
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 219
	(326) expr : T_DEC . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 266
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 220
	(488) array_pair : '&' . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 282
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 221
	(502) encaps_var : T_CURLY_OPEN . variable '}' 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 463
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 222
	(308) expr : variable '=' '&' . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 268
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 223
	(251) argument : '&' . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 324
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 224
	(487) array_pair : expr T_DOUBLE_ARROW '&' . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 283
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 225
	(88) no_comma : ',' . 
	(173) non_empty_variables_list : non_empty_variables_list ',' . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 327
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		reduce (88)

state 226
	(228) foreach_variable : '&' . variable 

	'['		shift 22
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_CONSTANT_ENCAPSED_STRING	shift 581
	T_STATIC	shift 605
	T_ARRAY		shift 407
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'('		shift 65
	'$'		shift 263
	namespace_name_parts	goto 408
	variable	goto 490
	name		goto 294
	class_name	goto 598
	array_short_syntax	goto 606
	simple_variable	goto 599
	function_call	goto 602
	callable_expr	goto 347
	class_name_or_var	goto 412
	dereferencable	goto 281
	constant	goto 420
	dereferencable_scalar	goto 421
	callable_variable	goto 414
	static_member	goto 603
	@nil		error

state 227
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 257
	T_STATIC	shift 818
	T_ABSTRACT	shift 819
	T_FINAL		shift 820
	T_PRIVATE	shift 821
	T_PROTECTED	shift 822
	T_PUBLIC	shift 823
	T_VAR		shift 824
	'}'		shift 825
	class_statement	goto 826
	variable_modifiers	goto 340
	method_modifiers	goto 328
	member_modifier	goto 827
	non_empty_member_modifiers	goto 240
	@nil		reduce (284)

state 228
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 257
	T_STATIC	shift 818
	T_ABSTRACT	shift 819
	T_FINAL		shift 820
	T_PRIVATE	shift 821
	T_PROTECTED	shift 822
	T_PUBLIC	shift 823
	T_VAR		shift 824
	'}'		shift 850
	class_statement	goto 826
	variable_modifiers	goto 340
	method_modifiers	goto 328
	member_modifier	goto 827
	non_empty_member_modifiers	goto 240
	@nil		reduce (284)

state 229
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 257
	T_STATIC	shift 818
	T_ABSTRACT	shift 819
	T_FINAL		shift 820
	T_PRIVATE	shift 821
	T_PROTECTED	shift 822
	T_PUBLIC	shift 823
	T_VAR		shift 824
	'}'		shift 868
	class_statement	goto 826
	variable_modifiers	goto 340
	method_modifiers	goto 328
	member_modifier	goto 827
	non_empty_member_modifiers	goto 240
	@nil		reduce (284)

state 230
	(262) class_statement_list : class_statement_list . class_statement 
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list . '}' 
	(284) method_modifiers : . 

	T_USE		shift 257
	T_STATIC	shift 818
	T_ABSTRACT	shift 819
	T_FINAL		shift 820
	T_PRIVATE	shift 821
	T_PROTECTED	shift 822
	T_PUBLIC	shift 823
	T_VAR		shift 824
	'}'		shift 869
	class_statement	goto 826
	variable_modifiers	goto 340
	method_modifiers	goto 328
	member_modifier	goto 827
	non_empty_member_modifiers	goto 240
	@nil		reduce (284)

state 231
	(388) new_expr : T_NEW . class_name_reference ctor_arguments 
	(389) new_expr : T_NEW . anonymous_class 

	error		shift 608
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_STATIC	shift 605
	T_CLASS		shift 342
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'$'		shift 263
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 432
	simple_variable	goto 610
	class_name_reference	goto 343
	anonymous_class	goto 611
	new_variable	goto 267
	@nil		error

state 232
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(341) expr : expr T_SL expr . 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (341)

state 233
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(342) expr : expr T_SR expr . 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'+'		shift 92
	'-'		shift 93
	'.'		shift 94
	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (342)

state 234
	(385) expr : T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 245
	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	')'		reduce (232)
	namespace_name_parts	goto 408
	name		goto 771
	parameter_list	goto 474
	non_empty_parameter_list	goto 369
	parameter	goto 772
	optional_param_type	goto 370
	type_expr	goto 773
	type		goto 774
	@nil		reduce (242)

state 235
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' . parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 245
	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	')'		reduce (232)
	namespace_name_parts	goto 408
	name		goto 771
	parameter_list	goto 485
	non_empty_parameter_list	goto 369
	parameter	goto 772
	optional_param_type	goto 370
	type_expr	goto 773
	type		goto 774
	@nil		reduce (242)

state 236
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 245
	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	')'		reduce (232)
	namespace_name_parts	goto 408
	name		goto 771
	parameter_list	goto 487
	non_empty_parameter_list	goto 369
	parameter	goto 772
	optional_param_type	goto 370
	type_expr	goto 773
	type		goto 774
	@nil		reduce (242)

state 237
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' . parameter_list ')' optional_return_type method_body 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 245
	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	')'		reduce (232)
	namespace_name_parts	goto 408
	name		goto 771
	parameter_list	goto 537
	non_empty_parameter_list	goto 369
	parameter	goto 772
	optional_param_type	goto 370
	type_expr	goto 773
	type		goto 774
	@nil		reduce (242)

state 238
	(357) expr : expr T_INSTANCEOF . class_name_reference 

	error		shift 608
	T_STRING	shift 604
	T_VARIABLE	shift 579
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	'$'		shift 263
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 432
	simple_variable	goto 610
	class_name_reference	goto 677
	new_variable	goto 267
	@nil		error

state 239
	(88) no_comma : ',' . 
	(234) non_empty_parameter_list : non_empty_parameter_list ',' . parameter 
	(242) optional_param_type : . 

	'?'		shift 245
	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	')'		reduce (88)
	namespace_name_parts	goto 408
	name		goto 771
	parameter	goto 839
	optional_param_type	goto 370
	type_expr	goto 773
	type		goto 774
	@nil		reduce (242)

state 240
	(282) variable_modifiers : non_empty_member_modifiers . 
	(285) method_modifiers : non_empty_member_modifiers . 
	(287) non_empty_member_modifiers : non_empty_member_modifiers . member_modifier 

	T_VARIABLE	reduce (282)
	T_STATIC	shift 818
	T_ABSTRACT	shift 819
	T_FINAL		shift 820
	T_PRIVATE	shift 821
	T_PROTECTED	shift 822
	T_PUBLIC	shift 823
	member_modifier	goto 848
	@nil		reduce (285)

state 241
	(245) optional_return_type : ':' . type_expr 

	'?'		shift 245
	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 771
	type_expr	goto 878
	type		goto 774
	@nil		error

state 242
	(435) scalar : T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
	(436) scalar : T_START_HEREDOC . T_END_HEREDOC 
	(438) scalar : T_START_HEREDOC . encaps_list T_END_HEREDOC 

	T_VARIABLE	shift 626
	T_ENCAPSED_AND_WHITESPACE	shift 439
	T_END_HEREDOC	shift 627
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	encaps_list	goto 243
	encaps_var	goto 628
	encaps_string_part	goto 274
	encaps_base_var	goto 314
	@nil		error

state 243
	(438) scalar : T_START_HEREDOC encaps_list . T_END_HEREDOC 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 626
	T_ENCAPSED_AND_WHITESPACE	shift 629
	T_END_HEREDOC	shift 663
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	encaps_var	goto 664
	encaps_string_part	goto 665
	encaps_base_var	goto 314
	@nil		error

state 244
	(437) scalar : '"' encaps_list . '"' 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 626
	T_ENCAPSED_AND_WHITESPACE	shift 629
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	'"'		shift 675
	encaps_var	goto 664
	encaps_string_part	goto 665
	encaps_base_var	goto 314
	@nil		error

state 245
	(238) type_expr : '?' . type 

	T_STRING	shift 604
	T_ARRAY		shift 769
	T_CALLABLE	shift 770
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 771
	type		goto 813
	@nil		error

state 246
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR . property_name argument_list 
	(455) variable : dereferencable T_OBJECT_OPERATOR . property_name 

	error		shift 758
	T_STRING	shift 759
	T_VARIABLE	shift 579
	'{'		shift 122
	'$'		shift 263
	simple_variable	goto 760
	property_name	goto 366
	@nil		error

state 247
	(464) new_variable : new_variable T_OBJECT_OPERATOR . property_name 

	error		shift 758
	T_STRING	shift 759
	T_VARIABLE	shift 579
	'{'		shift 122
	'$'		shift 263
	simple_variable	goto 760
	property_name	goto 765
	@nil		error

state 248
	(433) scalar : dereferencable_scalar . 
	(443) dereferencable : dereferencable_scalar . 
	(446) callable_expr : dereferencable_scalar . 

	'['		reduce (443)
	T_OBJECT_OPERATOR	reduce (443)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (443)
	'{'		reduce (443)
	'('		reduce (446)
	@nil		reduce (433)

state 249
	(358) expr : '(' expr ')' . 
	(442) dereferencable : '(' expr ')' . 
	(445) callable_expr : '(' expr ')' . 

	'['		reduce (442)
	T_OBJECT_OPERATOR	reduce (442)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (442)
	'{'		reduce (442)
	'('		reduce (445)
	@nil		reduce (358)

state 250
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(336) expr : expr '+' expr . 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (336)

state 251
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(337) expr : expr '-' expr . 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (337)

state 252
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(335) expr : expr '.' expr . 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 95
	'/'		shift 96
	'%'		shift 97
	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (335)

state 253
	(98) top_statement : T_USE . use_declarations semi 
	(99) top_statement : T_USE . use_type use_declarations semi 
	(104) group_use_declaration : T_USE . use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(105) group_use_declaration : T_USE . use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(106) group_use_declaration : T_USE . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
	(107) group_use_declaration : T_USE . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_STRING	shift 604
	T_FUNCTION	shift 617
	T_CONST		shift 618
	T_NS_SEPARATOR	shift 336
	namespace_name_parts	goto 435
	namespace_name	goto 436
	use_declarations	goto 301
	use_type	goto 284
	unprefixed_use_declaration	goto 619
	non_empty_use_declarations	goto 351
	use_declaration	goto 620
	@nil		error

state 254
	(379) expr : '`' . backticks_expr '`' 
	(411) backticks_expr : . 

	T_VARIABLE	shift 626
	T_ENCAPSED_AND_WHITESPACE	shift 443
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	backticks_expr	goto 444
	encaps_list	goto 260
	encaps_var	goto 628
	encaps_string_part	goto 274
	encaps_base_var	goto 314
	@nil		reduce (411)

state 255
	(188) interface_extends_list : T_EXTENDS . class_name_list 

	T_STRING	shift 604
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 784
	class_name_list	goto 785
	non_empty_class_name_list	goto 371
	@nil		error

state 256
	(190) implements_list : T_IMPLEMENTS . class_name_list 

	T_STRING	shift 604
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 784
	class_name_list	goto 836
	non_empty_class_name_list	goto 371
	@nil		error

state 257
	(267) class_statement : T_USE . class_name_list trait_adaptations 

	T_STRING	shift 604
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 784
	class_name_list	goto 309
	non_empty_class_name_list	goto 371
	@nil		error

state 258
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF . class_name_list ';' 

	T_STRING	shift 604
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 784
	class_name_list	goto 540
	non_empty_class_name_list	goto 371
	@nil		error

state 259
	(437) scalar : '"' . encaps_list '"' 

	T_VARIABLE	shift 626
	T_ENCAPSED_AND_WHITESPACE	shift 629
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	encaps_list	goto 244
	encaps_var	goto 628
	encaps_string_part	goto 274
	encaps_base_var	goto 314
	@nil		error

state 260
	(413) backticks_expr : encaps_list . 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 626
	T_ENCAPSED_AND_WHITESPACE	shift 629
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	encaps_var	goto 664
	encaps_string_part	goto 665
	encaps_base_var	goto 314
	@nil		reduce (413)

state 261
	(186) extends_from : T_EXTENDS . class_name 

	T_STRING	shift 604
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 797
	@nil		error

state 262
	(88) no_comma : ',' . 
	(193) non_empty_class_name_list : non_empty_class_name_list ',' . class_name 

	T_STRING	shift 604
	T_STATIC	shift 605
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 609
	class_name	goto 849
	@nil		reduce (88)

state 263
	(457) simple_variable : '$' . '{' expr '}' 
	(458) simple_variable : '$' . simple_variable 
	(459) simple_variable : '$' . error 

	error		shift 630
	T_VARIABLE	shift 579
	'{'		shift 71
	'$'		shift 263
	simple_variable	goto 631
	@nil		error

state 264
	(497) encaps_var : encaps_base_var '[' . encaps_var_offset ']' 

	'-'		shift 476
	T_STRING	shift 791
	T_VARIABLE	shift 792
	T_NUM_STRING	shift 793
	encaps_var_offset	goto 477
	@nil		error

state 265
	(324) expr : T_INC variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	@nil		reduce (324)

state 266
	(326) expr : T_DEC variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	@nil		reduce (326)

state 267
	(405) class_name_reference : new_variable . 
	(462) new_variable : new_variable . '[' optional_expr ']' 
	(463) new_variable : new_variable . '{' expr '}' 
	(464) new_variable : new_variable . T_OBJECT_OPERATOR property_name 
	(466) new_variable : new_variable . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	'['		shift 40
	T_OBJECT_OPERATOR	shift 247
	T_PAAMAYIM_NEKUDOTAYIM	shift 305
	'{'		shift 115
	@nil		reduce (405)

state 268
	(308) expr : variable '=' '&' variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	@nil		reduce (308)

state 269
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 

	T_STRING	shift 604
	T_FUNCTION	shift 617
	T_CONST		shift 618
	namespace_name_parts	goto 440
	namespace_name	goto 436
	use_type	goto 339
	inline_use_declarations	goto 486
	unprefixed_use_declaration	goto 815
	non_empty_inline_use_declarations	goto 376
	inline_use_declaration	goto 816
	@nil		error

state 270
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 

	T_STRING	shift 604
	T_FUNCTION	shift 617
	T_CONST		shift 618
	namespace_name_parts	goto 440
	namespace_name	goto 436
	use_type	goto 339
	inline_use_declarations	goto 496
	unprefixed_use_declaration	goto 815
	non_empty_inline_use_declarations	goto 376
	inline_use_declaration	goto 816
	@nil		error

state 271
	(90) optional_comma : ',' . 
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' . inline_use_declaration 

	T_STRING	shift 604
	T_FUNCTION	shift 617
	T_CONST		shift 618
	namespace_name_parts	goto 440
	namespace_name	goto 436
	use_type	goto 339
	unprefixed_use_declaration	goto 815
	inline_use_declaration	goto 859
	@nil		reduce (90)

state 272
	(168) catch : T_CATCH '(' . name_union T_VARIABLE ')' '{' inner_statement_list '}' 

	T_STRING	shift 604
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name_union	goto 330
	name		goto 880
	@nil		error

state 273
	(95) top_statement : T_NAMESPACE . namespace_name semi 
	(96) top_statement : T_NAMESPACE . namespace_name '{' top_statement_list '}' 
	(97) top_statement : T_NAMESPACE . '{' top_statement_list '}' 
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_STRING	shift 604
	T_NS_SEPARATOR	shift 356
	'{'		shift 548
	namespace_name_parts	goto 440
	namespace_name	goto 276
	@nil		error

state 274
	(493) encaps_list : encaps_string_part . encaps_var 

	T_VARIABLE	shift 626
	T_DOLLAR_OPEN_CURLY_BRACES	shift 25
	T_CURLY_OPEN	shift 221
	encaps_var	goto 666
	encaps_base_var	goto 314
	@nil		error

state 275
	(167) name_union : name_union '|' . name 

	T_STRING	shift 604
	T_NAMESPACE	shift 416
	T_NS_SEPARATOR	shift 346
	namespace_name_parts	goto 408
	name		goto 906
	@nil		error

state 276
	(95) top_statement : T_NAMESPACE namespace_name . semi 
	(96) top_statement : T_NAMESPACE namespace_name . '{' top_statement_list '}' 

	error		shift 632
	';'		shift 633
	'{'		shift 549
	semi		goto 667
	@nil		error

state 277
	(207) switch_case_list : ':' case_list . T_ENDSWITCH ';' 
	(210) case_list : case_list . case 

	T_ENDSWITCH	shift 507
	T_CASE		shift 127
	T_DEFAULT	shift 310
	case		goto 856
	@nil		error

state 278
	(205) switch_case_list : '{' case_list . '}' 
	(210) case_list : case_list . case 

	T_CASE		shift 127
	T_DEFAULT	shift 310
	'}'		shift 857
	case		goto 856
	@nil		error

state 279
	(208) switch_case_list : ':' ';' case_list . T_ENDSWITCH ';' 
	(210) case_list : case_list . case 

	T_ENDSWITCH	shift 518
	T_CASE		shift 127
	T_DEFAULT	shift 310
	case		goto 856
	@nil		error

state 280
	(206) switch_case_list : '{' ';' case_list . '}' 
	(210) case_list : case_list . case 

	T_CASE		shift 127
	T_DEFAULT	shift 310
	'}'		shift 877
	case		goto 856
	@nil		error

state 281
	(408) class_name_or_var : dereferencable . 
	(448) callable_variable : dereferencable . '[' optional_expr ']' 
	(450) callable_variable : dereferencable . '{' expr '}' 
	(452) callable_variable : dereferencable . T_OBJECT_OPERATOR property_name argument_list 
	(455) variable : dereferencable . T_OBJECT_OPERATOR property_name 

	'['		shift 38
	T_OBJECT_OPERATOR	shift 246
	'{'		shift 113
	@nil		reduce (408)

state 282
	(441) dereferencable : variable . 
	(488) array_pair : '&' variable . 

	','		reduce (488)
	')'		reduce (488)
	']'		reduce (488)
	@nil		reduce (441)

state 283
	(441) dereferencable : variable . 
	(487) array_pair : expr T_DOUBLE_ARROW '&' variable . 

	','		reduce (487)
	')'		reduce (487)
	']'		reduce (487)
	@nil		reduce (441)

state 284
	(99) top_statement : T_USE use_type . use_declarations semi 
	(104) group_use_declaration : T_USE use_type . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(105) group_use_declaration : T_USE use_type . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_STRING	shift 604
	T_NS_SEPARATOR	shift 337
	namespace_name_parts	goto 456
	namespace_name	goto 436
	use_declarations	goto 306
	unprefixed_use_declaration	goto 619
	non_empty_use_declarations	goto 351
	use_declaration	goto 620
	@nil		error

state 285
	(148) non_empty_statement : T_GLOBAL . global_var_list semi 

	T_VARIABLE	shift 579
	'$'		shift 263
	global_var_list	goto 302
	non_empty_global_var_list	goto 352
	global_var	goto 621
	simple_variable	goto 622
	@nil		error

state 286
	(88) no_comma : ',' . 
	(112) non_empty_use_declarations : non_empty_use_declarations ',' . use_declaration 

	T_STRING	shift 604
	T_NS_SEPARATOR	shift 338
	namespace_name_parts	goto 440
	namespace_name	goto 436
	unprefixed_use_declaration	goto 619
	use_declaration	goto 778
	@nil		reduce (88)

state 287
	(149) non_empty_statement : T_STATIC . static_var_list semi 
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(399) class_name : T_STATIC . 

	T_VARIABLE	shift 437
	T_FUNCTION	shift 353
	static_var_list	goto 303
	non_empty_static_var_list	goto 354
	static_var	goto 623
	@nil		reduce (399)

state 288
	(88) no_comma : ',' . 
	(254) non_empty_global_var_list : non_empty_global_var_list ',' . global_var 

	T_VARIABLE	shift 579
	'$'		shift 263
	global_var	goto 779
	simple_variable	goto 622
	@nil		reduce (88)

state 289
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches . optional_finally 
	(165) catches : catches . catch 
	(169) optional_finally : . 

	T_CATCH		shift 494
	T_FINALLY	shift 495
	optional_finally	goto 841
	catch		goto 842
	@nil		reduce (169)

state 290
290: shift/reduce conflict (shift 18, reduce 223) on T_ELSE
290: shift/reduce conflict (shift 501, reduce 223) on T_ELSEIF
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list . else_single 
	(218) elseif_list : elseif_list . elseif 
	(223) else_single : . 

	T_ELSEIF	shift 501
	T_ELSE		shift 18
	else_single	goto 851
	elseif		goto 852
	@nil		reduce (223)

state 291
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list . new_else_single T_ENDIF ';' 
	(221) new_elseif_list : new_elseif_list . new_elseif 
	(225) new_else_single : . 

	T_ELSEIF	shift 514
	T_ELSE		shift 515
	new_else_single	goto 516
	new_elseif	goto 870
	@nil		reduce (225)

state 292
	(88) no_comma : ',' . 
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' . lexical_var 
	(174) optional_ref : . 

	'&'		shift 615
	')'		reduce (88)
	optional_ref	goto 519
	lexical_var	goto 904
	@nil		reduce (174)

state 293
	(100) top_statement : group_use_declaration . semi 

	error		shift 632
	';'		shift 633
	semi		goto 634
	@nil		error

state 294
	(396) function_call : name . argument_list 
	(400) class_name : name . 
	(416) constant : name . 

	T_PAAMAYIM_NEKUDOTAYIM	reduce (400)
	'('		shift 20
	argument_list	goto 638
	@nil		reduce (416)

state 295
	(150) non_empty_statement : T_ECHO expr_list . semi 

	error		shift 632
	';'		shift 633
	semi		goto 643
	@nil		error

state 296
	(145) non_empty_statement : T_BREAK optional_expr . semi 

	error		shift 632
	';'		shift 633
	semi		goto 647
	@nil		error

state 297
	(146) non_empty_statement : T_CONTINUE optional_expr . semi 

	error		shift 632
	';'		shift 633
	semi		goto 648
	@nil		error

state 298
	(159) non_empty_statement : T_GOTO T_STRING . semi 

	error		shift 632
	';'		shift 633
	semi		goto 649
	@nil		error

state 299
	(101) top_statement : T_CONST constant_declaration_list . semi 

	error		shift 632
	';'		shift 633
	semi		goto 650
	@nil		error

state 300
	(147) non_empty_statement : T_RETURN optional_expr . semi 

	error		shift 632
	';'		shift 633
	semi		goto 652
	@nil		error

state 301
	(98) top_statement : T_USE use_declarations . semi 

	error		shift 632
	';'		shift 633
	semi		goto 655
	@nil		error

state 302
	(148) non_empty_statement : T_GLOBAL global_var_list . semi 

	error		shift 632
	';'		shift 633
	semi		goto 657
	@nil		error

state 303
	(149) non_empty_statement : T_STATIC static_var_list . semi 

	error		shift 632
	';'		shift 633
	semi		goto 659
	@nil		error

state 304
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	T_VARIABLE	shift 579
	'$'		shift 263
	simple_variable	goto 764
	@nil		error

state 305
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	T_VARIABLE	shift 579
	'$'		shift 263
	simple_variable	goto 766
	@nil		error

state 306
	(99) top_statement : T_USE use_type use_declarations . semi 

	error		shift 632
	';'		shift 633
	semi		goto 777
	@nil		error

state 307
	(144) non_empty_statement : T_SWITCH '(' expr ')' . switch_case_list 

	':'		shift 372
	'{'		shift 373
	switch_case_list	goto 812
	@nil		error

state 308
	(153) non_empty_statement : T_UNSET '(' variables_list ')' . semi 

	error		shift 632
	';'		shift 633
	semi		goto 817
	@nil		error

state 309
	(267) class_statement : T_USE class_name_list . trait_adaptations 

	';'		shift 862
	'{'		shift 574
	trait_adaptations	goto 863
	@nil		error

state 310
	(212) case : T_DEFAULT . case_separator inner_statement_list 

	':'		shift 875
	';'		shift 876
	case_separator	goto 555
	@nil		error

state 311
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type . method_body 

	';'		shift 918
	'{'		shift 564
	method_body	goto 919
	@nil		error

state 312
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(346) expr : '!' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (346)

state 313
	(178) function_declaration_statement : T_FUNCTION optional_ref . T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	T_STRING	shift 452
	'('		shift 234
	@nil		error

state 314
	(496) encaps_var : encaps_base_var . 
	(497) encaps_var : encaps_base_var . '[' encaps_var_offset ']' 
	(498) encaps_var : encaps_base_var . T_OBJECT_OPERATOR T_STRING 

	'['		shift 264
	T_OBJECT_OPERATOR	shift 464
	@nil		reduce (496)

state 315
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 

	T_STRING	shift 676
	'{'		shift 269
	@nil		error

state 316
	(172) non_empty_variables_list : variable . 
	(441) dereferencable : variable . 

	','		reduce (172)
	')'		reduce (172)
	@nil		reduce (441)

state 317
	(474) list_expr : T_LIST '(' list_expr_elements . ')' 
	(475) list_expr_elements : list_expr_elements . ',' list_expr_element 

	','		shift 41
	')'		shift 786
	@nil		error

state 318
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '}' 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}' 

	'['		shift 125
	'}'		shift 788
	@nil		error

state 319
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(338) expr : expr '*' expr . 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (338)

state 320
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(339) expr : expr '/' expr . 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (339)

state 321
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(340) expr : expr '%' expr . 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 238
	T_POW		shift 98
	@nil		reduce (340)

state 322
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 

	T_STRING	shift 676
	'{'		shift 270
	@nil		error

state 323
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 

	T_STRING	shift 676
	'{'		shift 331
	@nil		error

state 324
	(251) argument : '&' variable . 
	(441) dereferencable : variable . 

	','		reduce (251)
	')'		reduce (251)
	@nil		reduce (441)

state 325
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable . T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
	(227) foreach_variable : variable . 
	(441) dereferencable : variable . 

	T_DOUBLE_ARROW	shift 214
	')'		reduce (227)
	@nil		reduce (441)

state 326
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 

	T_STRING	shift 676
	'{'		shift 332
	@nil		error

state 327
	(173) non_empty_variables_list : non_empty_variables_list ',' variable . 
	(441) dereferencable : variable . 

	','		reduce (173)
	')'		reduce (173)
	@nil		reduce (441)

state 328
	(265) class_statement : method_modifiers . T_CONST class_const_list ';' 
	(266) class_statement : method_modifiers . T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body 

	T_FUNCTION	shift 382
	T_CONST		shift 6
	@nil		error

state 329
	(441) dereferencable : variable . 
	(479) list_expr_element : expr T_DOUBLE_ARROW variable . 

	','		reduce (479)
	')'		reduce (479)
	@nil		reduce (441)

state 330
	(167) name_union : name_union . '|' name 
	(168) catch : T_CATCH '(' name_union . T_VARIABLE ')' '{' inner_statement_list '}' 

	'|'		shift 275
	T_VARIABLE	shift 528
	@nil		error

state 331
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 

	T_STRING	shift 604
	namespace_name_parts	goto 440
	namespace_name	goto 436
	unprefixed_use_declarations	goto 497
	non_empty_unprefixed_use_declarations	goto 379
	unprefixed_use_declaration	goto 846
	@nil		error

state 332
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 

	T_STRING	shift 604
	namespace_name_parts	goto 440
	namespace_name	goto 436
	unprefixed_use_declarations	goto 511
	non_empty_unprefixed_use_declarations	goto 379
	unprefixed_use_declaration	goto 846
	@nil		error

state 333
	(391) lexical_vars : T_USE '(' . lexical_var_list ')' 
	(174) optional_ref : . 

	'&'		shift 615
	optional_ref	goto 519
	lexical_var_list	goto 520
	non_empty_lexical_var_list	goto 386
	lexical_var	goto 879
	@nil		reduce (174)

state 334
	(101) top_statement : T_CONST . constant_declaration_list semi 

	T_STRING	shift 434
	constant_declaration_list	goto 299
	non_empty_constant_declaration_list	goto 350
	constant_declaration	goto 616
	@nil		error

state 335
	(156) non_empty_statement : T_DECLARE '(' . declare_list ')' declare_statement 

	T_STRING	shift 450
	declare_list	goto 451
	non_empty_declare_list	goto 359
	declare_list_element	goto 646
	@nil		error

state 336
	(107) group_use_declaration : T_USE T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 604
	namespace_name_parts	goto 454
	namespace_name	goto 436
	unprefixed_use_declaration	goto 654
	@nil		error

state 337
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 604
	namespace_name_parts	goto 475
	namespace_name	goto 436
	unprefixed_use_declaration	goto 654
	@nil		error

state 338
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 604
	namespace_name_parts	goto 440
	namespace_name	goto 436
	unprefixed_use_declaration	goto 654
	@nil		error

state 339
	(122) inline_use_declaration : use_type . unprefixed_use_declaration 

	T_STRING	shift 604
	namespace_name_parts	goto 440
	namespace_name	goto 436
	unprefixed_use_declaration	goto 843
	@nil		error

state 340
	(264) class_statement : variable_modifiers . property_declaration_list ';' 

	T_VARIABLE	shift 498
	property_declaration_list	goto 499
	non_empty_property_declaration_list	goto 381
	property_declaration	goto 847
	@nil		error

state 341
	(90) optional_comma : ',' . 
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' . unprefixed_use_declaration 

	T_STRING	shift 604
	namespace_name_parts	goto 440
	namespace_name	goto 436
	unprefixed_use_declaration	goto 882
	@nil		reduce (90)

state 342
	(387) anonymous_class : T_CLASS . ctor_arguments extends_from implements_list '{' class_statement_list '}' 
	(414) ctor_arguments : . 

	'('		shift 20
	argument_list	goto 641
	ctor_arguments	goto 358
	@nil		reduce (414)

state 343
	(388) new_expr : T_NEW class_name_reference . ctor_arguments 
	(414) ctor_arguments : . 

	'('		shift 20
	argument_list	goto 641
	ctor_arguments	goto 642
	@nil		reduce (414)

state 344
	(376) expr : T_EXIT . exit_expr 
	(409) exit_expr : . 

	'('		shift 37
	exit_expr	goto 613
	@nil		reduce (409)

state 345
	(178) function_declaration_statement : T_FUNCTION . optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 615
	optional_ref	goto 313
	@nil		reduce (174)

state 346
	(402) name : T_NS_SEPARATOR . namespace_name_parts 

	T_STRING	shift 604
	namespace_name_parts	goto 441
	@nil		error

state 347
	(397) function_call : callable_expr . argument_list 

	'('		shift 20
	argument_list	goto 639
	@nil		error

state 348
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 615
	optional_ref	goto 446
	@nil		reduce (174)

state 349
	(299) expr_list : non_empty_expr_list . no_comma 
	(300) non_empty_expr_list : non_empty_expr_list . ',' expr 
	(87) no_comma : . 

	','		shift 116
	no_comma	goto 644
	@nil		reduce (87)

state 350
	(123) constant_declaration_list : non_empty_constant_declaration_list . no_comma 
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list . ',' constant_declaration 
	(87) no_comma : . 

	','		shift 360
	no_comma	goto 651
	@nil		reduce (87)

state 351
	(111) use_declarations : non_empty_use_declarations . no_comma 
	(112) non_empty_use_declarations : non_empty_use_declarations . ',' use_declaration 
	(87) no_comma : . 

	','		shift 286
	no_comma	goto 656
	@nil		reduce (87)

state 352
	(253) global_var_list : non_empty_global_var_list . no_comma 
	(254) non_empty_global_var_list : non_empty_global_var_list . ',' global_var 
	(87) no_comma : . 

	','		shift 288
	no_comma	goto 658
	@nil		reduce (87)

state 353
	(386) expr : T_STATIC T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 615
	optional_ref	goto 457
	@nil		reduce (174)

state 354
	(257) static_var_list : non_empty_static_var_list . no_comma 
	(258) non_empty_static_var_list : non_empty_static_var_list . ',' static_var 
	(87) no_comma : . 

	','		shift 361
	no_comma	goto 660
	@nil		reduce (87)

state 355
	(180) class_declaration_statement : T_INTERFACE T_STRING . interface_extends_list '{' class_statement_list '}' 
	(187) interface_extends_list : . 

	T_EXTENDS	shift 255
	interface_extends_list	goto 460
	@nil		reduce (187)

state 356
	(403) name : T_NAMESPACE T_NS_SEPARATOR . namespace_name_parts 

	T_STRING	shift 604
	namespace_name_parts	goto 465
	@nil		error

state 357
	(179) class_declaration_statement : class_entry_type T_STRING . extends_from implements_list '{' class_statement_list '}' 
	(185) extends_from : . 

	T_EXTENDS	shift 261
	extends_from	goto 364
	@nil		reduce (185)

state 358
	(387) anonymous_class : T_CLASS ctor_arguments . extends_from implements_list '{' class_statement_list '}' 
	(185) extends_from : . 

	T_EXTENDS	shift 261
	extends_from	goto 367
	@nil		reduce (185)

state 359
	(201) declare_list : non_empty_declare_list . no_comma 
	(203) non_empty_declare_list : non_empty_declare_list . ',' declare_list_element 
	(87) no_comma : . 

	','		shift 368
	no_comma	goto 768
	@nil		reduce (87)

state 360
	(88) no_comma : ',' . 
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' . constant_declaration 

	T_STRING	shift 434
	constant_declaration	goto 775
	@nil		reduce (88)

state 361
	(88) no_comma : ',' . 
	(258) non_empty_static_var_list : non_empty_static_var_list ',' . static_var 

	T_VARIABLE	shift 437
	static_var	goto 780
	@nil		reduce (88)

state 362
	(171) variables_list : non_empty_variables_list . no_comma 
	(173) non_empty_variables_list : non_empty_variables_list . ',' variable 
	(87) no_comma : . 

	','		shift 225
	no_comma	goto 781
	@nil		reduce (87)

state 363
	(247) argument_list : '(' non_empty_argument_list . no_comma ')' 
	(249) non_empty_argument_list : non_empty_argument_list . ',' argument 
	(87) no_comma : . 

	','		shift 21
	no_comma	goto 479
	@nil		reduce (87)

state 364
	(179) class_declaration_statement : class_entry_type T_STRING extends_from . implements_list '{' class_statement_list '}' 
	(189) implements_list : . 

	T_IMPLEMENTS	shift 256
	implements_list	goto 480
	@nil		reduce (189)

state 365
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name . argument_list 

	'('		shift 20
	argument_list	goto 798
	@nil		error

state 366
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name . argument_list 
	(455) variable : dereferencable T_OBJECT_OPERATOR property_name . 

	'('		shift 20
	argument_list	goto 800
	@nil		reduce (455)

state 367
	(387) anonymous_class : T_CLASS ctor_arguments extends_from . implements_list '{' class_statement_list '}' 
	(189) implements_list : . 

	T_IMPLEMENTS	shift 256
	implements_list	goto 481
	@nil		reduce (189)

state 368
	(88) no_comma : ',' . 
	(203) non_empty_declare_list : non_empty_declare_list ',' . declare_list_element 

	T_STRING	shift 450
	declare_list_element	goto 811
	@nil		reduce (88)

state 369
	(231) parameter_list : non_empty_parameter_list . no_comma 
	(234) non_empty_parameter_list : non_empty_parameter_list . ',' parameter 
	(87) no_comma : . 

	','		shift 239
	no_comma	goto 814
	@nil		reduce (87)

state 370
	(235) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE 
	(236) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE '=' expr 
	(174) optional_ref : . 

	'&'		shift 615
	optional_ref	goto 375
	@nil		reduce (174)

state 371
	(191) class_name_list : non_empty_class_name_list . no_comma 
	(193) non_empty_class_name_list : non_empty_class_name_list . ',' class_name 
	(87) no_comma : . 

	','		shift 262
	no_comma	goto 828
	@nil		reduce (87)

state 372
	(207) switch_case_list : ':' . case_list T_ENDSWITCH ';' 
	(208) switch_case_list : ':' . ';' case_list T_ENDSWITCH ';' 
	(209) case_list : . 

	';'		shift 572
	case_list	goto 277
	@nil		reduce (209)

state 373
	(205) switch_case_list : '{' . case_list '}' 
	(206) switch_case_list : '{' . ';' case_list '}' 
	(209) case_list : . 

	';'		shift 573
	case_list	goto 278
	@nil		reduce (209)

state 374
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
	(390) lexical_vars : . 

	T_USE		shift 492
	lexical_vars	goto 378
	@nil		reduce (390)

state 375
	(235) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE 
	(236) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE '=' expr 
	(176) optional_ellipsis : . 

	T_ELLIPSIS	shift 840
	optional_ellipsis	goto 493
	@nil		reduce (176)

state 376
	(114) inline_use_declarations : non_empty_inline_use_declarations . optional_comma 
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations . ',' inline_use_declaration 
	(89) optional_comma : . 

	','		shift 271
	optional_comma	goto 845
	@nil		reduce (89)

state 377
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 508
	@nil		reduce (244)

state 378
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 509
	@nil		reduce (244)

state 379
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations . optional_comma 
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations . ',' unprefixed_use_declaration 
	(89) optional_comma : . 

	','		shift 341
	optional_comma	goto 861
	@nil		reduce (89)

state 380
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
	(390) lexical_vars : . 

	T_USE		shift 492
	lexical_vars	goto 383
	@nil		reduce (390)

state 381
	(294) property_declaration_list : non_empty_property_declaration_list . no_comma 
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list . ',' property_declaration 
	(87) no_comma : . 

	','		shift 384
	no_comma	goto 865
	@nil		reduce (87)

state 382
	(266) class_statement : method_modifiers T_FUNCTION . optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
	(174) optional_ref : . 

	'&'		shift 615
	optional_ref	goto 8
	@nil		reduce (174)

state 383
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 522
	@nil		reduce (244)

state 384
	(88) no_comma : ',' . 
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' . property_declaration 

	T_VARIABLE	shift 498
	property_declaration	goto 883
	@nil		reduce (88)

state 385
	(127) class_const_list : non_empty_class_const_list . no_comma 
	(128) non_empty_class_const_list : non_empty_class_const_list . ',' class_const 
	(87) no_comma : . 

	','		shift 7
	no_comma	goto 885
	@nil		reduce (87)

state 386
	(392) lexical_var_list : non_empty_lexical_var_list . no_comma 
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list . ',' lexical_var 
	(87) no_comma : . 

	','		shift 292
	no_comma	goto 893
	@nil		reduce (87)

state 387
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' . optional_return_type method_body 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 311
	@nil		reduce (244)

state 388
	(0) $start : start . 

	EOF		accept
	@nil		error

state 389
	(366) expr : T_EVAL . '(' expr ')' 

	'('		shift 64
	@nil		error

state 390
	(139) non_empty_statement : T_IF . '(' expr ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF . '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	'('		shift 66
	@nil		error

state 391
	(82) namespace_name_parts : T_STRING . 
	(160) non_empty_statement : T_STRING . ':' 

	':'		shift 614
	@nil		reduce (82)

state 392
	(141) non_empty_statement : T_WHILE . '(' expr ')' while_statement 

	'('		shift 67
	@nil		error

state 393
	(143) non_empty_statement : T_FOR . '(' for_expr ';' for_expr ';' for_expr ')' for_statement 

	'('		shift 29
	@nil		error

state 394
	(154) non_empty_statement : T_FOREACH . '(' expr T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH . '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	'('		shift 68
	@nil		error

state 395
	(156) non_empty_statement : T_DECLARE . '(' declare_list ')' declare_statement 

	'('		shift 335
	@nil		error

state 396
	(144) non_empty_statement : T_SWITCH . '(' expr ')' switch_case_list 

	'('		shift 69
	@nil		error

state 397
	(159) non_empty_statement : T_GOTO . T_STRING semi 

	T_STRING	shift 298
	@nil		error

state 398
	(157) non_empty_statement : T_TRY . '{' inner_statement_list '}' catches optional_finally 

	'{'		shift 547
	@nil		error

state 399
	(183) class_entry_type : T_ABSTRACT . T_CLASS 

	T_CLASS		shift 624
	@nil		error

state 400
	(184) class_entry_type : T_FINAL . T_CLASS 

	T_CLASS		shift 625
	@nil		error

state 401
	(153) non_empty_statement : T_UNSET . '(' variables_list ')' semi 

	'('		shift 216
	@nil		error

state 402
	(362) expr : T_ISSET . '(' variables_list ')' 

	'('		shift 217
	@nil		error

state 403
	(363) expr : T_EMPTY . '(' expr ')' 

	'('		shift 70
	@nil		error

state 404
	(181) class_declaration_statement : T_TRAIT . T_STRING '{' class_statement_list '}' 

	T_STRING	shift 438
	@nil		error

state 405
	(180) class_declaration_statement : T_INTERFACE . T_STRING interface_extends_list '{' class_statement_list '}' 

	T_STRING	shift 355
	@nil		error

state 406
	(474) list_expr : T_LIST . '(' list_expr_elements ')' 

	'('		shift 33
	@nil		error

state 407
	(420) dereferencable_scalar : T_ARRAY . '(' array_pair_list ')' 

	'('		shift 23
	@nil		error

state 408
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(401) name : namespace_name_parts . 

	T_NS_SEPARATOR	shift 445
	@nil		reduce (401)

state 409
	(179) class_declaration_statement : class_entry_type . T_STRING extends_from implements_list '{' class_statement_list '}' 

	T_STRING	shift 357
	@nil		error

state 410
	(305) expr : list_expr . '=' expr 

	'='		shift 111
	@nil		error

state 411
	(306) expr : array_short_syntax . '=' expr 
	(421) dereferencable_scalar : array_short_syntax . 

	'='		shift 112
	@nil		reduce (421)

state 412
	(398) function_call : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM member_name argument_list 
	(417) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM identifier 
	(418) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM error 
	(460) static_member : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	T_PAAMAYIM_NEKUDOTAYIM	shift 3
	@nil		error

state 413
	(434) scalar : constant . 
	(449) callable_variable : constant . '[' optional_expr ']' 

	'['		shift 39
	@nil		reduce (434)

state 414
	(444) callable_expr : callable_variable . 
	(453) variable : callable_variable . 

	'('		reduce (444)
	@nil		reduce (453)

state 415
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(399) class_name : T_STATIC . 

	T_FUNCTION	shift 353
	@nil		reduce (399)

state 416
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_NS_SEPARATOR	shift 356
	@nil		error

state 417
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(344) expr : '+' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 98
	@nil		reduce (344)

state 418
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(345) expr : '-' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 98
	@nil		reduce (345)

state 419
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(347) expr : '~' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 98
	@nil		reduce (347)

state 420
	(449) callable_variable : constant . '[' optional_expr ']' 

	'['		shift 39
	@nil		error

state 421
	(443) dereferencable : dereferencable_scalar . 
	(446) callable_expr : dereferencable_scalar . 

	'('		reduce (446)
	@nil		reduce (443)

state 422
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(369) expr : T_INT_CAST expr . 

	T_POW		shift 98
	@nil		reduce (369)

state 423
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(370) expr : T_DOUBLE_CAST expr . 

	T_POW		shift 98
	@nil		reduce (370)

state 424
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(371) expr : T_STRING_CAST expr . 

	T_POW		shift 98
	@nil		reduce (371)

state 425
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(372) expr : T_ARRAY_CAST expr . 

	T_POW		shift 98
	@nil		reduce (372)

state 426
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(373) expr : T_OBJECT_CAST expr . 

	T_POW		shift 98
	@nil		reduce (373)

state 427
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(374) expr : T_BOOL_CAST expr . 

	T_POW		shift 98
	@nil		reduce (374)

state 428
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(375) expr : T_UNSET_CAST expr . 

	T_POW		shift 98
	@nil		reduce (375)

state 429
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(377) expr : '@' expr . 

	T_POW		shift 98
	@nil		reduce (377)

state 430
	(419) array_short_syntax : '[' array_pair_list . ']' 

	']'		shift 640
	@nil		error

state 431
	(482) array_pair_list : inner_array_pair_list . 
	(483) inner_array_pair_list : inner_array_pair_list . ',' array_pair 

	','		shift 24
	@nil		reduce (482)

state 432
	(404) class_name_reference : class_name . 
	(465) new_variable : class_name . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	T_PAAMAYIM_NEKUDOTAYIM	shift 304
	@nil		reduce (404)

state 433
	(142) non_empty_statement : T_DO statement . T_WHILE '(' expr ')' ';' 

	T_WHILE		shift 448
	@nil		error

state 434
	(126) constant_declaration : T_STRING . '=' expr 

	'='		shift 117
	@nil		error

state 435
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(106) group_use_declaration : T_USE namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_NS_SEPARATOR	shift 315
	@nil		reduce (84)

state 436
	(117) unprefixed_use_declaration : namespace_name . 
	(118) unprefixed_use_declaration : namespace_name . T_AS T_STRING 

	T_AS		shift 455
	@nil		reduce (117)

state 437
	(260) static_var : T_VARIABLE . 
	(261) static_var : T_VARIABLE . '=' expr 

	'='		shift 118
	@nil		reduce (260)

state 438
	(181) class_declaration_statement : T_TRAIT T_STRING . '{' class_statement_list '}' 

	'{'		shift 565
	@nil		error

state 439
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC 
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	T_END_HEREDOC	shift 662
	@nil		reduce (494)

state 440
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 

	T_NS_SEPARATOR	shift 445
	@nil		reduce (84)

state 441
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(402) name : T_NS_SEPARATOR namespace_name_parts . 

	T_NS_SEPARATOR	shift 445
	@nil		reduce (402)

state 442
	(138) non_empty_statement : '{' inner_statement_list . '}' 

	'}'		shift 673
	@nil		error

state 443
	(412) backticks_expr : T_ENCAPSED_AND_WHITESPACE . 
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	'`'		reduce (412)
	@nil		reduce (494)

state 444
	(379) expr : '`' backticks_expr . '`' 

	'`'		shift 674
	@nil		error

state 445
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 

	T_STRING	shift 676
	@nil		error

state 446
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	'('		shift 234
	@nil		error

state 447
	(410) exit_expr : '(' optional_expr . ')' 

	')'		shift 767
	@nil		error

state 448
	(142) non_empty_statement : T_DO statement T_WHILE . '(' expr ')' ';' 

	'('		shift 123
	@nil		error

state 449
	(143) non_empty_statement : T_FOR '(' for_expr . ';' for_expr ';' for_expr ')' for_statement 

	';'		shift 30
	@nil		error

state 450
	(204) declare_list_element : T_STRING . '=' expr 

	'='		shift 124
	@nil		error

state 451
	(156) non_empty_statement : T_DECLARE '(' declare_list . ')' declare_statement 

	')'		shift 16
	@nil		error

state 452
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING . '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 

	'('		shift 235
	@nil		error

state 453
	(157) non_empty_statement : T_TRY '{' inner_statement_list . '}' catches optional_finally 

	'}'		shift 566
	@nil		error

state 454
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_NS_SEPARATOR	shift 322
	@nil		reduce (84)

state 455
	(118) unprefixed_use_declaration : namespace_name T_AS . T_STRING 

	T_STRING	shift 776
	@nil		error

state 456
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(104) group_use_declaration : T_USE use_type namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_NS_SEPARATOR	shift 323
	@nil		reduce (84)

state 457
	(386) expr : T_STATIC T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	'('		shift 236
	@nil		error

state 458
	(153) non_empty_statement : T_UNSET '(' variables_list . ')' semi 

	')'		shift 308
	@nil		error

state 459
	(362) expr : T_ISSET '(' variables_list . ')' 

	')'		shift 782
	@nil		error

state 460
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list . '{' class_statement_list '}' 

	'{'		shift 567
	@nil		error

state 461
	(305) expr : list_expr . '=' expr 
	(478) list_expr_element : list_expr . 

	'='		shift 111
	@nil		reduce (478)

state 462
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list . ')' 

	')'		shift 787
	@nil		error

state 463
	(441) dereferencable : variable . 
	(502) encaps_var : T_CURLY_OPEN variable . '}' 

	'}'		shift 790
	@nil		reduce (441)

state 464
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR . T_STRING 

	T_STRING	shift 794
	@nil		error

state 465
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(403) name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts . 

	T_NS_SEPARATOR	shift 445
	@nil		reduce (403)

state 466
	(97) top_statement : T_NAMESPACE '{' top_statement_list . '}' 

	'}'		shift 795
	@nil		error

state 467
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(343) expr : expr T_POW expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 98
	@nil		reduce (343)

state 468
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM identifier . 
	(467) member_name : identifier . 

	'('		reduce (467)
	@nil		reduce (417)

state 469
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
	(469) member_name : simple_variable . 

	'('		reduce (469)
	@nil		reduce (460)

state 470
	(448) callable_variable : dereferencable '[' optional_expr . ']' 

	']'		shift 799
	@nil		error

state 471
	(449) callable_variable : constant '[' optional_expr . ']' 

	']'		shift 802
	@nil		error

state 472
	(442) dereferencable : '(' expr ')' . 
	(445) callable_expr : '(' expr ')' . 

	'('		reduce (445)
	@nil		reduce (442)

state 473
	(462) new_variable : new_variable '[' optional_expr . ']' 

	']'		shift 803
	@nil		error

state 474
	(385) expr : T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	')'		shift 374
	@nil		error

state 475
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_NS_SEPARATOR	shift 326
	@nil		reduce (84)

state 476
	(505) encaps_var_offset : '-' . T_NUM_STRING 

	T_NUM_STRING	shift 831
	@nil		error

state 477
	(497) encaps_var : encaps_base_var '[' encaps_var_offset . ']' 

	']'		shift 832
	@nil		error

state 478
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list . '}' 

	'}'		shift 833
	@nil		error

state 479
	(247) argument_list : '(' non_empty_argument_list no_comma . ')' 

	')'		shift 835
	@nil		error

state 480
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list . '{' class_statement_list '}' 

	'{'		shift 569
	@nil		error

state 481
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list . '{' class_statement_list '}' 

	'{'		shift 570
	@nil		error

state 482
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr . ';' for_expr ')' for_statement 

	';'		shift 31
	@nil		error

state 483
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable . ')' foreach_statement 

	')'		shift 12
	@nil		error

state 484
	(230) foreach_variable : array_short_syntax . 
	(421) dereferencable_scalar : array_short_syntax . 

	')'		reduce (230)
	@nil		reduce (421)

state 485
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list . ')' optional_return_type '{' inner_statement_list '}' 

	')'		shift 377
	@nil		error

state 486
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 

	'}'		shift 844
	@nil		error

state 487
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	')'		shift 380
	@nil		error

state 488
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' . ';' 

	';'		shift 853
	@nil		error

state 489
	(216) while_statement : ':' inner_statement_list . T_ENDWHILE ';' 

	T_ENDWHILE	shift 502
	@nil		error

state 490
	(228) foreach_variable : '&' variable . 
	(441) dereferencable : variable . 

	')'		reduce (228)
	@nil		reduce (441)

state 491
	(200) declare_statement : ':' inner_statement_list . T_ENDDECLARE ';' 

	T_ENDDECLARE	shift 506
	@nil		error

state 492
	(391) lexical_vars : T_USE . '(' lexical_var_list ')' 

	'('		shift 333
	@nil		error

state 493
	(235) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE 
	(236) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE '=' expr 

	T_VARIABLE	shift 510
	@nil		error

state 494
	(168) catch : T_CATCH . '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' 

	'('		shift 272
	@nil		error

state 495
	(170) optional_finally : T_FINALLY . '{' inner_statement_list '}' 

	'{'		shift 554
	@nil		error

state 496
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 

	'}'		shift 858
	@nil		error

state 497
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 

	'}'		shift 860
	@nil		error

state 498
	(297) property_declaration : T_VARIABLE . 
	(298) property_declaration : T_VARIABLE . '=' expr 

	'='		shift 128
	@nil		reduce (297)

state 499
	(264) class_statement : variable_modifiers property_declaration_list . ';' 

	';'		shift 864
	@nil		error

state 500
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}' 

	'}'		shift 867
	@nil		error

state 501
	(219) elseif : T_ELSEIF . '(' expr ')' statement 

	'('		shift 129
	@nil		error

state 502
	(216) while_statement : ':' inner_statement_list T_ENDWHILE . ';' 

	';'		shift 872
	@nil		error

state 503
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr . ')' for_statement 

	')'		shift 13
	@nil		error

state 504
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable . ')' foreach_statement 

	')'		shift 14
	@nil		error

state 505
	(227) foreach_variable : variable . 
	(441) dereferencable : variable . 

	')'		reduce (227)
	@nil		reduce (441)

state 506
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE . ';' 

	';'		shift 873
	@nil		error

state 507
	(207) switch_case_list : ':' case_list T_ENDSWITCH . ';' 

	';'		shift 874
	@nil		error

state 508
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 556
	@nil		error

state 509
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 557
	@nil		error

state 510
	(235) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . 
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . '=' expr 

	'='		shift 130
	@nil		reduce (235)

state 511
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 

	'}'		shift 881
	@nil		error

state 512
	(130) class_const : identifier . '=' expr 

	'='		shift 131
	@nil		error

state 513
	(265) class_statement : method_modifiers T_CONST class_const_list . ';' 

	';'		shift 884
	@nil		error

state 514
	(222) new_elseif : T_ELSEIF . '(' expr ')' ':' inner_statement_list 

	'('		shift 132
	@nil		error

state 515
	(226) new_else_single : T_ELSE . ':' inner_statement_list 

	':'		shift 558
	@nil		error

state 516
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single . T_ENDIF ';' 

	T_ENDIF		shift 524
	@nil		error

state 517
	(197) foreach_statement : ':' inner_statement_list . T_ENDFOREACH ';' 

	T_ENDFOREACH	shift 525
	@nil		error

state 518
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH . ';' 

	';'		shift 889
	@nil		error

state 519
	(395) lexical_var : optional_ref . T_VARIABLE 

	T_VARIABLE	shift 891
	@nil		error

state 520
	(391) lexical_vars : T_USE '(' lexical_var_list . ')' 

	')'		shift 892
	@nil		error

state 521
	(170) optional_finally : T_FINALLY '{' inner_statement_list . '}' 

	'}'		shift 894
	@nil		error

state 522
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 561
	@nil		error

state 523
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier . '(' parameter_list ')' optional_return_type method_body 

	'('		shift 237
	@nil		error

state 524
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF . ';' 

	';'		shift 900
	@nil		error

state 525
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH . ';' 

	';'		shift 901
	@nil		error

state 526
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 903
	@nil		error

state 527
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 905
	@nil		error

state 528
	(168) catch : T_CATCH '(' name_union T_VARIABLE . ')' '{' inner_statement_list '}' 

	')'		shift 535
	@nil		error

state 529
	(80) identifier : T_STRING . 
	(82) namespace_name_parts : T_STRING . 

	T_AS		reduce (80)
	@nil		reduce (82)

state 530
	(60) reserved_non_modifiers : T_NAMESPACE . 
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_NS_SEPARATOR	shift 356
	@nil		reduce (60)

state 531
	(277) trait_method_reference_fully_qualified : name . T_PAAMAYIM_NEKUDOTAYIM identifier 

	T_PAAMAYIM_NEKUDOTAYIM	shift 9
	@nil		error

state 532
	(272) trait_adaptation : trait_method_reference_fully_qualified . T_INSTEADOF class_name_list ';' 
	(278) trait_method_reference : trait_method_reference_fully_qualified . 

	T_INSTEADOF	shift 258
	@nil		reduce (278)

state 533
	(273) trait_adaptation : trait_method_reference . T_AS member_modifier identifier ';' 
	(274) trait_adaptation : trait_method_reference . T_AS member_modifier ';' 
	(275) trait_adaptation : trait_method_reference . T_AS T_STRING ';' 
	(276) trait_adaptation : trait_method_reference . T_AS reserved_non_modifiers ';' 

	T_AS		shift 10
	@nil		error

state 534
	(195) for_statement : ':' inner_statement_list . T_ENDFOR ';' 

	T_ENDFOR	shift 539
	@nil		error

state 535
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' . '{' inner_statement_list '}' 

	'{'		shift 562
	@nil		error

state 536
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 908
	@nil		error

state 537
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list . ')' optional_return_type method_body 

	')'		shift 387
	@nil		error

state 538
	(222) new_elseif : T_ELSEIF '(' expr ')' . ':' inner_statement_list 

	':'		shift 563
	@nil		error

state 539
	(195) for_statement : ':' inner_statement_list T_ENDFOR . ';' 

	';'		shift 910
	@nil		error

state 540
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list . ';' 

	';'		shift 911
	@nil		error

state 541
	(275) trait_adaptation : trait_method_reference T_AS T_STRING . ';' 

	';'		shift 912
	@nil		error

state 542
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers . ';' 

	';'		shift 913
	@nil		error

state 543
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list . '}' 

	'}'		shift 916
	@nil		error

state 544
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier . ';' 

	';'		shift 917
	@nil		error

state 545
	(281) method_body : '{' inner_statement_list . '}' 

	'}'		shift 920
	@nil		error

state 546
	(138) non_empty_statement : '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 442
	@nil		reduce (132)

state 547
	(157) non_empty_statement : T_TRY '{' . inner_statement_list '}' catches optional_finally 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 453
	@nil		reduce (132)

state 548
	(97) top_statement : T_NAMESPACE '{' . top_statement_list '}' 
	(3) top_statement_list_ex : . 

	top_statement_list	goto 466
	top_statement_list_ex	goto 2
	@nil		reduce (3)

state 549
	(96) top_statement : T_NAMESPACE namespace_name '{' . top_statement_list '}' 
	(3) top_statement_list_ex : . 

	top_statement_list	goto 478
	top_statement_list_ex	goto 2
	@nil		reduce (3)

state 550
	(140) non_empty_statement : T_IF '(' expr ')' ':' . inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 571
	@nil		reduce (132)

state 551
	(216) while_statement : ':' . inner_statement_list T_ENDWHILE ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 489
	@nil		reduce (132)

state 552
	(200) declare_statement : ':' . inner_statement_list T_ENDDECLARE ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 491
	@nil		reduce (132)

state 553
	(197) foreach_statement : ':' . inner_statement_list T_ENDFOREACH ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 517
	@nil		reduce (132)

state 554
	(170) optional_finally : T_FINALLY '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 521
	@nil		reduce (132)

state 555
	(212) case : T_DEFAULT case_separator . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 890
	@nil		reduce (132)

state 556
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 526
	@nil		reduce (132)

state 557
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 527
	@nil		reduce (132)

state 558
	(226) new_else_single : T_ELSE ':' . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 899
	@nil		reduce (132)

state 559
	(195) for_statement : ':' . inner_statement_list T_ENDFOR ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 534
	@nil		reduce (132)

state 560
	(211) case : T_CASE expr case_separator . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 902
	@nil		reduce (132)

state 561
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 536
	@nil		reduce (132)

state 562
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 543
	@nil		reduce (132)

state 563
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 915
	@nil		reduce (132)

state 564
	(281) method_body : '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 545
	@nil		reduce (132)

state 565
	(181) class_declaration_statement : T_TRAIT T_STRING '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 227
	@nil		reduce (263)

state 566
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' . catches optional_finally 
	(164) catches : . 

	catches		goto 289
	@nil		reduce (164)

state 567
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 228
	@nil		reduce (263)

state 568
	(139) non_empty_statement : T_IF '(' expr ')' statement . elseif_list else_single 
	(217) elseif_list : . 

	elseif_list	goto 290
	@nil		reduce (217)

state 569
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 229
	@nil		reduce (263)

state 570
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 230
	@nil		reduce (263)

state 571
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list . new_elseif_list new_else_single T_ENDIF ';' 
	(220) new_elseif_list : . 

	new_elseif_list	goto 291
	@nil		reduce (220)

state 572
	(208) switch_case_list : ':' ';' . case_list T_ENDSWITCH ';' 
	(209) case_list : . 

	case_list	goto 279
	@nil		reduce (209)

state 573
	(206) switch_case_list : '{' ';' . case_list '}' 
	(209) case_list : . 

	case_list	goto 280
	@nil		reduce (209)

state 574
	(269) trait_adaptations : '{' . trait_adaptation_list '}' 
	(270) trait_adaptation_list : . 

	trait_adaptation_list	goto 4
	@nil		reduce (270)

state 575
	(1) start : top_statement_list . 

	@nil		reduce (1)

state 576
	(161) non_empty_statement : error . 

	@nil		reduce (161)

state 577
	(423) scalar : T_LNUMBER . 

	@nil		reduce (423)

state 578
	(424) scalar : T_DNUMBER . 

	@nil		reduce (424)

state 579
	(456) simple_variable : T_VARIABLE . 

	@nil		reduce (456)

state 580
	(151) non_empty_statement : T_INLINE_HTML . 

	@nil		reduce (151)

state 581
	(422) dereferencable_scalar : T_CONSTANT_ENCAPSED_STRING . 

	@nil		reduce (422)

state 582
	(94) top_statement : T_HALT_COMPILER . 

	@nil		reduce (94)

state 583
	(182) class_entry_type : T_CLASS . 

	@nil		reduce (182)

state 584
	(428) scalar : T_CLASS_C . 

	@nil		reduce (428)

state 585
	(429) scalar : T_TRAIT_C . 

	@nil		reduce (429)

state 586
	(430) scalar : T_METHOD_C . 

	@nil		reduce (430)

state 587
	(431) scalar : T_FUNC_C . 

	@nil		reduce (431)

state 588
	(425) scalar : T_LINE . 

	@nil		reduce (425)

state 589
	(426) scalar : T_FILE . 

	@nil		reduce (426)

state 590
	(432) scalar : T_NS_C . 

	@nil		reduce (432)

state 591
	(427) scalar : T_DIR . 

	@nil		reduce (427)

state 592
	(163) statement : ';' . 

	@nil		reduce (163)

state 593
	(2) top_statement_list_ex : top_statement_list_ex top_statement . 

	@nil		reduce (2)

state 594
	(91) top_statement : statement . 

	@nil		reduce (91)

state 595
	(92) top_statement : function_declaration_statement . 

	@nil		reduce (92)

state 596
	(93) top_statement : class_declaration_statement . 

	@nil		reduce (93)

state 597
	(162) statement : non_empty_statement . 

	@nil		reduce (162)

state 598
	(407) class_name_or_var : class_name . 

	@nil		reduce (407)

state 599
	(447) callable_variable : simple_variable . 

	@nil		reduce (447)

state 600
	(309) expr : new_expr . 

	@nil		reduce (309)

state 601
	(378) expr : scalar . 

	@nil		reduce (378)

state 602
	(451) callable_variable : function_call . 

	@nil		reduce (451)

state 603
	(454) variable : static_member . 

	@nil		reduce (454)

state 604
	(82) namespace_name_parts : T_STRING . 

	@nil		reduce (82)

state 605
	(399) class_name : T_STATIC . 

	@nil		reduce (399)

state 606
	(421) dereferencable_scalar : array_short_syntax . 

	@nil		reduce (421)

state 607
	(484) inner_array_pair_list : array_pair . 

	@nil		reduce (484)

state 608
	(406) class_name_reference : error . 

	@nil		reduce (406)

state 609
	(400) class_name : name . 

	@nil		reduce (400)

state 610
	(461) new_variable : simple_variable . 

	@nil		reduce (461)

state 611
	(389) new_expr : T_NEW anonymous_class . 

	@nil		reduce (389)

state 612
	(310) expr : T_CLONE expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	@nil		reduce (310)

state 613
	(376) expr : T_EXIT exit_expr . 

	@nil		reduce (376)

state 614
	(160) non_empty_statement : T_STRING ':' . 

	@nil		reduce (160)

state 615
	(175) optional_ref : '&' . 

	@nil		reduce (175)

state 616
	(125) non_empty_constant_declaration_list : constant_declaration . 

	@nil		reduce (125)

state 617
	(102) use_type : T_FUNCTION . 

	@nil		reduce (102)

state 618
	(103) use_type : T_CONST . 

	@nil		reduce (103)

state 619
	(119) use_declaration : unprefixed_use_declaration . 

	@nil		reduce (119)

state 620
	(113) non_empty_use_declarations : use_declaration . 

	@nil		reduce (113)

state 621
	(255) non_empty_global_var_list : global_var . 

	@nil		reduce (255)

state 622
	(256) global_var : simple_variable . 

	@nil		reduce (256)

state 623
	(259) non_empty_static_var_list : static_var . 

	@nil		reduce (259)

state 624
	(183) class_entry_type : T_ABSTRACT T_CLASS . 

	@nil		reduce (183)

state 625
	(184) class_entry_type : T_FINAL T_CLASS . 

	@nil		reduce (184)

state 626
	(495) encaps_base_var : T_VARIABLE . 

	@nil		reduce (495)

state 627
	(436) scalar : T_START_HEREDOC T_END_HEREDOC . 

	@nil		reduce (436)

state 628
	(492) encaps_list : encaps_var . 

	@nil		reduce (492)

state 629
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	@nil		reduce (494)

state 630
	(459) simple_variable : '$' error . 

	@nil		reduce (459)

state 631
	(458) simple_variable : '$' simple_variable . 

	@nil		reduce (458)

state 632
	(86) semi : error . 

	@nil		reduce (86)

state 633
	(85) semi : ';' . 

	@nil		reduce (85)

state 634
	(100) top_statement : group_use_declaration semi . 

	@nil		reduce (100)

state 635
	(152) non_empty_statement : expr semi . 

	@nil		reduce (152)

state 636
	(323) expr : variable T_INC . 

	@nil		reduce (323)

state 637
	(325) expr : variable T_DEC . 

	@nil		reduce (325)

state 638
	(396) function_call : name argument_list . 

	@nil		reduce (396)

state 639
	(397) function_call : callable_expr argument_list . 

	@nil		reduce (397)

state 640
	(419) array_short_syntax : '[' array_pair_list ']' . 

	@nil		reduce (419)

state 641
	(415) ctor_arguments : argument_list . 

	@nil		reduce (415)

state 642
	(388) new_expr : T_NEW class_name_reference ctor_arguments . 

	@nil		reduce (388)

state 643
	(150) non_empty_statement : T_ECHO expr_list semi . 

	@nil		reduce (150)

state 644
	(299) expr_list : non_empty_expr_list no_comma . 

	@nil		reduce (299)

state 645
	(303) for_expr : expr_list . 

	@nil		reduce (303)

state 646
	(202) non_empty_declare_list : declare_list_element . 

	@nil		reduce (202)

state 647
	(145) non_empty_statement : T_BREAK optional_expr semi . 

	@nil		reduce (145)

state 648
	(146) non_empty_statement : T_CONTINUE optional_expr semi . 

	@nil		reduce (146)

state 649
	(159) non_empty_statement : T_GOTO T_STRING semi . 

	@nil		reduce (159)

state 650
	(101) top_statement : T_CONST constant_declaration_list semi . 

	@nil		reduce (101)

state 651
	(123) constant_declaration_list : non_empty_constant_declaration_list no_comma . 

	@nil		reduce (123)

state 652
	(147) non_empty_statement : T_RETURN optional_expr semi . 

	@nil		reduce (147)

state 653
	(158) non_empty_statement : T_THROW expr semi . 

	@nil		reduce (158)

state 654
	(120) use_declaration : T_NS_SEPARATOR unprefixed_use_declaration . 

	@nil		reduce (120)

state 655
	(98) top_statement : T_USE use_declarations semi . 

	@nil		reduce (98)

state 656
	(111) use_declarations : non_empty_use_declarations no_comma . 

	@nil		reduce (111)

state 657
	(148) non_empty_statement : T_GLOBAL global_var_list semi . 

	@nil		reduce (148)

state 658
	(253) global_var_list : non_empty_global_var_list no_comma . 

	@nil		reduce (253)

state 659
	(149) non_empty_statement : T_STATIC static_var_list semi . 

	@nil		reduce (149)

state 660
	(257) static_var_list : non_empty_static_var_list no_comma . 

	@nil		reduce (257)

state 661
	(476) list_expr_elements : list_expr_element . 

	@nil		reduce (476)

state 662
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC . 

	@nil		reduce (435)

state 663
	(438) scalar : T_START_HEREDOC encaps_list T_END_HEREDOC . 

	@nil		reduce (438)

state 664
	(490) encaps_list : encaps_list encaps_var . 

	@nil		reduce (490)

state 665
	(491) encaps_list : encaps_list encaps_string_part . 

	@nil		reduce (491)

state 666
	(493) encaps_list : encaps_string_part encaps_var . 

	@nil		reduce (493)

state 667
	(95) top_statement : T_NAMESPACE namespace_name semi . 

	@nil		reduce (95)

state 668
	(137) inner_statement : T_HALT_COMPILER . 

	@nil		reduce (137)

state 669
	(134) inner_statement : statement . 

	@nil		reduce (134)

state 670
	(135) inner_statement : function_declaration_statement . 

	@nil		reduce (135)

state 671
	(136) inner_statement : class_declaration_statement . 

	@nil		reduce (136)

state 672
	(131) inner_statement_list_ex : inner_statement_list_ex inner_statement . 

	@nil		reduce (131)

state 673
	(138) non_empty_statement : '{' inner_statement_list '}' . 

	@nil		reduce (138)

state 674
	(379) expr : '`' backticks_expr '`' . 

	@nil		reduce (379)

state 675
	(437) scalar : '"' encaps_list '"' . 

	@nil		reduce (437)

state 676
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING . 

	@nil		reduce (83)

state 677
	(357) expr : expr T_INSTANCEOF class_name_reference . 

	@nil		reduce (357)

state 678
	(246) argument_list : '(' ')' . 

	@nil		reduce (246)

state 679
	(248) non_empty_argument_list : argument . 

	@nil		reduce (248)

state 680
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM error . 

	@nil		reduce (418)

state 681
	(5) reserved_non_modifiers : T_INCLUDE . 

	@nil		reduce (5)

state 682
	(6) reserved_non_modifiers : T_INCLUDE_ONCE . 

	@nil		reduce (6)

state 683
	(7) reserved_non_modifiers : T_EVAL . 

	@nil		reduce (7)

state 684
	(8) reserved_non_modifiers : T_REQUIRE . 

	@nil		reduce (8)

state 685
	(9) reserved_non_modifiers : T_REQUIRE_ONCE . 

	@nil		reduce (9)

state 686
	(10) reserved_non_modifiers : T_LOGICAL_OR . 

	@nil		reduce (10)

state 687
	(11) reserved_non_modifiers : T_LOGICAL_XOR . 

	@nil		reduce (11)

state 688
	(12) reserved_non_modifiers : T_LOGICAL_AND . 

	@nil		reduce (12)

state 689
	(48) reserved_non_modifiers : T_PRINT . 

	@nil		reduce (48)

state 690
	(49) reserved_non_modifiers : T_YIELD . 

	@nil		reduce (49)

state 691
	(13) reserved_non_modifiers : T_INSTANCEOF . 

	@nil		reduce (13)

state 692
	(14) reserved_non_modifiers : T_NEW . 

	@nil		reduce (14)

state 693
	(15) reserved_non_modifiers : T_CLONE . 

	@nil		reduce (15)

state 694
	(16) reserved_non_modifiers : T_EXIT . 

	@nil		reduce (16)

state 695
	(17) reserved_non_modifiers : T_IF . 

	@nil		reduce (17)

state 696
	(18) reserved_non_modifiers : T_ELSEIF . 

	@nil		reduce (18)

state 697
	(19) reserved_non_modifiers : T_ELSE . 

	@nil		reduce (19)

state 698
	(20) reserved_non_modifiers : T_ENDIF . 

	@nil		reduce (20)

state 699
	(80) identifier : T_STRING . 

	@nil		reduce (80)

state 700
	(21) reserved_non_modifiers : T_ECHO . 

	@nil		reduce (21)

state 701
	(22) reserved_non_modifiers : T_DO . 

	@nil		reduce (22)

state 702
	(23) reserved_non_modifiers : T_WHILE . 

	@nil		reduce (23)

state 703
	(24) reserved_non_modifiers : T_ENDWHILE . 

	@nil		reduce (24)

state 704
	(25) reserved_non_modifiers : T_FOR . 

	@nil		reduce (25)

state 705
	(26) reserved_non_modifiers : T_ENDFOR . 

	@nil		reduce (26)

state 706
	(27) reserved_non_modifiers : T_FOREACH . 

	@nil		reduce (27)

state 707
	(28) reserved_non_modifiers : T_ENDFOREACH . 

	@nil		reduce (28)

state 708
	(29) reserved_non_modifiers : T_DECLARE . 

	@nil		reduce (29)

state 709
	(30) reserved_non_modifiers : T_ENDDECLARE . 

	@nil		reduce (30)

state 710
	(31) reserved_non_modifiers : T_AS . 

	@nil		reduce (31)

state 711
	(51) reserved_non_modifiers : T_SWITCH . 

	@nil		reduce (51)

state 712
	(52) reserved_non_modifiers : T_ENDSWITCH . 

	@nil		reduce (52)

state 713
	(53) reserved_non_modifiers : T_CASE . 

	@nil		reduce (53)

state 714
	(54) reserved_non_modifiers : T_DEFAULT . 

	@nil		reduce (54)

state 715
	(55) reserved_non_modifiers : T_BREAK . 

	@nil		reduce (55)

state 716
	(43) reserved_non_modifiers : T_CONTINUE . 

	@nil		reduce (43)

state 717
	(44) reserved_non_modifiers : T_GOTO . 

	@nil		reduce (44)

state 718
	(45) reserved_non_modifiers : T_FUNCTION . 

	@nil		reduce (45)

state 719
	(46) reserved_non_modifiers : T_CONST . 

	@nil		reduce (46)

state 720
	(47) reserved_non_modifiers : T_RETURN . 

	@nil		reduce (47)

state 721
	(32) reserved_non_modifiers : T_TRY . 

	@nil		reduce (32)

state 722
	(33) reserved_non_modifiers : T_CATCH . 

	@nil		reduce (33)

state 723
	(34) reserved_non_modifiers : T_FINALLY . 

	@nil		reduce (34)

state 724
	(35) reserved_non_modifiers : T_THROW . 

	@nil		reduce (35)

state 725
	(36) reserved_non_modifiers : T_USE . 

	@nil		reduce (36)

state 726
	(37) reserved_non_modifiers : T_INSTEADOF . 

	@nil		reduce (37)

state 727
	(38) reserved_non_modifiers : T_GLOBAL . 

	@nil		reduce (38)

state 728
	(74) semi_reserved : T_STATIC . 

	@nil		reduce (74)

state 729
	(75) semi_reserved : T_ABSTRACT . 

	@nil		reduce (75)

state 730
	(76) semi_reserved : T_FINAL . 

	@nil		reduce (76)

state 731
	(77) semi_reserved : T_PRIVATE . 

	@nil		reduce (77)

state 732
	(78) semi_reserved : T_PROTECTED . 

	@nil		reduce (78)

state 733
	(79) semi_reserved : T_PUBLIC . 

	@nil		reduce (79)

state 734
	(39) reserved_non_modifiers : T_VAR . 

	@nil		reduce (39)

state 735
	(40) reserved_non_modifiers : T_UNSET . 

	@nil		reduce (40)

state 736
	(41) reserved_non_modifiers : T_ISSET . 

	@nil		reduce (41)

state 737
	(42) reserved_non_modifiers : T_EMPTY . 

	@nil		reduce (42)

state 738
	(72) reserved_non_modifiers : T_HALT_COMPILER . 

	@nil		reduce (72)

state 739
	(63) reserved_non_modifiers : T_CLASS . 

	@nil		reduce (63)

state 740
	(61) reserved_non_modifiers : T_TRAIT . 

	@nil		reduce (61)

state 741
	(62) reserved_non_modifiers : T_INTERFACE . 

	@nil		reduce (62)

state 742
	(58) reserved_non_modifiers : T_EXTENDS . 

	@nil		reduce (58)

state 743
	(59) reserved_non_modifiers : T_IMPLEMENTS . 

	@nil		reduce (59)

state 744
	(50) reserved_non_modifiers : T_LIST . 

	@nil		reduce (50)

state 745
	(56) reserved_non_modifiers : T_ARRAY . 

	@nil		reduce (56)

state 746
	(57) reserved_non_modifiers : T_CALLABLE . 

	@nil		reduce (57)

state 747
	(64) reserved_non_modifiers : T_CLASS_C . 

	@nil		reduce (64)

state 748
	(65) reserved_non_modifiers : T_TRAIT_C . 

	@nil		reduce (65)

state 749
	(67) reserved_non_modifiers : T_METHOD_C . 

	@nil		reduce (67)

state 750
	(66) reserved_non_modifiers : T_FUNC_C . 

	@nil		reduce (66)

state 751
	(68) reserved_non_modifiers : T_LINE . 

	@nil		reduce (68)

state 752
	(69) reserved_non_modifiers : T_FILE . 

	@nil		reduce (69)

state 753
	(60) reserved_non_modifiers : T_NAMESPACE . 

	@nil		reduce (60)

state 754
	(71) reserved_non_modifiers : T_NS_C . 

	@nil		reduce (71)

state 755
	(70) reserved_non_modifiers : T_DIR . 

	@nil		reduce (70)

state 756
	(73) semi_reserved : reserved_non_modifiers . 

	@nil		reduce (73)

state 757
	(81) identifier : semi_reserved . 

	@nil		reduce (81)

state 758
	(473) property_name : error . 

	@nil		reduce (473)

state 759
	(470) property_name : T_STRING . 

	@nil		reduce (470)

state 760
	(472) property_name : simple_variable . 

	@nil		reduce (472)

state 761
	(366) expr : T_EVAL '(' expr ')' . 

	@nil		reduce (366)

state 762
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(383) expr : T_YIELD expr T_DOUBLE_ARROW expr . 

	@nil		reduce (383)

state 763
	(483) inner_array_pair_list : inner_array_pair_list ',' array_pair . 

	@nil		reduce (483)

state 764
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable . 

	@nil		reduce (465)

state 765
	(464) new_variable : new_variable T_OBJECT_OPERATOR property_name . 

	@nil		reduce (464)

state 766
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable . 

	@nil		reduce (466)

state 767
	(410) exit_expr : '(' optional_expr ')' . 

	@nil		reduce (410)

state 768
	(201) declare_list : non_empty_declare_list no_comma . 

	@nil		reduce (201)

state 769
	(240) type : T_ARRAY . 

	@nil		reduce (240)

state 770
	(241) type : T_CALLABLE . 

	@nil		reduce (241)

state 771
	(239) type : name . 

	@nil		reduce (239)

state 772
	(233) non_empty_parameter_list : parameter . 

	@nil		reduce (233)

state 773
	(243) optional_param_type : type_expr . 

	@nil		reduce (243)

state 774
	(237) type_expr : type . 

	@nil		reduce (237)

state 775
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' constant_declaration . 

	@nil		reduce (124)

state 776
	(118) unprefixed_use_declaration : namespace_name T_AS T_STRING . 

	@nil		reduce (118)

state 777
	(99) top_statement : T_USE use_type use_declarations semi . 

	@nil		reduce (99)

state 778
	(112) non_empty_use_declarations : non_empty_use_declarations ',' use_declaration . 

	@nil		reduce (112)

state 779
	(254) non_empty_global_var_list : non_empty_global_var_list ',' global_var . 

	@nil		reduce (254)

state 780
	(258) non_empty_static_var_list : non_empty_static_var_list ',' static_var . 

	@nil		reduce (258)

state 781
	(171) variables_list : non_empty_variables_list no_comma . 

	@nil		reduce (171)

state 782
	(362) expr : T_ISSET '(' variables_list ')' . 

	@nil		reduce (362)

state 783
	(363) expr : T_EMPTY '(' expr ')' . 

	@nil		reduce (363)

state 784
	(192) non_empty_class_name_list : class_name . 

	@nil		reduce (192)

state 785
	(188) interface_extends_list : T_EXTENDS class_name_list . 

	@nil		reduce (188)

state 786
	(474) list_expr : T_LIST '(' list_expr_elements ')' . 

	@nil		reduce (474)

state 787
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list ')' . 

	@nil		reduce (420)

state 788
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' . 

	@nil		reduce (500)

state 789
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}' . 

	@nil		reduce (499)

state 790
	(502) encaps_var : T_CURLY_OPEN variable '}' . 

	@nil		reduce (502)

state 791
	(503) encaps_var_offset : T_STRING . 

	@nil		reduce (503)

state 792
	(506) encaps_var_offset : T_VARIABLE . 

	@nil		reduce (506)

state 793
	(504) encaps_var_offset : T_NUM_STRING . 

	@nil		reduce (504)

state 794
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR T_STRING . 

	@nil		reduce (498)

state 795
	(97) top_statement : T_NAMESPACE '{' top_statement_list '}' . 

	@nil		reduce (97)

state 796
	(457) simple_variable : '$' '{' expr '}' . 

	@nil		reduce (457)

state 797
	(186) extends_from : T_EXTENDS class_name . 

	@nil		reduce (186)

state 798
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name argument_list . 

	@nil		reduce (398)

state 799
	(448) callable_variable : dereferencable '[' optional_expr ']' . 

	@nil		reduce (448)

state 800
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name argument_list . 

	@nil		reduce (452)

state 801
	(450) callable_variable : dereferencable '{' expr '}' . 

	@nil		reduce (450)

state 802
	(449) callable_variable : constant '[' optional_expr ']' . 

	@nil		reduce (449)

state 803
	(462) new_variable : new_variable '[' optional_expr ']' . 

	@nil		reduce (462)

state 804
	(463) new_variable : new_variable '{' expr '}' . 

	@nil		reduce (463)

state 805
	(215) while_statement : statement . 

	@nil		reduce (215)

state 806
	(141) non_empty_statement : T_WHILE '(' expr ')' while_statement . 

	@nil		reduce (141)

state 807
	(229) foreach_variable : list_expr . 

	@nil		reduce (229)

state 808
	(199) declare_statement : ';' . 

	@nil		reduce (199)

state 809
	(198) declare_statement : non_empty_statement . 

	@nil		reduce (198)

state 810
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' declare_statement . 

	@nil		reduce (156)

state 811
	(203) non_empty_declare_list : non_empty_declare_list ',' declare_list_element . 

	@nil		reduce (203)

state 812
	(144) non_empty_statement : T_SWITCH '(' expr ')' switch_case_list . 

	@nil		reduce (144)

state 813
	(238) type_expr : '?' type . 

	@nil		reduce (238)

state 814
	(231) parameter_list : non_empty_parameter_list no_comma . 

	@nil		reduce (231)

state 815
	(121) inline_use_declaration : unprefixed_use_declaration . 

	@nil		reduce (121)

state 816
	(116) non_empty_inline_use_declarations : inline_use_declaration . 

	@nil		reduce (116)

state 817
	(153) non_empty_statement : T_UNSET '(' variables_list ')' semi . 

	@nil		reduce (153)

state 818
	(291) member_modifier : T_STATIC . 

	@nil		reduce (291)

state 819
	(292) member_modifier : T_ABSTRACT . 

	@nil		reduce (292)

state 820
	(293) member_modifier : T_FINAL . 

	@nil		reduce (293)

state 821
	(290) member_modifier : T_PRIVATE . 

	@nil		reduce (290)

state 822
	(289) member_modifier : T_PROTECTED . 

	@nil		reduce (289)

state 823
	(288) member_modifier : T_PUBLIC . 

	@nil		reduce (288)

state 824
	(283) variable_modifiers : T_VAR . 

	@nil		reduce (283)

state 825
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}' . 

	@nil		reduce (181)

state 826
	(262) class_statement_list : class_statement_list class_statement . 

	@nil		reduce (262)

state 827
	(286) non_empty_member_modifiers : member_modifier . 

	@nil		reduce (286)

state 828
	(191) class_name_list : non_empty_class_name_list no_comma . 

	@nil		reduce (191)

state 829
	(480) list_expr_element : expr T_DOUBLE_ARROW list_expr . 

	@nil		reduce (480)

state 830
	(475) list_expr_elements : list_expr_elements ',' list_expr_element . 

	@nil		reduce (475)

state 831
	(505) encaps_var_offset : '-' T_NUM_STRING . 

	@nil		reduce (505)

state 832
	(497) encaps_var : encaps_base_var '[' encaps_var_offset ']' . 

	@nil		reduce (497)

state 833
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}' . 

	@nil		reduce (96)

state 834
	(249) non_empty_argument_list : non_empty_argument_list ',' argument . 

	@nil		reduce (249)

state 835
	(247) argument_list : '(' non_empty_argument_list no_comma ')' . 

	@nil		reduce (247)

state 836
	(190) implements_list : T_IMPLEMENTS class_name_list . 

	@nil		reduce (190)

state 837
	(468) member_name : '{' expr '}' . 

	@nil		reduce (468)

state 838
	(471) property_name : '{' expr '}' . 

	@nil		reduce (471)

state 839
	(234) non_empty_parameter_list : non_empty_parameter_list ',' parameter . 

	@nil		reduce (234)

state 840
	(177) optional_ellipsis : T_ELLIPSIS . 

	@nil		reduce (177)

state 841
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches optional_finally . 

	@nil		reduce (157)

state 842
	(165) catches : catches catch . 

	@nil		reduce (165)

state 843
	(122) inline_use_declaration : use_type unprefixed_use_declaration . 

	@nil		reduce (122)

state 844
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 

	@nil		reduce (106)

state 845
	(114) inline_use_declarations : non_empty_inline_use_declarations optional_comma . 

	@nil		reduce (114)

state 846
	(110) non_empty_unprefixed_use_declarations : unprefixed_use_declaration . 

	@nil		reduce (110)

state 847
	(295) non_empty_property_declaration_list : property_declaration . 

	@nil		reduce (295)

state 848
	(287) non_empty_member_modifiers : non_empty_member_modifiers member_modifier . 

	@nil		reduce (287)

state 849
	(193) non_empty_class_name_list : non_empty_class_name_list ',' class_name . 

	@nil		reduce (193)

state 850
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}' . 

	@nil		reduce (180)

state 851
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list else_single . 

	@nil		reduce (139)

state 852
	(218) elseif_list : elseif_list elseif . 

	@nil		reduce (218)

state 853
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' ';' . 

	@nil		reduce (142)

state 854
	(196) foreach_statement : statement . 

	@nil		reduce (196)

state 855
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement . 

	@nil		reduce (154)

state 856
	(210) case_list : case_list case . 

	@nil		reduce (210)

state 857
	(205) switch_case_list : '{' case_list '}' . 

	@nil		reduce (205)

state 858
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 

	@nil		reduce (107)

state 859
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' inline_use_declaration . 

	@nil		reduce (115)

state 860
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 

	@nil		reduce (104)

state 861
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations optional_comma . 

	@nil		reduce (108)

state 862
	(268) trait_adaptations : ';' . 

	@nil		reduce (268)

state 863
	(267) class_statement : T_USE class_name_list trait_adaptations . 

	@nil		reduce (267)

state 864
	(264) class_statement : variable_modifiers property_declaration_list ';' . 

	@nil		reduce (264)

state 865
	(294) property_declaration_list : non_empty_property_declaration_list no_comma . 

	@nil		reduce (294)

state 866
	(129) non_empty_class_const_list : class_const . 

	@nil		reduce (129)

state 867
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' . 

	@nil		reduce (501)

state 868
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}' . 

	@nil		reduce (179)

state 869
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list '}' . 

	@nil		reduce (387)

state 870
	(221) new_elseif_list : new_elseif_list new_elseif . 

	@nil		reduce (221)

state 871
	(224) else_single : T_ELSE statement . 

	@nil		reduce (224)

state 872
	(216) while_statement : ':' inner_statement_list T_ENDWHILE ';' . 

	@nil		reduce (216)

state 873
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE ';' . 

	@nil		reduce (200)

state 874
	(207) switch_case_list : ':' case_list T_ENDSWITCH ';' . 

	@nil		reduce (207)

state 875
	(213) case_separator : ':' . 

	@nil		reduce (213)

state 876
	(214) case_separator : ';' . 

	@nil		reduce (214)

state 877
	(206) switch_case_list : '{' ';' case_list '}' . 

	@nil		reduce (206)

state 878
	(245) optional_return_type : ':' type_expr . 

	@nil		reduce (245)

state 879
	(393) non_empty_lexical_var_list : lexical_var . 

	@nil		reduce (393)

state 880
	(166) name_union : name . 

	@nil		reduce (166)

state 881
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 

	@nil		reduce (105)

state 882
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' unprefixed_use_declaration . 

	@nil		reduce (109)

state 883
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' property_declaration . 

	@nil		reduce (296)

state 884
	(265) class_statement : method_modifiers T_CONST class_const_list ';' . 

	@nil		reduce (265)

state 885
	(127) class_const_list : non_empty_class_const_list no_comma . 

	@nil		reduce (127)

state 886
	(194) for_statement : statement . 

	@nil		reduce (194)

state 887
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement . 

	@nil		reduce (143)

state 888
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement . 

	@nil		reduce (155)

state 889
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH ';' . 

	@nil		reduce (208)

state 890
	(212) case : T_DEFAULT case_separator inner_statement_list . 

	@nil		reduce (212)

state 891
	(395) lexical_var : optional_ref T_VARIABLE . 

	@nil		reduce (395)

state 892
	(391) lexical_vars : T_USE '(' lexical_var_list ')' . 

	@nil		reduce (391)

state 893
	(392) lexical_var_list : non_empty_lexical_var_list no_comma . 

	@nil		reduce (392)

state 894
	(170) optional_finally : T_FINALLY '{' inner_statement_list '}' . 

	@nil		reduce (170)

state 895
	(269) trait_adaptations : '{' trait_adaptation_list '}' . 

	@nil		reduce (269)

state 896
	(279) trait_method_reference : identifier . 

	@nil		reduce (279)

state 897
	(271) trait_adaptation_list : trait_adaptation_list trait_adaptation . 

	@nil		reduce (271)

state 898
	(128) non_empty_class_const_list : non_empty_class_const_list ',' class_const . 

	@nil		reduce (128)

state 899
	(226) new_else_single : T_ELSE ':' inner_statement_list . 

	@nil		reduce (226)

state 900
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' . 

	@nil		reduce (140)

state 901
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH ';' . 

	@nil		reduce (197)

state 902
	(211) case : T_CASE expr case_separator inner_statement_list . 

	@nil		reduce (211)

state 903
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' . 

	@nil		reduce (178)

state 904
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' lexical_var . 

	@nil		reduce (394)

state 905
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 

	@nil		reduce (385)

state 906
	(167) name_union : name_union '|' name . 

	@nil		reduce (167)

state 907
	(219) elseif : T_ELSEIF '(' expr ')' statement . 

	@nil		reduce (219)

state 908
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 

	@nil		reduce (386)

state 909
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM identifier . 

	@nil		reduce (277)

state 910
	(195) for_statement : ':' inner_statement_list T_ENDFOR ';' . 

	@nil		reduce (195)

state 911
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list ';' . 

	@nil		reduce (272)

state 912
	(275) trait_adaptation : trait_method_reference T_AS T_STRING ';' . 

	@nil		reduce (275)

state 913
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers ';' . 

	@nil		reduce (276)

state 914
	(274) trait_adaptation : trait_method_reference T_AS member_modifier ';' . 

	@nil		reduce (274)

state 915
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' inner_statement_list . 

	@nil		reduce (222)

state 916
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' . 

	@nil		reduce (168)

state 917
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier ';' . 

	@nil		reduce (273)

state 918
	(280) method_body : ';' . 

	@nil		reduce (280)

state 919
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body . 

	@nil		reduce (266)

state 920
	(281) method_body : '{' inner_statement_list '}' . 

	@nil		reduce (281)

/home/ircmaxell/Workspace/PhpYacc/examples/10-php7/grammar.y: there are  2 shift/reduce conflicts

Statistics for /home/ircmaxell/Workspace/PhpYacc/examples/10-php7/grammar.y:
	165 terminal symbols
	144 nonterminal symbols
	507 productions
	921 states
	921 non leaf states
	2 shift/reduce, 0 reduce/reduce conflicts
	1277 lookahead sets used
	13816+1041=14857 action entries
State=>class:

  0=>0     1=>288   2=>302   3=>300   4=>283   5=>286   6=>285   7=>285   8=>285   9=>285 
 10=>284  11=>290  12=>292  13=>293  14=>292  15=>289  16=>291  17=>287  18=>287  19=>287 
 20=>280  21=>279  22=>277  23=>277  24=>277  25=>276  26=>282  27=>278  28=>281  29=>275 
 30=>275  31=>275  32=>275  33=>275  34=>275  35=>275  36=>275  37=>275  38=>275  39=>275 
 40=>275  41=>275  42=>275  43=>275  44=>275  45=>275  46=>275  47=>275  48=>275  49=>275 
 50=>275  51=>275  52=>275  53=>275  54=>275  55=>275  56=>275  57=>275  58=>275  59=>275 
 60=>275  61=>275  62=>275  63=>275  64=>275  65=>275  66=>275  67=>275  68=>275  69=>275 
 70=>275  71=>275  72=>275  73=>275  74=>275  75=>275  76=>275  77=>275  78=>275  79=>275 
 80=>275  81=>275  82=>275  83=>275  84=>275  85=>275  86=>275  87=>275  88=>275  89=>275 
 90=>275  91=>275  92=>275  93=>275  94=>275  95=>275  96=>275  97=>275  98=>275  99=>275 
100=>275 101=>275 102=>275 103=>275 104=>275 105=>275 106=>275 107=>275 108=>275 109=>275 
110=>275 111=>275 112=>275 113=>275 114=>275 115=>275 116=>275 117=>275 118=>275 119=>275 
120=>275 121=>275 122=>275 123=>275 124=>275 125=>275 126=>275 127=>275 128=>275 129=>275 
130=>275 131=>275 132=>275 133=>299 134=>299 135=>248 136=>249 137=>233 138=>238 139=>235 
140=>231 141=>230 142=>246 143=>234 144=>239 145=>250 146=>240 147=>241 148=>247 149=>242 
150=>243 151=>244 152=>245 153=>236 154=>229 155=>232 156=>237 157=>228 158=>228 159=>228 
160=>228 161=>228 162=>228 163=>228 164=>228 165=>228 166=>228 167=>228 168=>228 169=>228 
170=>228 171=>228 172=>228 173=>227 174=>224 175=>226 176=>211 177=>211 178=>211 179=>211 
180=>211 181=>211 182=>211 183=>211 184=>211 185=>211 186=>211 187=>211 188=>211 189=>211 
190=>211 191=>211 192=>211 193=>211 194=>204 195=>204 196=>204 197=>203 198=>201 199=>254 
200=>200 201=>196 202=>215 203=>195 204=>194 205=>194 206=>194 207=>194 208=>194 209=>193 
210=>193 211=>193 212=>193 213=>197 214=>197 215=>182 216=>181 217=>181 218=>181 219=>181 
220=>181 221=>181 222=>181 223=>181 224=>181 225=>181 226=>181 227=>118 228=>119 229=>120 
230=>121 231=>295 232=>192 233=>192 234=>213 235=>213 236=>213 237=>213 238=>294 239=>214 
240=>139 241=>212 242=>146 243=>150 244=>149 245=>164 246=>301 247=>301 248=>178 249=>179 
250=>190 251=>190 252=>190 253=>167 254=>147 255=>165 256=>165 257=>165 258=>165 259=>148 
260=>148 261=>165 262=>165 263=>296 264=>191 265=>180 266=>180 267=>185 268=>180 269=>166 
270=>166 271=>166 272=>163 273=>162 274=>145 275=>163 276=>298 277=>128 278=>126 279=>129 
280=>127 281=>183 282=>251 283=>252 284=>160 285=>144 286=>161 287=>141 288=>144 289=>123 
290=>176 291=>177 292=>199 293=>297 294=>107 295=>297 296=>297 297=>297 298=>297 299=>297 
300=>297 301=>297 302=>297 303=>297 304=>144 305=>144 306=>297 307=>206 308=>297 309=>85  
310=>210 311=>99  312=>189 313=>158 314=>187 315=>169 316=>257 317=>261 318=>186 319=>189 
320=>189 321=>189 322=>170 323=>171 324=>255 325=>225 326=>172 327=>256 328=>125 329=>253 
330=>202 331=>159 332=>159 333=>198 334=>155 335=>157 336=>159 337=>159 338=>159 339=>159 
340=>142 341=>159 342=>31  343=>31  344=>35  345=>198 346=>159 347=>31  348=>198 349=>262 
350=>271 351=>267 352=>268 353=>198 354=>272 355=>113 356=>159 357=>114 358=>114 359=>273 
360=>155 361=>140 362=>263 363=>259 364=>112 365=>31  366=>31  367=>112 368=>157 369=>264 
370=>198 371=>265 372=>82  373=>83  374=>122 375=>100 376=>266 377=>205 378=>205 379=>270 
380=>122 381=>274 382=>198 383=>205 384=>142 385=>258 386=>269 387=>205 388=>303 389=>36  
390=>37  391=>209 392=>38  393=>33  394=>39  395=>53  396=>40  397=>152 398=>70  399=>115 
400=>116 401=>45  402=>46  403=>41  404=>156 405=>153 406=>34  407=>32  408=>106 409=>154 
410=>216 411=>217 412=>108 413=>184 414=>30  415=>124 416=>105 417=>188 418=>188 419=>188 
420=>184 421=>28  422=>188 423=>188 424=>188 425=>188 426=>188 427=>188 428=>188 429=>188 
430=>1   431=>260 432=>110 433=>137 434=>218 435=>101 436=>132 437=>219 438=>76  439=>111 
440=>106 441=>106 442=>55  443=>6   444=>7   445=>168 446=>47  447=>21  448=>42  449=>80  
450=>220 451=>14  452=>48  453=>54  454=>102 455=>173 456=>103 457=>49  458=>15  459=>22  
460=>77  461=>216 462=>23  463=>56  464=>174 465=>106 466=>57  467=>188 468=>27  469=>26  
470=>2   471=>3   472=>29  473=>4   474=>16  475=>104 476=>138 477=>5   478=>58  479=>24  
480=>78  481=>79  482=>81  483=>11  484=>8   485=>17  486=>59  487=>18  488=>84  489=>136 
490=>9   491=>133 492=>52  493=>143 494=>51  495=>71  496=>60  497=>61  498=>221 499=>86  
500=>62  501=>43  502=>87  503=>12  504=>13  505=>10  506=>88  507=>89  508=>72  509=>73  
510=>222 511=>63  512=>223 513=>90  514=>44  515=>207 516=>175 517=>134 518=>91  519=>151 
520=>25  521=>64  522=>74  523=>50  524=>92  525=>93  526=>65  527=>66  528=>20  529=>130 
530=>105 531=>109 532=>117 533=>131 534=>135 535=>75  536=>67  537=>19  538=>208 539=>94  
540=>95  541=>96  542=>97  543=>68  544=>98  545=>69  546=>0   547=>0   548=>0   549=>0   
550=>0   551=>0   552=>0   553=>0   554=>0   555=>0   556=>0   557=>0   558=>0   559=>0   
560=>0   561=>0   562=>0   563=>0   564=>0   565=>0   566=>0   567=>0   568=>0   569=>0   
570=>0   571=>0   572=>0   573=>0   574=>0   575=>0   576=>0   577=>0   578=>0   579=>0   
580=>0   581=>0   582=>0   583=>0   584=>0   585=>0   586=>0   587=>0   588=>0   589=>0   
590=>0   591=>0   592=>0   593=>0   594=>0   595=>0   596=>0   597=>0   598=>0   599=>0   
600=>0   601=>0   602=>0   603=>0   604=>0   605=>0   606=>0   607=>0   608=>0   609=>0   
610=>0   611=>0   612=>0   613=>0   614=>0   615=>0   616=>0   617=>0   618=>0   619=>0   
620=>0   621=>0   622=>0   623=>0   624=>0   625=>0   626=>0   627=>0   628=>0   629=>0   
630=>0   631=>0   632=>0   633=>0   634=>0   635=>0   636=>0   637=>0   638=>0   639=>0   
640=>0   641=>0   642=>0   643=>0   644=>0   645=>0   646=>0   647=>0   648=>0   649=>0   
650=>0   651=>0   652=>0   653=>0   654=>0   655=>0   656=>0   657=>0   658=>0   659=>0   
660=>0   661=>0   662=>0   663=>0   664=>0   665=>0   666=>0   667=>0   668=>0   669=>0   
670=>0   671=>0   672=>0   673=>0   674=>0   675=>0   676=>0   677=>0   678=>0   679=>0   
680=>0   681=>0   682=>0   683=>0   684=>0   685=>0   686=>0   687=>0   688=>0   689=>0   
690=>0   691=>0   692=>0   693=>0   694=>0   695=>0   696=>0   697=>0   698=>0   699=>0   
700=>0   701=>0   702=>0   703=>0   704=>0   705=>0   706=>0   707=>0   708=>0   709=>0   
710=>0   711=>0   712=>0   713=>0   714=>0   715=>0   716=>0   717=>0   718=>0   719=>0   
720=>0   721=>0   722=>0   723=>0   724=>0   725=>0   726=>0   727=>0   728=>0   729=>0   
730=>0   731=>0   732=>0   733=>0   734=>0   735=>0   736=>0   737=>0   738=>0   739=>0   
740=>0   741=>0   742=>0   743=>0   744=>0   745=>0   746=>0   747=>0   748=>0   749=>0   
750=>0   751=>0   752=>0   753=>0   754=>0   755=>0   756=>0   757=>0   758=>0   759=>0   
760=>0   761=>0   762=>0   763=>0   764=>0   765=>0   766=>0   767=>0   768=>0   769=>0   
770=>0   771=>0   772=>0   773=>0   774=>0   775=>0   776=>0   777=>0   778=>0   779=>0   
780=>0   781=>0   782=>0   783=>0   784=>0   785=>0   786=>0   787=>0   788=>0   789=>0   
790=>0   791=>0   792=>0   793=>0   794=>0   795=>0   796=>0   797=>0   798=>0   799=>0   
800=>0   801=>0   802=>0   803=>0   804=>0   805=>0   806=>0   807=>0   808=>0   809=>0   
810=>0   811=>0   812=>0   813=>0   814=>0   815=>0   816=>0   817=>0   818=>0   819=>0   
820=>0   821=>0   822=>0   823=>0   824=>0   825=>0   826=>0   827=>0   828=>0   829=>0   
830=>0   831=>0   832=>0   833=>0   834=>0   835=>0   836=>0   837=>0   838=>0   839=>0   
840=>0   841=>0   842=>0   843=>0   844=>0   845=>0   846=>0   847=>0   848=>0   849=>0   
850=>0   851=>0   852=>0   853=>0   854=>0   855=>0   856=>0   857=>0   858=>0   859=>0   
860=>0   861=>0   862=>0   863=>0   864=>0   865=>0   866=>0   867=>0   868=>0   869=>0   
870=>0   871=>0   872=>0   873=>0   874=>0   875=>0   876=>0   877=>0   878=>0   879=>0   
880=>0   881=>0   882=>0   883=>0   884=>0   885=>0   886=>0   887=>0   888=>0   889=>0   
890=>0   891=>0   892=>0   893=>0   894=>0   895=>0   896=>0   897=>0   898=>0   899=>0   
900=>0   901=>0   902=>0   903=>0   904=>0   905=>0   906=>0   907=>0   908=>0   909=>0   
910=>0   911=>0   912=>0   913=>0   914=>0   915=>0   916=>0   917=>0   918=>0   919=>0   
920=>0   

Terminal action:
     T\S   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303

   error














T_PLUS_E  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   99  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   99  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
















     '|


T_IS_EQU  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -32767  81  81  .   .   .   81  81  .   81  81  .   .   .   .   .   .   81  .   .   .   .   .   .   .   .   .   .   .   .   81  .   81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  81  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   81  .   .   .   . 
T_IS_NOT  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -32767  82  82  .   .   .   82  82  .   82  82  .   .   .   .   .   .   82  .   .   .   .   .   .   .   .   .   .   .   .   82  .   82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  82  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   82  .   .   .   . 




T_IS_SMA  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -32767  87  87  87  .   .   .   87  87  .   87  87  .   .   .   .   .   .   87  .   .   .   .   .   .   .   .   .   .   .   .   87  .   87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  87  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   87  .   .   .   . 









     '%'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   97  .   97  97  97  97  97  .   .   .   97  97  .   97  97  .   .   .   .   .   .   97  .   .   .   .   .   .   .   .   .   .   .   .   97  .   97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  97  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   97  .   .   .   . 


     '~



















T_LNUMBE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  577 577 577 577 577 577 577 577  .   .   .   .  577 577 577 577 577 577 577  .   .   .   .   .   .   .   .  577  . 










 T_WHILE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  448  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  702 702 702 702 392 392 392 392 392 392 392  .   .   .   .   .   .  702  .  392  . 
























T_GLOBAL  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  727 727 727 727 285 285 285 285 285 285 285  .   .   .   .   .   .  727  .  285  . 




















T_CLASS_  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  584 584 584 584 584 584 584 584 747 747 747 747 584 584 584 584 584 584 584  .   .   .   .   .   .  747  .  584  . 

T_METHOD  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  586 586 586 586 586 586 586 586 749 749 749 749 586 586 586 586 586 586 586  .   .   .   .   .   .  749  .  586  . 
T_FUNC_C  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  587 587 587 587 587 587 587 587 750 750 750 750 587 587 587 587 587 587 587  .   .   .   .   .   .  750  .  587  . 








  T_NS_C  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  590 590 590 590 590 590 590 590 754 754 754 754 590 590 590 590 590 590 590  .   .   .   .   .   .  754  .  590  . 
   T_DIR  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  591 591 591 591 591 591 591 591 755 755 755 755 591 591 591 591 591 591 591  .   .   .   .   .   .  755  .  591  . 
T_NS_SEP  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  315 322 323 326 356 445  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  337 338 356 346 346 346  .  336  .   .   .   .   .   .   .   .   .   .   .   .   .  346 346  .   .   .   .   .   .   .   .   .   .   .   .   .   .  346  .   .   .   .   .   .   .   .   .   .   .   .   .   .  346 346 346  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  346 346 346 346 346 346 346 346 346  .   .   .  346 346 346 346 346 346 346 346 346  .   .   .   .   .   .  346  . 

     ';'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   30  31 572 573 853 862 864 872 873 874 884 889 900 901 910 911 912 913 917 918  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  876  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  876  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  914 592 592 592 592 808 592 592  .   .   .  633 633 633  .   .  592  . 
     '{'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  547 554 556 557 561 562 565 567 569 570  .   .   .   .   .  574  .   .   .   .   .   .   .   .   .   .   .   .   .  564  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  548  .   .   .   .   .   .  269 270 331 332  .   .   .   .   . -443-442-441  .   .  113  .  115  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  373  .   .   .   .   .   .   .   . -441  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -441  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  546 546 546 546 546 546 546  .   .   71  .  549  .  121 122 546  . 
     '}'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  566 673 790 795 833 844 858 860 867 881 894 903 905 908 916 920  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  825 850 868 869  .   .   .   .  857 877  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  788  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  789 796 801 804 837 838  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  895  .   .   .   . -133  .   .   .   .   .   .   .   .   .   .   .   .   .   -4  . 
     '('  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -469-467-446-445-444  20  23  29  33  37  64  66  67  68  69  70 123 129 132 216 217 234 235 236 237 272 333 335  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   20  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  234  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -446-445  .   65  65  .   .   .   .   .   .   .   .   .   .   .   .   .   .   65  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   63  63  63  63  63  63  63  63  .   .   .   .   63  63  63  63  63  63  63  .   .   .   .   .   .   .   .   63  . 
     ')'  .   .   .   .   .   .   .   . -230-228-227  12  13  14  16 308 374 377 380 387 535 767 782 787 835 892  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  -88  .   .   .   .   .   .   .   .   .   .   .   .   . -232 -88  .   .   .   .   .   .   .   .   .   . -227  .   .   .   .   11  15  19 249 307 472 488 538 761 783  .   .   .   .   .   .   .   .   .   .   . -488-487-479-477-251-173-172  .   .   .  786  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  678  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
     '`




Nonterminal GOTO table:
     T\S   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920
   start
top_stat
top_stat
top_stat
reserved
semi_res
identifi
namespac
namespac
    semi
no_comma
optional
statemen
function
class_de
use_decl
use_type
group_us
constant
unprefix
inline_u  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  486 496  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  379 379  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
unprefix
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  351  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  351  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
use_decl
non_empt
inline_u
non_empt
constant
    expr  .  133 133  .   .   .   .   .   .   .   .  133 133 133 133 133 133 133 133 133 163 163 136 136 136 146 148 179 164 161 161 161 161 145 162 162 162 162 162 162 162 145 157 158 159 160 176 174 177 417 418 312 419 422 423 424 425 426 427 428 429 612 134 137 138 139 140 141 142 143 144 147 173 175 178 194 197 198 200 201 203 204 205 206 207 208 209 210 211 212 232 233 250 251 252 319 320 321 467 180 181 182 183 184 185 186 187 188 189 190 191 192 193 149 762 150 165 166 167 195 168 151 152 153 169 154 196 135 170 155 171 172 156  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_co
non_empt
class_co
inner_st
inner_st  .  672  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
inner_st
non_empt
elseif_l
else_sin
new_else
new_else
while_st
for_expr
for_stat
switch_c
optional
global_v
static_v
expr_lis
variable  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  458 459  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
foreach
foreach
variable
declare
declare_  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  810  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
 catches
optional
   catch
name_uni  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  330  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
    name
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  362 362  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  519  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  519  .   .   .   .   .   .   .   .   .   .   .  313  .   .  446  .   .   .   .  457  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  375  .   .   .   .   .   .   .   .   .   .   .    8  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional
paramete
optional
class_en
extends
implemen
class_st
interfac
class_na
class_na
non_empt
non_empt
declare
case_lis
    case
case_sep
  elseif
new_else
list_exp
array_sh
non_empt
paramete
optional
type_exp
    type  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  774 774 774 774  .  774  .  774  .   .   .  813  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
argument
non_empt
argument
non_empt
global_v
simple_v
non_empt
static_v
class_st
variable  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  340 340 340 340  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
property
method_m
method_b
trait_ad
trait_ad
trait_ad
trait_me
trait_me
member_m  .   .   .   .   .   .   .   .   .   .    5  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  827 827 827 827  .   .   .   .   .   .   .   .   .  848  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  240 240 240 240  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
property
non_empt
new_expr
class_na
exit_exp  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  613  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
  scalar
backtick
lexical
anonymou
ctor_arg
lexical
non_empt
lexical
function
callable
class_na
member_n
new_vari
derefere
encaps_l
constant
array_pa
derefere  .  248 248  .   .   .   .   .   .   .   .  248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248 248  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  421 421 421 421 421 421 421 421 421 421 421 421 421 421  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
callable
property
static_m
list_exp
list_exp
inner_ar
array_pa
encaps_v
encaps_s
encaps_b  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  314 314 314  .   .   .   .   .   .   .   .   .  314  .   .   .   .  314 314  .   .   .   .   .   .   .   .   .   .   .   .   .  314  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
encaps_v

Nonterminal GOTO table:
     T\S default
   start     388  =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
top_stat
top_stat
top_stat
reserved
semi_res
identifi
namespac
namespac
    semi
no_comma
optional
statemen
function
class_de     671  .   =  596  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
use_decl
use_type
group_us     293  .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
constant
unprefix
inline_u
non_empt
unprefix
non_empt
use_decl
non_empt
inline_u     816  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =  859  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
constant
    expr     133  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =  163 163 136 136 136 146 148 179 164 161 161 161 161 145 162 162 162 162 162 162 162 145 157 158 159 160 176 174 177 417 418 312 419 422 423 424 425 426 427 428 429 612 134 137 138 139 140 141 142 143 144 147 173 175 178 194 197 198 200 201 203 204 205 206 207 208 209 210 211 212 232 233 250 251 252 319 320 321 467 180 181 182 183 184 185 186 187 188 189 190 191 192 193 149 762 150 165 166 167 195 168 151 152 153 169 154 196 135 170 155 171 172 156  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_co
non_empt
class_co
inner_st
inner_st     672  .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
inner_st
non_empt
elseif_l
else_sin
new_else
new_else
while_st
for_expr
for_stat
switch_c
optional
global_v
static_v
expr_lis
variable
foreach_     483  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =  504  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
foreach
variable
declare
declare
 catches
optional
   catch
name_uni
    name
non_empt
optional
optional
paramete
optional
class_en
extends
implemen
class_st
interfac     460  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_na     598  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .  432  .   .   .   .   .   .  432  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  784 784 784 784  .   .  797 849  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_na
non_empt
non_empt
declare
case_lis
    case
case_sep
  elseif
new_else
list_exp
array_sh
non_empt
paramete
optional
type_exp
    type
argument
non_empt
argument
non_empt
global_v
simple_v
non_empt
static_v
class_st
variable
property
method_m     328  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
method_b     919  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
trait_ad
trait_ad
trait_ad
trait_me
trait_me
member_m
non_empt
non_empt     381  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
property
non_empt
new_expr
class_na
exit_exp
  scalar
backtick
lexical_     378  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .  383  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
anonymou
ctor_arg
lexical
non_empt
lexical
function
callable
class_na
member_n
new_vari
derefere
encaps_l
constant
array_pa
derefere
callable
property
static_m
list_exp
list_exp
inner_ar
array_pa
encaps_v
encaps_s
encaps_b
encaps_v

Candidates of aux table:
Used aux table:
state 0 (class 0)
state 1 (class 288)
state 2 (class 302)
state 3 (class 300)
state 4 (class 283)
state 5 (class 286)
state 6 (class 285)
state 7 (class 285)
state 8 (class 285)
state 9 (class 285)
state 10 (class 284)
state 11 (class 290)
state 12 (class 292)
state 13 (class 293)
state 14 (class 292)
state 15 (class 289)
state 16 (class 291)
state 17 (class 287)
state 18 (class 287)
state 19 (class 287)
state 20 (class 280)
state 21 (class 279)
state 22 (class 277)
state 23 (class 277)
state 24 (class 277)
state 25 (class 276)
state 26 (class 282)
state 27 (class 278)
state 28 (class 281)
state 29 (class 275)
state 30 (class 275)
state 31 (class 275)
state 32 (class 275)
state 33 (class 275)
state 34 (class 275)
state 35 (class 275)
state 36 (class 275)
state 37 (class 275)
state 38 (class 275)
state 39 (class 275)
state 40 (class 275)
state 41 (class 275)
state 42 (class 275)
state 43 (class 275)
state 44 (class 275)
state 45 (class 275)
state 46 (class 275)
state 47 (class 275)
state 48 (class 275)
state 49 (class 275)
state 50 (class 275)
state 51 (class 275)
state 52 (class 275)
state 53 (class 275)
state 54 (class 275)
state 55 (class 275)
state 56 (class 275)
state 57 (class 275)
state 58 (class 275)
state 59 (class 275)
state 60 (class 275)
state 61 (class 275)
state 62 (class 275)
state 63 (class 275)
state 64 (class 275)
state 65 (class 275)
state 66 (class 275)
state 67 (class 275)
state 68 (class 275)
state 69 (class 275)
state 70 (class 275)
state 71 (class 275)
state 72 (class 275)
state 73 (class 275)
state 74 (class 275)
state 75 (class 275)
state 76 (class 275)
state 77 (class 275)
state 78 (class 275)
state 79 (class 275)
state 80 (class 275)
state 81 (class 275)
state 82 (class 275)
state 83 (class 275)
state 84 (class 275)
state 85 (class 275)
state 86 (class 275)
state 87 (class 275)
state 88 (class 275)
state 89 (class 275)
state 90 (class 275)
state 91 (class 275)
state 92 (class 275)
state 93 (class 275)
state 94 (class 275)
state 95 (class 275)
state 96 (class 275)
state 97 (class 275)
state 98 (class 275)
state 99 (class 275)
state 100 (class 275)
state 101 (class 275)
state 102 (class 275)
state 103 (class 275)
state 104 (class 275)
state 105 (class 275)
state 106 (class 275)
state 107 (class 275)
state 108 (class 275)
state 109 (class 275)
state 110 (class 275)
state 111 (class 275)
state 112 (class 275)
state 113 (class 275)
state 114 (class 275)
state 115 (class 275)
state 116 (class 275)
state 117 (class 275)
state 118 (class 275)
state 119 (class 275)
state 120 (class 275)
state 121 (class 275)
state 122 (class 275)
state 123 (class 275)
state 124 (class 275)
state 125 (class 275)
state 126 (class 275)
state 127 (class 275)
state 128 (class 275)
state 129 (class 275)
state 130 (class 275)
state 131 (class 275)
state 132 (class 275)
state 133 (class 299)
state 134 (class 299)
state 135 (class 248)
state 136 (class 249)
state 137 (class 233)
state 138 (class 238)
state 139 (class 235)
state 140 (class 231)
state 141 (class 230)
state 142 (class 246)
state 143 (class 234)
state 144 (class 239)
state 145 (class 250)
state 146 (class 240)
state 147 (class 241)
state 148 (class 247)
state 149 (class 242)
state 150 (class 243)
state 151 (class 244)
state 152 (class 245)
state 153 (class 236)
state 154 (class 229)
state 155 (class 232)
state 156 (class 237)
state 157 (class 228)
state 158 (class 228)
state 159 (class 228)
state 160 (class 228)
state 161 (class 228)
state 162 (class 228)
state 163 (class 228)
state 164 (class 228)
state 165 (class 228)
state 166 (class 228)
state 167 (class 228)
state 168 (class 228)
state 169 (class 228)
state 170 (class 228)
state 171 (class 228)
state 172 (class 228)
state 173 (class 227)
state 174 (class 224)
state 175 (class 226)
state 176 (class 211)
state 177 (class 211)
state 178 (class 211)
state 179 (class 211)
state 180 (class 211)
state 181 (class 211)
state 182 (class 211)
state 183 (class 211)
state 184 (class 211)
state 185 (class 211)
state 186 (class 211)
state 187 (class 211)
state 188 (class 211)
state 189 (class 211)
state 190 (class 211)
state 191 (class 211)
state 192 (class 211)
state 193 (class 211)
state 194 (class 204)
state 195 (class 204)
state 196 (class 204)
state 197 (class 203)
state 198 (class 201)
state 199 (class 254)
state 200 (class 200)
state 201 (class 196)
state 202 (class 215)
state 203 (class 195)
state 204 (class 194)
state 205 (class 194)
state 206 (class 194)
state 207 (class 194)
state 208 (class 194)
state 209 (class 193)
state 210 (class 193)
state 211 (class 193)
state 212 (class 193)
state 213 (class 197)
state 214 (class 197)
state 215 (class 182)
state 216 (class 181)
state 217 (class 181)
state 218 (class 181)
state 219 (class 181)
state 220 (class 181)
state 221 (class 181)
state 222 (class 181)
state 223 (class 181)
state 224 (class 181)
state 225 (class 181)
state 226 (class 181)
state 227 (class 118)
state 228 (class 119)
state 229 (class 120)
state 230 (class 121)
state 231 (class 295)
state 232 (class 192)
state 233 (class 192)
state 234 (class 213)
state 235 (class 213)
state 236 (class 213)
state 237 (class 213)
state 238 (class 294)
state 239 (class 214)
state 240 (class 139)
state 241 (class 212)
state 242 (class 146)
state 243 (class 150)
state 244 (class 149)
state 245 (class 164)
state 246 (class 301)
state 247 (class 301)
state 248 (class 178)
state 249 (class 179)
state 250 (class 190)
state 251 (class 190)
state 252 (class 190)
state 253 (class 167)
state 254 (class 147)
state 255 (class 165)
state 256 (class 165)
state 257 (class 165)
state 258 (class 165)
state 259 (class 148)
state 260 (class 148)
state 261 (class 165)
state 262 (class 165)
state 263 (class 296)
state 264 (class 191)
state 265 (class 180)
state 266 (class 180)
state 267 (class 185)
state 268 (class 180)
state 269 (class 166)
state 270 (class 166)
state 271 (class 166)
state 272 (class 163)
state 273 (class 162)
state 274 (class 145)
state 275 (class 163)
state 276 (class 298)
state 277 (class 128)
state 278 (class 126)
state 279 (class 129)
state 280 (class 127)
state 281 (class 183)
state 282 (class 251)
state 283 (class 252)
state 284 (class 160)
state 285 (class 144)
state 286 (class 161)
state 287 (class 141)
state 288 (class 144)
state 289 (class 123)
state 290 (class 176)
state 291 (class 177)
state 292 (class 199)
state 293 (class 297)
state 294 (class 107)
state 295 (class 297)
state 296 (class 297)
state 297 (class 297)
state 298 (class 297)
state 299 (class 297)
state 300 (class 297)
state 301 (class 297)
state 302 (class 297)
state 303 (class 297)
state 304 (class 144)
state 305 (class 144)
state 306 (class 297)
state 307 (class 206)
state 308 (class 297)
state 309 (class 85)
state 310 (class 210)
state 311 (class 99)
state 312 (class 189)
state 313 (class 158)
state 314 (class 187)
state 315 (class 169)
state 316 (class 257)
state 317 (class 261)
state 318 (class 186)
state 319 (class 189)
state 320 (class 189)
state 321 (class 189)
state 322 (class 170)
state 323 (class 171)
state 324 (class 255)
state 325 (class 225)
state 326 (class 172)
state 327 (class 256)
state 328 (class 125)
state 329 (class 253)
state 330 (class 202)
state 331 (class 159)
state 332 (class 159)
state 333 (class 198)
state 334 (class 155)
state 335 (class 157)
state 336 (class 159)
state 337 (class 159)
state 338 (class 159)
state 339 (class 159)
state 340 (class 142)
state 341 (class 159)
state 342 (class 31)
state 343 (class 31)
state 344 (class 35)
state 345 (class 198)
state 346 (class 159)
state 347 (class 31)
state 348 (class 198)
state 349 (class 262)
state 350 (class 271)
state 351 (class 267)
state 352 (class 268)
state 353 (class 198)
state 354 (class 272)
state 355 (class 113)
state 356 (class 159)
state 357 (class 114)
state 358 (class 114)
state 359 (class 273)
state 360 (class 155)
state 361 (class 140)
state 362 (class 263)
state 363 (class 259)
state 364 (class 112)
state 365 (class 31)
state 366 (class 31)
state 367 (class 112)
state 368 (class 157)
state 369 (class 264)
state 370 (class 198)
state 371 (class 265)
state 372 (class 82)
state 373 (class 83)
state 374 (class 122)
state 375 (class 100)
state 376 (class 266)
state 377 (class 205)
state 378 (class 205)
state 379 (class 270)
state 380 (class 122)
state 381 (class 274)
state 382 (class 198)
state 383 (class 205)
state 384 (class 142)
state 385 (class 258)
state 386 (class 269)
state 387 (class 205)
state 388 (class 303)
state 389 (class 36)
state 390 (class 37)
state 391 (class 209)
state 392 (class 38)
state 393 (class 33)
state 394 (class 39)
state 395 (class 53)
state 396 (class 40)
state 397 (class 152)
state 398 (class 70)
state 399 (class 115)
state 400 (class 116)
state 401 (class 45)
state 402 (class 46)
state 403 (class 41)
state 404 (class 156)
state 405 (class 153)
state 406 (class 34)
state 407 (class 32)
state 408 (class 106)
state 409 (class 154)
state 410 (class 216)
state 411 (class 217)
state 412 (class 108)
state 413 (class 184)
state 414 (class 30)
state 415 (class 124)
state 416 (class 105)
state 417 (class 188)
state 418 (class 188)
state 419 (class 188)
state 420 (class 184)
state 421 (class 28)
state 422 (class 188)
state 423 (class 188)
state 424 (class 188)
state 425 (class 188)
state 426 (class 188)
state 427 (class 188)
state 428 (class 188)
state 429 (class 188)
state 430 (class 1)
state 431 (class 260)
state 432 (class 110)
state 433 (class 137)
state 434 (class 218)
state 435 (class 101)
state 436 (class 132)
state 437 (class 219)
state 438 (class 76)
state 439 (class 111)
state 440 (class 106)
state 441 (class 106)
state 442 (class 55)
state 443 (class 6)
state 444 (class 7)
state 445 (class 168)
state 446 (class 47)
state 447 (class 21)
state 448 (class 42)
state 449 (class 80)
state 450 (class 220)
state 451 (class 14)
state 452 (class 48)
state 453 (class 54)
state 454 (class 102)
state 455 (class 173)
state 456 (class 103)
state 457 (class 49)
state 458 (class 15)
state 459 (class 22)
state 460 (class 77)
state 461 (class 216)
state 462 (class 23)
state 463 (class 56)
state 464 (class 174)
state 465 (class 106)
state 466 (class 57)
state 467 (class 188)
state 468 (class 27)
state 469 (class 26)
state 470 (class 2)
state 471 (class 3)
state 472 (class 29)
state 473 (class 4)
state 474 (class 16)
state 475 (class 104)
state 476 (class 138)
state 477 (class 5)
state 478 (class 58)
state 479 (class 24)
state 480 (class 78)
state 481 (class 79)
state 482 (class 81)
state 483 (class 11)
state 484 (class 8)
state 485 (class 17)
state 486 (class 59)
state 487 (class 18)
state 488 (class 84)
state 489 (class 136)
state 490 (class 9)
state 491 (class 133)
state 492 (class 52)
state 493 (class 143)
state 494 (class 51)
state 495 (class 71)
state 496 (class 60)
state 497 (class 61)
state 498 (class 221)
state 499 (class 86)
state 500 (class 62)
state 501 (class 43)
state 502 (class 87)
state 503 (class 12)
state 504 (class 13)
state 505 (class 10)
state 506 (class 88)
state 507 (class 89)
state 508 (class 72)
state 509 (class 73)
state 510 (class 222)
state 511 (class 63)
state 512 (class 223)
state 513 (class 90)
state 514 (class 44)
state 515 (class 207)
state 516 (class 175)
state 517 (class 134)
state 518 (class 91)
state 519 (class 151)
state 520 (class 25)
state 521 (class 64)
state 522 (class 74)
state 523 (class 50)
state 524 (class 92)
state 525 (class 93)
state 526 (class 65)
state 527 (class 66)
state 528 (class 20)
state 529 (class 130)
state 530 (class 105)
state 531 (class 109)
state 532 (class 117)
state 533 (class 131)
state 534 (class 135)
state 535 (class 75)
state 536 (class 67)
state 537 (class 19)
state 538 (class 208)
state 539 (class 94)
state 540 (class 95)
state 541 (class 96)
state 542 (class 97)
state 543 (class 68)
state 544 (class 98)
state 545 (class 69)
state 546 (class 0)
state 547 (class 0)
state 548 (class 0)
state 549 (class 0)
state 550 (class 0)
state 551 (class 0)
state 552 (class 0)
state 553 (class 0)
state 554 (class 0)
state 555 (class 0)
state 556 (class 0)
state 557 (class 0)
state 558 (class 0)
state 559 (class 0)
state 560 (class 0)
state 561 (class 0)
state 562 (class 0)
state 563 (class 0)
state 564 (class 0)
state 565 (class 0)
state 566 (class 0)
state 567 (class 0)
state 568 (class 0)
state 569 (class 0)
state 570 (class 0)
state 571 (class 0)
state 572 (class 0)
state 573 (class 0)
state 574 (class 0)
state 575 (class 0)
state 576 (class 0)
state 577 (class 0)
state 578 (class 0)
state 579 (class 0)
state 580 (class 0)
state 581 (class 0)
state 582 (class 0)
state 583 (class 0)
state 584 (class 0)
state 585 (class 0)
state 586 (class 0)
state 587 (class 0)
state 588 (class 0)
state 589 (class 0)
state 590 (class 0)
state 591 (class 0)
state 592 (class 0)
state 593 (class 0)
state 594 (class 0)
state 595 (class 0)
state 596 (class 0)
state 597 (class 0)
state 598 (class 0)
state 599 (class 0)
state 600 (class 0)
state 601 (class 0)
state 602 (class 0)
state 603 (class 0)
state 604 (class 0)
state 605 (class 0)
state 606 (class 0)
state 607 (class 0)
state 608 (class 0)
state 609 (class 0)
state 610 (class 0)
state 611 (class 0)
state 612 (class 0)
state 613 (class 0)
state 614 (class 0)
state 615 (class 0)
state 616 (class 0)
state 617 (class 0)
state 618 (class 0)
state 619 (class 0)
state 620 (class 0)
state 621 (class 0)
state 622 (class 0)
state 623 (class 0)
state 624 (class 0)
state 625 (class 0)
state 626 (class 0)
state 627 (class 0)
state 628 (class 0)
state 629 (class 0)
state 630 (class 0)
state 631 (class 0)
state 632 (class 0)
state 633 (class 0)
state 634 (class 0)
state 635 (class 0)
state 636 (class 0)
state 637 (class 0)
state 638 (class 0)
state 639 (class 0)
state 640 (class 0)
state 641 (class 0)
state 642 (class 0)
state 643 (class 0)
state 644 (class 0)
state 645 (class 0)
state 646 (class 0)
state 647 (class 0)
state 648 (class 0)
state 649 (class 0)
state 650 (class 0)
state 651 (class 0)
state 652 (class 0)
state 653 (class 0)
state 654 (class 0)
state 655 (class 0)
state 656 (class 0)
state 657 (class 0)
state 658 (class 0)
state 659 (class 0)
state 660 (class 0)
state 661 (class 0)
state 662 (class 0)
state 663 (class 0)
state 664 (class 0)
state 665 (class 0)
state 666 (class 0)
state 667 (class 0)
state 668 (class 0)
state 669 (class 0)
state 670 (class 0)
state 671 (class 0)
state 672 (class 0)
state 673 (class 0)
state 674 (class 0)
state 675 (class 0)
state 676 (class 0)
state 677 (class 0)
state 678 (class 0)
state 679 (class 0)
state 680 (class 0)
state 681 (class 0)
state 682 (class 0)
state 683 (class 0)
state 684 (class 0)
state 685 (class 0)
state 686 (class 0)
state 687 (class 0)
state 688 (class 0)
state 689 (class 0)
state 690 (class 0)
state 691 (class 0)
state 692 (class 0)
state 693 (class 0)
state 694 (class 0)
state 695 (class 0)
state 696 (class 0)
state 697 (class 0)
state 698 (class 0)
state 699 (class 0)
state 700 (class 0)
state 701 (class 0)
state 702 (class 0)
state 703 (class 0)
state 704 (class 0)
state 705 (class 0)
state 706 (class 0)
state 707 (class 0)
state 708 (class 0)
state 709 (class 0)
state 710 (class 0)
state 711 (class 0)
state 712 (class 0)
state 713 (class 0)
state 714 (class 0)
state 715 (class 0)
state 716 (class 0)
state 717 (class 0)
state 718 (class 0)
state 719 (class 0)
state 720 (class 0)
state 721 (class 0)
state 722 (class 0)
state 723 (class 0)
state 724 (class 0)
state 725 (class 0)
state 726 (class 0)
state 727 (class 0)
state 728 (class 0)
state 729 (class 0)
state 730 (class 0)
state 731 (class 0)
state 732 (class 0)
state 733 (class 0)
state 734 (class 0)
state 735 (class 0)
state 736 (class 0)
state 737 (class 0)
state 738 (class 0)
state 739 (class 0)
state 740 (class 0)
state 741 (class 0)
state 742 (class 0)
state 743 (class 0)
state 744 (class 0)
state 745 (class 0)
state 746 (class 0)
state 747 (class 0)
state 748 (class 0)
state 749 (class 0)
state 750 (class 0)
state 751 (class 0)
state 752 (class 0)
state 753 (class 0)
state 754 (class 0)
state 755 (class 0)
state 756 (class 0)
state 757 (class 0)
state 758 (class 0)
state 759 (class 0)
state 760 (class 0)
state 761 (class 0)
state 762 (class 0)
state 763 (class 0)
state 764 (class 0)
state 765 (class 0)
state 766 (class 0)
state 767 (class 0)
state 768 (class 0)
state 769 (class 0)
state 770 (class 0)
state 771 (class 0)
state 772 (class 0)
state 773 (class 0)
state 774 (class 0)
state 775 (class 0)
state 776 (class 0)
state 777 (class 0)
state 778 (class 0)
state 779 (class 0)
state 780 (class 0)
state 781 (class 0)
state 782 (class 0)
state 783 (class 0)
state 784 (class 0)
state 785 (class 0)
state 786 (class 0)
state 787 (class 0)
state 788 (class 0)
state 789 (class 0)
state 790 (class 0)
state 791 (class 0)
state 792 (class 0)
state 793 (class 0)
state 794 (class 0)
state 795 (class 0)
state 796 (class 0)
state 797 (class 0)
state 798 (class 0)
state 799 (class 0)
state 800 (class 0)
state 801 (class 0)
state 802 (class 0)
state 803 (class 0)
state 804 (class 0)
state 805 (class 0)
state 806 (class 0)
state 807 (class 0)
state 808 (class 0)
state 809 (class 0)
state 810 (class 0)
state 811 (class 0)
state 812 (class 0)
state 813 (class 0)
state 814 (class 0)
state 815 (class 0)
state 816 (class 0)
state 817 (class 0)
state 818 (class 0)
state 819 (class 0)
state 820 (class 0)
state 821 (class 0)
state 822 (class 0)
state 823 (class 0)
state 824 (class 0)
state 825 (class 0)
state 826 (class 0)
state 827 (class 0)
state 828 (class 0)
state 829 (class 0)
state 830 (class 0)
state 831 (class 0)
state 832 (class 0)
state 833 (class 0)
state 834 (class 0)
state 835 (class 0)
state 836 (class 0)
state 837 (class 0)
state 838 (class 0)
state 839 (class 0)
state 840 (class 0)
state 841 (class 0)
state 842 (class 0)
state 843 (class 0)
state 844 (class 0)
state 845 (class 0)
state 846 (class 0)
state 847 (class 0)
state 848 (class 0)
state 849 (class 0)
state 850 (class 0)
state 851 (class 0)
state 852 (class 0)
state 853 (class 0)
state 854 (class 0)
state 855 (class 0)
state 856 (class 0)
state 857 (class 0)
state 858 (class 0)
state 859 (class 0)
state 860 (class 0)
state 861 (class 0)
state 862 (class 0)
state 863 (class 0)
state 864 (class 0)
state 865 (class 0)
state 866 (class 0)
state 867 (class 0)
state 868 (class 0)
state 869 (class 0)
state 870 (class 0)
state 871 (class 0)
state 872 (class 0)
state 873 (class 0)
state 874 (class 0)
state 875 (class 0)
state 876 (class 0)
state 877 (class 0)
state 878 (class 0)
state 879 (class 0)
state 880 (class 0)
state 881 (class 0)
state 882 (class 0)
state 883 (class 0)
state 884 (class 0)
state 885 (class 0)
state 886 (class 0)
state 887 (class 0)
state 888 (class 0)
state 889 (class 0)
state 890 (class 0)
state 891 (class 0)
state 892 (class 0)
state 893 (class 0)
state 894 (class 0)
state 895 (class 0)
state 896 (class 0)
state 897 (class 0)
state 898 (class 0)
state 899 (class 0)
state 900 (class 0)
state 901 (class 0)
state 902 (class 0)
state 903 (class 0)
state 904 (class 0)
state 905 (class 0)
state 906 (class 0)
state 907 (class 0)
state 908 (class 0)
state 909 (class 0)
state 910 (class 0)
state 911 (class 0)
state 912 (class 0)
state 913 (class 0)
state 914 (class 0)
state 915 (class 0)
state 916 (class 0)
state 917 (class 0)
state 918 (class 0)
state 919 (class 0)
state 920 (class 0)
Order:
288,302,300,283,286,285,284,293,292,291,290,289,287,280,279,278,281,277,282,276,275,299,248,229,233,234,235,236,237,238,232,231,230,239,240,241,245,244,243,242,246,250,247,249,228,227,226,224,211,204,203,201,254,200,196,215,194,195,193,197,182,181,121,119,120,118,295,192,294,214,213,139,212,301,178,179,149,164,146,150,190,296,185,180,167,165,148,147,191,298,251,252,183,162,163,145,127,126,166,129,128,297,257,253,261,256,255,225,206,210,199,186,144,158,169,172,171,170,160,161,187,202,141,189,107,176,177,125,123,85,99,303,262,260,274,273,272,271,270,269,268,267,266,265,264,263,258,259,221,217,222,220,219,218,223,216,209,205,207,208,198,188,184,175,168,173,174,152,159,156,155,154,153,157,151,143,142,140,138,137,136,135,134,133,131,130,132,124,122,117,115,116,114,113,112,111,108,110,109,103,102,101,104,106,105,100,89,80,81,83,84,86,87,88,82,90,92,93,94,95,96,97,98,91,74,70,71,72,73,76,75,77,78,79,61,55,54,56,57,58,59,60,68,62,63,64,65,66,67,69,37,36,35,34,33,29,32,30,39,28,27,26,38,31,40,48,41,53,52,50,49,51,47,46,45,44,43,42,16,8,9,10,11,12,13,14,15,20,17,18,19,21,22,23,24,25,7,6,1,5,4,3,2,0,
Order:
30,60,53,8,36,10,82,131,129,11,93,23,71,13,46,81,62,7,88,139,76,140,65,69,64,72,106,128,43,2,14,15,33,5,52,37,90,130,138,49,136,51,50,112,84,86,87,133,17,21,27,9,16,25,92,78,20,121,118,67,29,95,68,75,12,116,109,101,141,127,102,137,135,134,103,142,100,104,132,107,105,122,117,114,113,119,120,98,111,126,123,110,108,124,115,125,99,0,97,32,44,42,41,40,39,38,35,34,31,47,28,26,24,22,19,18,6,4,3,45,48,96,73,94,91,89,85,83,80,79,77,74,1,54,70,66,63,61,59,58,57,56,55,143,
