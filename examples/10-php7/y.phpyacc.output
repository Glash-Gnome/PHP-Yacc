EMPTY nonterminals: 
  $start
  start
  top_statement_list
  top_statement_list_ex
  no_comma
  optional_comma
  inner_statement_list_ex
  inner_statement_list
  elseif_list
  else_single
  new_elseif_list
  new_else_single
  for_expr
  optional_expr
  catches
  optional_finally
  optional_ref
  optional_ellipsis
  parameter_list
  optional_return_type
  extends_from
  implements_list
  class_statement_list
  interface_extends_list
  case_list
  non_empty_parameter_list
  parameter
  optional_param_type
  class_statement
  method_modifiers
  trait_adaptation_list
  exit_expr
  backticks_expr
  lexical_vars
  ctor_arguments
  lexical_var_list
  non_empty_lexical_var_list
  lexical_var
  array_pair_list
  list_expr_elements
  list_expr_element
  inner_array_pair_list
  array_pair
First:
$start	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
start	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement_list	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement_list_ex	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
reserved_non_modifiers	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
semi_reserved	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
identifier	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
namespace_name_parts	[ T_STRING ]
namespace_name	[ T_STRING ]
semi	[ error ';' ]
no_comma	[ ',' @ ]
optional_comma	[ ',' @ ]
statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
function_declaration_statement	[ T_FUNCTION ]
class_declaration_statement	[ T_ABSTRACT T_FINAL T_CLASS T_TRAIT T_INTERFACE ]
use_declarations	[ T_STRING T_NS_SEPARATOR ]
use_type	[ T_FUNCTION T_CONST ]
group_use_declaration	[ T_USE ]
constant_declaration_list	[ T_STRING ]
unprefixed_use_declarations	[ T_STRING ]
inline_use_declarations	[ T_STRING T_FUNCTION T_CONST ]
non_empty_unprefixed_use_declarations	[ T_STRING ]
unprefixed_use_declaration	[ T_STRING ]
non_empty_use_declarations	[ T_STRING T_NS_SEPARATOR ]
use_declaration	[ T_STRING T_NS_SEPARATOR ]
non_empty_inline_use_declarations	[ T_STRING T_FUNCTION T_CONST ]
inline_use_declaration	[ T_STRING T_FUNCTION T_CONST ]
non_empty_constant_declaration_list	[ T_STRING ]
constant_declaration	[ T_STRING ]
expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
class_const_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
non_empty_class_const_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
class_const	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
inner_statement_list_ex	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
inner_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
inner_statement_list	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
non_empty_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '{' '(' '`' '"' '$' ]
elseif_list	[ T_ELSEIF @ ]
else_single	[ T_ELSE @ ]
new_elseif_list	[ T_ELSEIF @ ]
new_else_single	[ T_ELSE @ ]
while_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
for_expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
for_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
switch_case_list	[ ':' '{' ]
optional_expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
global_var_list	[ T_VARIABLE '$' ]
static_var_list	[ T_VARIABLE ]
expr_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
variables_list	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
foreach_variable	[ '&' '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_LIST T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
foreach_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
variable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
declare_list	[ T_STRING ]
declare_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
catches	[ T_CATCH @ ]
optional_finally	[ T_FINALLY @ ]
catch	[ T_CATCH ]
name_union	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
name	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
non_empty_variables_list	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
optional_ref	[ '&' @ ]
optional_ellipsis	[ T_ELLIPSIS @ ]
parameter_list	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS @ ]
optional_return_type	[ ':' @ ]
class_entry_type	[ T_ABSTRACT T_FINAL T_CLASS ]
extends_from	[ T_EXTENDS @ ]
implements_list	[ T_IMPLEMENTS @ ]
class_statement_list	[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR @ ]
interface_extends_list	[ T_EXTENDS @ ]
class_name	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
class_name_list	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
non_empty_class_name_list	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
non_empty_declare_list	[ T_STRING ]
declare_list_element	[ T_STRING ]
case_list	[ T_CASE T_DEFAULT @ ]
case	[ T_CASE T_DEFAULT ]
case_separator	[ ':' ';' ]
elseif	[ T_ELSEIF ]
new_elseif	[ T_ELSEIF ]
list_expr	[ T_LIST ]
array_short_syntax	[ '[' ]
non_empty_parameter_list	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS ]
parameter	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS ]
optional_param_type	[ '?' T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR @ ]
type_expr	[ '?' T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR ]
type	[ T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR ]
argument_list	[ '(' ]
non_empty_argument_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR T_ELLIPSIS '(' '`' '"' '$' ]
argument	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR T_ELLIPSIS '(' '`' '"' '$' ]
non_empty_global_var_list	[ T_VARIABLE '$' ]
global_var	[ T_VARIABLE '$' ]
simple_variable	[ T_VARIABLE '$' ]
non_empty_static_var_list	[ T_VARIABLE ]
static_var	[ T_VARIABLE ]
class_statement	[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR ]
variable_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR ]
property_declaration_list	[ T_VARIABLE ]
method_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC @ ]
method_body	[ ';' '{' ]
trait_adaptations	[ ';' '{' ]
trait_adaptation_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR @ ]
trait_adaptation	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ]
trait_method_reference_fully_qualified	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
trait_method_reference	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ]
member_modifier	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
non_empty_member_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
non_empty_property_declaration_list	[ T_VARIABLE ]
property_declaration	[ T_VARIABLE ]
non_empty_expr_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
new_expr	[ T_NEW ]
class_name_reference	[ error T_STRING T_VARIABLE T_STATIC T_NAMESPACE T_NS_SEPARATOR '$' ]
exit_expr	[ '(' @ ]
scalar	[ '[' T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '"' '$' ]
backticks_expr	[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN @ ]
lexical_vars	[ T_USE @ ]
anonymous_class	[ T_CLASS ]
ctor_arguments	[ '(' @ ]
lexical_var_list	[ '&' T_VARIABLE ]
non_empty_lexical_var_list	[ '&' T_VARIABLE ]
lexical_var	[ '&' T_VARIABLE ]
function_call	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
callable_expr	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
class_name_or_var	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
member_name	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR '{' '$' ]
new_variable	[ T_STRING T_VARIABLE T_STATIC T_NAMESPACE T_NS_SEPARATOR '$' ]
dereferencable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
encaps_list	[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
constant	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
array_pair_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
dereferencable_scalar	[ '[' T_CONSTANT_ENCAPSED_STRING T_ARRAY ]
callable_variable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
property_name	[ error T_STRING T_VARIABLE '{' '$' ]
static_member	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
list_expr_elements	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
list_expr_element	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
inner_array_pair_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
array_pair	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
encaps_var	[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
encaps_string_part	[ T_ENCAPSED_AND_WHITESPACE ]
encaps_base_var	[ T_VARIABLE ]
encaps_var_offset	[ '-' T_STRING T_VARIABLE T_NUM_STRING ]
state unknown:
	(0) $start : . start 
		[ $EOF ]
	(3) top_statement_list_ex : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(0) $start : start . 
		[ $EOF ]
state unknown:
	(1) start : top_statement_list . 
		[ $EOF ]
state unknown:
	(2) top_statement_list_ex : top_statement_list_ex . top_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(4) top_statement_list : top_statement_list_ex . 
		[ $EOF '}' ]
state unknown:
	(161) non_empty_statement : error . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(364) expr : T_INCLUDE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(365) expr : T_INCLUDE_ONCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(366) expr : T_EVAL . '(' expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(367) expr : T_REQUIRE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(368) expr : T_REQUIRE_ONCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(380) expr : T_PRINT . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(381) expr : T_YIELD . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(382) expr : T_YIELD . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD . expr T_DOUBLE_ARROW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(384) expr : T_YIELD_FROM . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(344) expr : '+' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(345) expr : '-' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(346) expr : '!' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(347) expr : '~' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(324) expr : T_INC . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(326) expr : T_DEC . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(369) expr : T_INT_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(370) expr : T_DOUBLE_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(371) expr : T_STRING_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(372) expr : T_ARRAY_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(373) expr : T_OBJECT_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(374) expr : T_BOOL_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(375) expr : T_UNSET_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(377) expr : '@' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' . array_pair_list ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW . class_name_reference ctor_arguments 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(389) new_expr : T_NEW . anonymous_class 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(310) expr : T_CLONE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(376) expr : T_EXIT . exit_expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(409) exit_expr : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF . '(' expr ')' statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF . '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(423) scalar : T_LNUMBER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(424) scalar : T_DNUMBER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(82) namespace_name_parts : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(160) non_empty_statement : T_STRING . ':' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(456) simple_variable : T_VARIABLE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(151) non_empty_statement : T_INLINE_HTML . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(422) dereferencable_scalar : T_CONSTANT_ENCAPSED_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(150) non_empty_statement : T_ECHO . expr_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO . statement T_WHILE '(' expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE . '(' expr ')' while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR . '(' for_expr ';' for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(154) non_empty_statement : T_FOREACH . '(' expr T_AS foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH . '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE . '(' declare_list ')' declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(144) non_empty_statement : T_SWITCH . '(' expr ')' switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(145) non_empty_statement : T_BREAK . optional_expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE . optional_expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(159) non_empty_statement : T_GOTO . T_STRING semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION . optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(101) top_statement : T_CONST . constant_declaration_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(147) non_empty_statement : T_RETURN . optional_expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(157) non_empty_statement : T_TRY . '{' inner_statement_list '}' catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW . expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(98) top_statement : T_USE . use_declarations semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(99) top_statement : T_USE . use_type use_declarations semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(104) group_use_declaration : T_USE . use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(105) group_use_declaration : T_USE . use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(106) group_use_declaration : T_USE . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
	(107) group_use_declaration : T_USE . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL . global_var_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(149) non_empty_statement : T_STATIC . static_var_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(399) class_name : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(183) class_entry_type : T_ABSTRACT . T_CLASS 
		[ T_STRING ]
state unknown:
	(184) class_entry_type : T_FINAL . T_CLASS 
		[ T_STRING ]
state unknown:
	(153) non_empty_statement : T_UNSET . '(' variables_list ')' semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(362) expr : T_ISSET . '(' variables_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY . '(' expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(94) top_statement : T_HALT_COMPILER . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(182) class_entry_type : T_CLASS . 
		[ T_STRING ]
state unknown:
	(181) class_declaration_statement : T_TRAIT . T_STRING '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE . T_STRING interface_extends_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(474) list_expr : T_LIST . '(' list_expr_elements ')' 
		[ ',' '=' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY . '(' array_pair_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(428) scalar : T_CLASS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(429) scalar : T_TRAIT_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(430) scalar : T_METHOD_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(431) scalar : T_FUNC_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(425) scalar : T_LINE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(426) scalar : T_FILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(435) scalar : T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(436) scalar : T_START_HEREDOC . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(438) scalar : T_START_HEREDOC . encaps_list T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(95) top_statement : T_NAMESPACE . namespace_name semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(96) top_statement : T_NAMESPACE . namespace_name '{' top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(97) top_statement : T_NAMESPACE . '{' top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(432) scalar : T_NS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(427) scalar : T_DIR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(402) name : T_NS_SEPARATOR . namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(163) statement : ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(138) non_empty_statement : '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(358) expr : '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' . expr ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' . expr ')' 
		[ '(' ]
state unknown:
	(379) expr : '`' . backticks_expr '`' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(411) backticks_expr : . 
		[ '`' ]
state unknown:
	(437) scalar : '"' . encaps_list '"' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(457) simple_variable : '$' . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(458) simple_variable : '$' . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(459) simple_variable : '$' . error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(2) top_statement_list_ex : top_statement_list_ex top_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(401) name : namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(91) top_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(92) top_statement : function_declaration_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(93) top_statement : class_declaration_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(100) top_statement : group_use_declaration . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(152) non_empty_statement : expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(162) statement : non_empty_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(304) expr : variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(307) expr : variable . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable . '=' '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(311) expr : variable . T_PLUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(312) expr : variable . T_MINUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(313) expr : variable . T_MUL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(314) expr : variable . T_DIV_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(315) expr : variable . T_CONCAT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(316) expr : variable . T_MOD_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(317) expr : variable . T_AND_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(318) expr : variable . T_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(319) expr : variable . T_XOR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(320) expr : variable . T_SL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(321) expr : variable . T_SR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(322) expr : variable . T_POW_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(323) expr : variable . T_INC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(325) expr : variable . T_DEC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(396) function_call : name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(400) class_name : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(416) constant : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
state unknown:
	(179) class_declaration_statement : class_entry_type . T_STRING extends_from implements_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(407) class_name_or_var : class_name . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(305) expr : list_expr . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(421) dereferencable_scalar : array_short_syntax . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(447) callable_variable : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(309) expr : new_expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(378) expr : scalar . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(451) callable_variable : function_call . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(397) function_call : callable_expr . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(398) function_call : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM member_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(417) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM identifier 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(418) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(460) static_member : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(408) class_name_or_var : dereferencable . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
	(448) callable_variable : dereferencable . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(450) callable_variable : dereferencable . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(452) callable_variable : dereferencable . T_OBJECT_OPERATOR property_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable . T_OBJECT_OPERATOR property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(434) scalar : constant . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(449) callable_variable : constant . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(433) scalar : dereferencable_scalar . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(443) dereferencable : dereferencable_scalar . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(446) callable_expr : dereferencable_scalar . 
		[ '(' ]
state unknown:
	(444) callable_expr : callable_variable . 
		[ '(' ]
	(453) variable : callable_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(454) variable : static_member . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(82) namespace_name_parts : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(399) class_name : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(364) expr : T_INCLUDE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(365) expr : T_INCLUDE_ONCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(366) expr : T_EVAL '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(367) expr : T_REQUIRE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(368) expr : T_REQUIRE_ONCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(380) expr : T_PRINT expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(382) expr : T_YIELD expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD expr . T_DOUBLE_ARROW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(384) expr : T_YIELD_FROM expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(344) expr : '+' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(345) expr : '-' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(346) expr : '!' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(347) expr : '~' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(399) class_name : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(442) dereferencable : '(' . expr ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' . expr ')' 
		[ '(' ]
state unknown:
	(324) expr : T_INC variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(421) dereferencable_scalar : array_short_syntax . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(443) dereferencable : dereferencable_scalar . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(446) callable_expr : dereferencable_scalar . 
		[ '(' ]
state unknown:
	(326) expr : T_DEC variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(369) expr : T_INT_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(370) expr : T_DOUBLE_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(371) expr : T_STRING_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(372) expr : T_ARRAY_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(373) expr : T_OBJECT_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(374) expr : T_BOOL_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(375) expr : T_UNSET_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(377) expr : '@' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(488) array_pair : '&' . variable 
		[ ',' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(485) array_pair : expr . T_DOUBLE_ARROW expr 
		[ ',' ')' ']' ]
	(486) array_pair : expr . 
		[ ',' ')' ']' ]
	(487) array_pair : expr . T_DOUBLE_ARROW '&' variable 
		[ ',' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' array_pair_list . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(482) array_pair_list : inner_array_pair_list . 
		[ ')' ']' ]
	(483) inner_array_pair_list : inner_array_pair_list . ',' array_pair 
		[ ',' ')' ']' ]
state unknown:
	(484) inner_array_pair_list : array_pair . 
		[ ',' ')' ']' ]
state unknown:
	(406) class_name_reference : error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS . ctor_arguments extends_from implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(414) ctor_arguments : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_EXTENDS T_IMPLEMENTS ';' '{' '}' ')' ']' ]
state unknown:
	(400) class_name : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(404) class_name_reference : class_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
	(465) new_variable : class_name . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(461) new_variable : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW class_name_reference . ctor_arguments 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(414) ctor_arguments : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_EXTENDS T_IMPLEMENTS ';' '{' '}' ')' ']' ]
state unknown:
	(389) new_expr : T_NEW anonymous_class . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(405) class_name_reference : new_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
	(462) new_variable : new_variable . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(463) new_variable : new_variable . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(464) new_variable : new_variable . T_OBJECT_OPERATOR property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(466) new_variable : new_variable . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(310) expr : T_CLONE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(410) exit_expr : '(' . optional_expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(376) expr : T_EXIT exit_expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' . expr ')' statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' . expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(160) non_empty_statement : T_STRING ':' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(301) non_empty_expr_list : expr . 
		[ error ',' ';' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(150) non_empty_statement : T_ECHO expr_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(299) expr_list : non_empty_expr_list . no_comma 
		[ error ';' ')' ]
	(300) non_empty_expr_list : non_empty_expr_list . ',' expr 
		[ error ',' ';' ')' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement . T_WHILE '(' expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' . expr ')' while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' . for_expr ';' for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' . expr T_AS foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' . expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' . declare_list ')' declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' . expr ')' switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(440) optional_expr : expr . 
		[ error ';' ')' ']' ]
state unknown:
	(145) non_empty_statement : T_BREAK optional_expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE optional_expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(159) non_empty_statement : T_GOTO T_STRING . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(175) optional_ref : '&' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref . T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(126) constant_declaration : T_STRING . '=' expr 
		[ error ',' ';' ]
state unknown:
	(101) top_statement : T_CONST constant_declaration_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(123) constant_declaration_list : non_empty_constant_declaration_list . no_comma 
		[ error ';' ]
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list . ',' constant_declaration 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(125) non_empty_constant_declaration_list : constant_declaration . 
		[ error ',' ';' ]
state unknown:
	(147) non_empty_statement : T_RETURN optional_expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' . inner_statement_list '}' catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(102) use_type : T_FUNCTION . 
		[ T_STRING T_NS_SEPARATOR ]
state unknown:
	(103) use_type : T_CONST . 
		[ T_STRING T_NS_SEPARATOR ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
	(106) group_use_declaration : T_USE namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(117) unprefixed_use_declaration : namespace_name . 
		[ error ',' ';' '}' ]
	(118) unprefixed_use_declaration : namespace_name . T_AS T_STRING 
		[ error ',' ';' '}' ]
state unknown:
	(98) top_statement : T_USE use_declarations . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(99) top_statement : T_USE use_type . use_declarations semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(104) group_use_declaration : T_USE use_type . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(105) group_use_declaration : T_USE use_type . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(119) use_declaration : unprefixed_use_declaration . 
		[ error ',' ';' ]
state unknown:
	(111) use_declarations : non_empty_use_declarations . no_comma 
		[ error ';' ]
	(112) non_empty_use_declarations : non_empty_use_declarations . ',' use_declaration 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(113) non_empty_use_declarations : use_declaration . 
		[ error ',' ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL global_var_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(253) global_var_list : non_empty_global_var_list . no_comma 
		[ error ';' ]
	(254) non_empty_global_var_list : non_empty_global_var_list . ',' global_var 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(255) non_empty_global_var_list : global_var . 
		[ error ',' ';' ]
state unknown:
	(256) global_var : simple_variable . 
		[ error ',' ';' ]
state unknown:
	(260) static_var : T_VARIABLE . 
		[ error ',' ';' ]
	(261) static_var : T_VARIABLE . '=' expr 
		[ error ',' ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(149) non_empty_statement : T_STATIC static_var_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(257) static_var_list : non_empty_static_var_list . no_comma 
		[ error ';' ]
	(258) non_empty_static_var_list : non_empty_static_var_list . ',' static_var 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(259) non_empty_static_var_list : static_var . 
		[ error ',' ';' ]
state unknown:
	(183) class_entry_type : T_ABSTRACT T_CLASS . 
		[ T_STRING ]
state unknown:
	(184) class_entry_type : T_FINAL T_CLASS . 
		[ T_STRING ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' . variables_list ')' semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(362) expr : T_ISSET '(' . variables_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING . '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING . interface_extends_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(187) interface_extends_list : . 
		[ '{' ]
state unknown:
	(474) list_expr : T_LIST '(' . list_expr_elements ')' 
		[ ',' '=' ')' ]
	(481) list_expr_element : . 
		[ ',' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' . array_pair_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ']' ]
state unknown:
	(495) encaps_base_var : T_VARIABLE . 
		[ '[' T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_OBJECT_OPERATOR T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(436) scalar : T_START_HEREDOC T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . expr '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(502) encaps_var : T_CURLY_OPEN . variable '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(438) scalar : T_START_HEREDOC encaps_list . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(492) encaps_list : encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(493) encaps_list : encaps_string_part . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(496) encaps_var : encaps_base_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(497) encaps_var : encaps_base_var . '[' encaps_var_offset ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(498) encaps_var : encaps_base_var . T_OBJECT_OPERATOR T_STRING 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(403) name : T_NAMESPACE T_NS_SEPARATOR . namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' . top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(3) top_statement_list_ex : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
state unknown:
	(95) top_statement : T_NAMESPACE namespace_name . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(96) top_statement : T_NAMESPACE namespace_name . '{' top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(402) name : T_NS_SEPARATOR namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(131) inner_statement_list_ex : inner_statement_list_ex . inner_statement 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(133) inner_statement_list : inner_statement_list_ex . 
		[ T_ELSEIF T_ELSE T_ENDIF T_ENDWHILE T_ENDFOR T_ENDFOREACH T_ENDDECLARE T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(138) non_empty_statement : '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(358) expr : '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' expr . ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr . ')' 
		[ '(' ]
state unknown:
	(412) backticks_expr : T_ENCAPSED_AND_WHITESPACE . 
		[ '`' ]
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(379) expr : '`' backticks_expr . '`' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(413) backticks_expr : encaps_list . 
		[ '`' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(437) scalar : '"' encaps_list . '"' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(459) simple_variable : '$' error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(457) simple_variable : '$' '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(458) simple_variable : '$' simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(86) semi : error . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(85) semi : ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(100) top_statement : group_use_declaration semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(329) expr : expr T_LOGICAL_OR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(331) expr : expr T_LOGICAL_XOR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(330) expr : expr T_LOGICAL_AND . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(359) expr : expr '?' . expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr '?' . ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(361) expr : expr T_COALESCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr T_BOOLEAN_OR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(328) expr : expr T_BOOLEAN_AND . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(332) expr : expr '|' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(334) expr : expr '^' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(333) expr : expr '&' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(350) expr : expr T_IS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(351) expr : expr T_IS_NOT_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(348) expr : expr T_IS_IDENTICAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(349) expr : expr T_IS_NOT_IDENTICAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(352) expr : expr T_SPACESHIP . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(353) expr : expr '<' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(354) expr : expr T_IS_SMALLER_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(355) expr : expr '>' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(356) expr : expr T_IS_GREATER_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(341) expr : expr T_SL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(342) expr : expr T_SR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(336) expr : expr '+' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(337) expr : expr '-' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(335) expr : expr '.' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(338) expr : expr '*' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(339) expr : expr '/' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(340) expr : expr '%' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(357) expr : expr T_INSTANCEOF . class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(343) expr : expr T_POW . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(152) non_empty_statement : expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(307) expr : variable '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable '=' . '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(311) expr : variable T_PLUS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(312) expr : variable T_MINUS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(313) expr : variable T_MUL_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(314) expr : variable T_DIV_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(315) expr : variable T_CONCAT_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(316) expr : variable T_MOD_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(317) expr : variable T_AND_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(318) expr : variable T_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(319) expr : variable T_XOR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(320) expr : variable T_SL_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(321) expr : variable T_SR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(322) expr : variable T_POW_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(323) expr : variable T_INC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(325) expr : variable T_DEC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(246) argument_list : '(' . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(247) argument_list : '(' . non_empty_argument_list no_comma ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(396) function_call : name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING . extends_from implements_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(185) extends_from : . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(305) expr : list_expr '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(397) function_call : callable_expr argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . member_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . identifier 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR . property_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable T_OBJECT_OPERATOR . property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(450) callable_variable : dereferencable '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(366) expr : T_EVAL '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(383) expr : T_YIELD expr T_DOUBLE_ARROW . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' expr . ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr . ')' 
		[ '(' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(488) array_pair : '&' variable . 
		[ ',' ')' ']' ]
state unknown:
	(485) array_pair : expr T_DOUBLE_ARROW . expr 
		[ ',' ')' ']' ]
	(487) array_pair : expr T_DOUBLE_ARROW . '&' variable 
		[ ',' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' array_pair_list ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(483) inner_array_pair_list : inner_array_pair_list ',' . array_pair 
		[ ',' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ']' ]
state unknown:
	(415) ctor_arguments : argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_EXTENDS T_IMPLEMENTS ';' '{' '}' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments . extends_from implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(185) extends_from : . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW class_name_reference ctor_arguments . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ error ';' ')' ']' ]
state unknown:
	(464) new_variable : new_variable T_OBJECT_OPERATOR . property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(463) new_variable : new_variable '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(410) exit_expr : '(' optional_expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr . ')' statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' expr . ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(150) non_empty_statement : T_ECHO expr_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(300) non_empty_expr_list : non_empty_expr_list ',' . expr 
		[ error ',' ';' ')' ]
state unknown:
	(299) expr_list : non_empty_expr_list no_comma . 
		[ error ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE . '(' expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr . ')' while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr . ';' for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(303) for_expr : expr_list . 
		[ ';' ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr . T_AS foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' expr . T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(204) declare_list_element : T_STRING . '=' expr 
		[ ',' ')' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list . ')' declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(201) declare_list : non_empty_declare_list . no_comma 
		[ ')' ]
	(203) non_empty_declare_list : non_empty_declare_list . ',' declare_list_element 
		[ ',' ')' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(202) non_empty_declare_list : declare_list_element . 
		[ ',' ')' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr . ')' switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(145) non_empty_statement : T_BREAK optional_expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE optional_expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(159) non_empty_statement : T_GOTO T_STRING semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING . '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(126) constant_declaration : T_STRING '=' . expr 
		[ error ',' ';' ]
state unknown:
	(101) top_statement : T_CONST constant_declaration_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' . constant_declaration 
		[ error ',' ';' ]
state unknown:
	(123) constant_declaration_list : non_empty_constant_declaration_list no_comma . 
		[ error ';' ]
state unknown:
	(147) non_empty_statement : T_RETURN optional_expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list . '}' catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(120) use_declaration : T_NS_SEPARATOR unprefixed_use_declaration . 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(118) unprefixed_use_declaration : namespace_name T_AS . T_STRING 
		[ error ',' ';' '}' ]
state unknown:
	(98) top_statement : T_USE use_declarations semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
	(104) group_use_declaration : T_USE use_type namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(99) top_statement : T_USE use_type use_declarations . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(112) non_empty_use_declarations : non_empty_use_declarations ',' . use_declaration 
		[ error ',' ';' ]
state unknown:
	(111) use_declarations : non_empty_use_declarations no_comma . 
		[ error ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL global_var_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(254) non_empty_global_var_list : non_empty_global_var_list ',' . global_var 
		[ error ',' ';' ]
state unknown:
	(253) global_var_list : non_empty_global_var_list no_comma . 
		[ error ';' ]
state unknown:
	(261) static_var : T_VARIABLE '=' . expr 
		[ error ',' ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(149) non_empty_statement : T_STATIC static_var_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(258) non_empty_static_var_list : non_empty_static_var_list ',' . static_var 
		[ error ',' ';' ]
state unknown:
	(257) static_var_list : non_empty_static_var_list no_comma . 
		[ error ';' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list . ')' semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(172) non_empty_variables_list : variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(171) variables_list : non_empty_variables_list . no_comma 
		[ ')' ]
	(173) non_empty_variables_list : non_empty_variables_list . ',' variable 
		[ ',' ')' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(362) expr : T_ISSET '(' variables_list . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(363) expr : T_EMPTY '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' . class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(188) interface_extends_list : T_EXTENDS . class_name_list 
		[ '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list . '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(479) list_expr_element : expr . T_DOUBLE_ARROW variable 
		[ ',' ')' ]
	(480) list_expr_element : expr . T_DOUBLE_ARROW list_expr 
		[ ',' ')' ]
state unknown:
	(304) expr : variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(307) expr : variable . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable . '=' '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(311) expr : variable . T_PLUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(312) expr : variable . T_MINUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(313) expr : variable . T_MUL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(314) expr : variable . T_DIV_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(315) expr : variable . T_CONCAT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(316) expr : variable . T_MOD_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(317) expr : variable . T_AND_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(318) expr : variable . T_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(319) expr : variable . T_XOR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(320) expr : variable . T_SL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(321) expr : variable . T_SR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(322) expr : variable . T_POW_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(323) expr : variable . T_INC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(325) expr : variable . T_DEC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(477) list_expr_element : variable . 
		[ ',' ')' ]
state unknown:
	(305) expr : list_expr . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(478) list_expr_element : list_expr . 
		[ ',' ')' ]
state unknown:
	(474) list_expr : T_LIST '(' list_expr_elements . ')' 
		[ ',' '=' ')' ]
	(475) list_expr_elements : list_expr_elements . ',' list_expr_element 
		[ ',' ')' ]
state unknown:
	(476) list_expr_elements : list_expr_element . 
		[ ',' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(502) encaps_var : T_CURLY_OPEN variable . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(438) scalar : T_START_HEREDOC encaps_list T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(490) encaps_list : encaps_list encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(491) encaps_list : encaps_list encaps_string_part . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(493) encaps_list : encaps_string_part encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' . encaps_var_offset ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR . T_STRING 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(403) name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' top_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' . top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(3) top_statement_list_ex : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(95) top_statement : T_NAMESPACE namespace_name semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(137) inner_statement : T_HALT_COMPILER . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(134) inner_statement : statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(135) inner_statement : function_declaration_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(136) inner_statement : class_declaration_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(131) inner_statement_list_ex : inner_statement_list_ex inner_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(138) non_empty_statement : '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(358) expr : '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' expr ')' . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr ')' . 
		[ '(' ]
state unknown:
	(379) expr : '`' backticks_expr '`' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(437) scalar : '"' encaps_list '"' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(457) simple_variable : '$' '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr T_LOGICAL_OR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr T_LOGICAL_XOR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr T_LOGICAL_AND expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(360) expr : expr '?' ':' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr '?' expr . ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr T_COALESCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr T_BOOLEAN_OR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr T_BOOLEAN_AND expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr '|' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr '^' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr '&' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr T_IS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr T_IS_NOT_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr T_IS_IDENTICAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr T_IS_NOT_IDENTICAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr T_SPACESHIP expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr '<' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr T_IS_SMALLER_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr '>' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr T_IS_GREATER_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr T_SL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr T_SR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr '+' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr '-' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr '.' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr '*' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr '/' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr '%' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(357) expr : expr T_INSTANCEOF class_name_reference . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr T_POW expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(308) expr : variable '=' '&' . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(307) expr : variable '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(311) expr : variable T_PLUS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(312) expr : variable T_MINUS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(313) expr : variable T_MUL_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(314) expr : variable T_DIV_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(315) expr : variable T_CONCAT_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(316) expr : variable T_MOD_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(317) expr : variable T_AND_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(318) expr : variable T_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(319) expr : variable T_XOR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(320) expr : variable T_SL_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(321) expr : variable T_SR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(322) expr : variable T_POW_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(251) argument : '&' . variable 
		[ ',' ')' ]
state unknown:
	(252) argument : T_ELLIPSIS . expr 
		[ ',' ')' ]
state unknown:
	(246) argument_list : '(' ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(250) argument : expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list . no_comma ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(249) non_empty_argument_list : non_empty_argument_list . ',' argument 
		[ ',' ')' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(248) non_empty_argument_list : argument . 
		[ ',' ')' ]
state unknown:
	(186) extends_from : T_EXTENDS . class_name 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from . implements_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(189) implements_list : . 
		[ '{' ]
state unknown:
	(305) expr : list_expr '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
state unknown:
	(5) reserved_non_modifiers : T_INCLUDE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(6) reserved_non_modifiers : T_INCLUDE_ONCE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(7) reserved_non_modifiers : T_EVAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(8) reserved_non_modifiers : T_REQUIRE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(9) reserved_non_modifiers : T_REQUIRE_ONCE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(10) reserved_non_modifiers : T_LOGICAL_OR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(11) reserved_non_modifiers : T_LOGICAL_XOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(12) reserved_non_modifiers : T_LOGICAL_AND . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(48) reserved_non_modifiers : T_PRINT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(49) reserved_non_modifiers : T_YIELD . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(13) reserved_non_modifiers : T_INSTANCEOF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(14) reserved_non_modifiers : T_NEW . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(15) reserved_non_modifiers : T_CLONE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(16) reserved_non_modifiers : T_EXIT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(17) reserved_non_modifiers : T_IF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(18) reserved_non_modifiers : T_ELSEIF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(19) reserved_non_modifiers : T_ELSE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(20) reserved_non_modifiers : T_ENDIF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(80) identifier : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(21) reserved_non_modifiers : T_ECHO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(22) reserved_non_modifiers : T_DO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(23) reserved_non_modifiers : T_WHILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(24) reserved_non_modifiers : T_ENDWHILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(25) reserved_non_modifiers : T_FOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(26) reserved_non_modifiers : T_ENDFOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(27) reserved_non_modifiers : T_FOREACH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(28) reserved_non_modifiers : T_ENDFOREACH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(29) reserved_non_modifiers : T_DECLARE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(30) reserved_non_modifiers : T_ENDDECLARE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(31) reserved_non_modifiers : T_AS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(51) reserved_non_modifiers : T_SWITCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(52) reserved_non_modifiers : T_ENDSWITCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(53) reserved_non_modifiers : T_CASE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(54) reserved_non_modifiers : T_DEFAULT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(55) reserved_non_modifiers : T_BREAK . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(43) reserved_non_modifiers : T_CONTINUE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(44) reserved_non_modifiers : T_GOTO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(45) reserved_non_modifiers : T_FUNCTION . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(46) reserved_non_modifiers : T_CONST . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(47) reserved_non_modifiers : T_RETURN . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(32) reserved_non_modifiers : T_TRY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(33) reserved_non_modifiers : T_CATCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(34) reserved_non_modifiers : T_FINALLY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(35) reserved_non_modifiers : T_THROW . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(36) reserved_non_modifiers : T_USE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(37) reserved_non_modifiers : T_INSTEADOF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(38) reserved_non_modifiers : T_GLOBAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(74) semi_reserved : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(75) semi_reserved : T_ABSTRACT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(76) semi_reserved : T_FINAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(77) semi_reserved : T_PRIVATE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(78) semi_reserved : T_PROTECTED . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(79) semi_reserved : T_PUBLIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(39) reserved_non_modifiers : T_VAR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(40) reserved_non_modifiers : T_UNSET . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(41) reserved_non_modifiers : T_ISSET . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(42) reserved_non_modifiers : T_EMPTY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(72) reserved_non_modifiers : T_HALT_COMPILER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(63) reserved_non_modifiers : T_CLASS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(61) reserved_non_modifiers : T_TRAIT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(62) reserved_non_modifiers : T_INTERFACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(58) reserved_non_modifiers : T_EXTENDS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(59) reserved_non_modifiers : T_IMPLEMENTS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(50) reserved_non_modifiers : T_LIST . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(56) reserved_non_modifiers : T_ARRAY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(57) reserved_non_modifiers : T_CALLABLE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(64) reserved_non_modifiers : T_CLASS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(65) reserved_non_modifiers : T_TRAIT_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(67) reserved_non_modifiers : T_METHOD_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(66) reserved_non_modifiers : T_FUNC_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(68) reserved_non_modifiers : T_LINE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(69) reserved_non_modifiers : T_FILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(60) reserved_non_modifiers : T_NAMESPACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(71) reserved_non_modifiers : T_NS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(70) reserved_non_modifiers : T_DIR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(468) member_name : '{' . expr '}' 
		[ '(' ]
state unknown:
	(73) semi_reserved : reserved_non_modifiers . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(81) identifier : semi_reserved . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM identifier . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(467) member_name : identifier . 
		[ '(' ]
state unknown:
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
	(469) member_name : simple_variable . 
		[ '(' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(473) property_name : error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(470) property_name : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(471) property_name : '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(472) property_name : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable T_OBJECT_OPERATOR property_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(450) callable_variable : dereferencable '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(366) expr : T_EVAL '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD expr T_DOUBLE_ARROW expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(442) dereferencable : '(' expr ')' . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr ')' . 
		[ '(' ]
state unknown:
	(487) array_pair : expr T_DOUBLE_ARROW '&' . variable 
		[ ',' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(485) array_pair : expr T_DOUBLE_ARROW expr . 
		[ ',' ')' ']' ]
state unknown:
	(483) inner_array_pair_list : inner_array_pair_list ',' array_pair . 
		[ ',' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from . implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(189) implements_list : . 
		[ '{' ]
state unknown:
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(464) new_variable : new_variable T_OBJECT_OPERATOR property_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(463) new_variable : new_variable '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(410) exit_expr : '(' optional_expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' . statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' expr ')' . ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(300) non_empty_expr_list : non_empty_expr_list ',' expr . 
		[ error ',' ';' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' . expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr ')' . while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' . for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS . foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' expr T_AS . variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(204) declare_list_element : T_STRING '=' . expr 
		[ ',' ')' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' . declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(203) non_empty_declare_list : non_empty_declare_list ',' . declare_list_element 
		[ ',' ')' ]
state unknown:
	(201) declare_list : non_empty_declare_list no_comma . 
		[ ')' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr ')' . switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' . parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(238) type_expr : '?' . type 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(240) type : T_ARRAY . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(241) type : T_CALLABLE . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(239) type : name . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(231) parameter_list : non_empty_parameter_list . no_comma 
		[ ')' ]
	(234) non_empty_parameter_list : non_empty_parameter_list . ',' parameter 
		[ ',' ')' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(233) non_empty_parameter_list : parameter . 
		[ ',' ')' ]
state unknown:
	(235) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE '=' expr 
		[ ',' ')' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(243) optional_param_type : type_expr . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
state unknown:
	(237) type_expr : type . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(126) constant_declaration : T_STRING '=' expr . 
		[ error ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' constant_declaration . 
		[ error ',' ';' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' . catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(164) catches : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(118) unprefixed_use_declaration : namespace_name T_AS T_STRING . 
		[ error ',' ';' '}' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(99) top_statement : T_USE use_type use_declarations semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(112) non_empty_use_declarations : non_empty_use_declarations ',' use_declaration . 
		[ error ',' ';' ]
state unknown:
	(254) non_empty_global_var_list : non_empty_global_var_list ',' global_var . 
		[ error ',' ';' ]
state unknown:
	(261) static_var : T_VARIABLE '=' expr . 
		[ error ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(258) non_empty_static_var_list : non_empty_static_var_list ',' static_var . 
		[ error ',' ';' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list ')' . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(173) non_empty_variables_list : non_empty_variables_list ',' . variable 
		[ ',' ')' ]
state unknown:
	(171) variables_list : non_empty_variables_list no_comma . 
		[ ')' ]
state unknown:
	(362) expr : T_ISSET '(' variables_list ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(192) non_empty_class_name_list : class_name . 
		[ ',' ';' '{' ]
state unknown:
	(188) interface_extends_list : T_EXTENDS class_name_list . 
		[ '{' ]
state unknown:
	(191) class_name_list : non_empty_class_name_list . no_comma 
		[ ';' '{' ]
	(193) non_empty_class_name_list : non_empty_class_name_list . ',' class_name 
		[ ',' ';' '{' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' . class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(479) list_expr_element : expr T_DOUBLE_ARROW . variable 
		[ ',' ')' ]
	(480) list_expr_element : expr T_DOUBLE_ARROW . list_expr 
		[ ',' ')' ]
state unknown:
	(475) list_expr_elements : list_expr_elements ',' . list_expr_element 
		[ ',' ')' ]
	(481) list_expr_element : . 
		[ ',' ')' ]
state unknown:
	(474) list_expr : T_LIST '(' list_expr_elements ')' . 
		[ ',' '=' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(502) encaps_var : T_CURLY_OPEN variable '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(505) encaps_var_offset : '-' . T_NUM_STRING 
		[ ']' ]
state unknown:
	(503) encaps_var_offset : T_STRING . 
		[ ']' ]
state unknown:
	(506) encaps_var_offset : T_VARIABLE . 
		[ ']' ]
state unknown:
	(504) encaps_var_offset : T_NUM_STRING . 
		[ ']' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' encaps_var_offset . ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR T_STRING . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' top_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(457) simple_variable : '$' '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr '?' ':' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(359) expr : expr '?' expr ':' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(308) expr : variable '=' '&' variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(251) argument : '&' variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(252) argument : T_ELLIPSIS expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(249) non_empty_argument_list : non_empty_argument_list ',' . argument 
		[ ',' ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list no_comma . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(186) extends_from : T_EXTENDS class_name . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(190) implements_list : T_IMPLEMENTS . class_name_list 
		[ '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list . '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(468) member_name : '{' expr . '}' 
		[ '(' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(471) property_name : '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(450) callable_variable : dereferencable '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(487) array_pair : expr T_DOUBLE_ARROW '&' variable . 
		[ ',' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list . '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(463) new_variable : new_variable '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' . inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement . elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(217) elseif_list : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr . ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(216) while_statement : ':' . inner_statement_list T_ENDWHILE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(215) while_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr ')' while_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr . ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(228) foreach_variable : '&' . variable 
		[ ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable . ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable . T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(227) foreach_variable : variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(229) foreach_variable : list_expr . 
		[ ')' ]
state unknown:
	(230) foreach_variable : array_short_syntax . 
		[ ')' ]
	(421) dereferencable_scalar : array_short_syntax . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(204) declare_list_element : T_STRING '=' expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(200) declare_statement : ':' . inner_statement_list T_ENDDECLARE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(199) declare_statement : ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(198) declare_statement : non_empty_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' declare_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(203) non_empty_declare_list : non_empty_declare_list ',' declare_list_element . 
		[ ',' ')' ]
state unknown:
	(207) switch_case_list : ':' . case_list T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(208) switch_case_list : ':' . ';' case_list T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' . case_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(206) switch_case_list : '{' . ';' case_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr ')' switch_case_list . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list . ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(238) type_expr : '?' type . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(390) lexical_vars : . 
		[ ':' '{' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(234) non_empty_parameter_list : non_empty_parameter_list ',' . parameter 
		[ ',' ')' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
state unknown:
	(231) parameter_list : non_empty_parameter_list no_comma . 
		[ ')' ]
state unknown:
	(235) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE '=' expr 
		[ ',' ')' ]
	(176) optional_ellipsis : . 
		[ T_VARIABLE ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches . optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(165) catches : catches . catch 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(169) optional_finally : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(122) inline_use_declaration : use_type . unprefixed_use_declaration 
		[ ',' '}' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(121) inline_use_declaration : unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(114) inline_use_declarations : non_empty_inline_use_declarations . optional_comma 
		[ '}' ]
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations . ',' inline_use_declaration 
		[ ',' '}' ]
	(89) optional_comma : . 
		[ '}' ]
state unknown:
	(116) non_empty_inline_use_declarations : inline_use_declaration . 
		[ ',' '}' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list ')' semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(173) non_empty_variables_list : non_empty_variables_list ',' variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(267) class_statement : T_USE . class_name_list trait_adaptations 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(291) member_modifier : T_STATIC . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(292) member_modifier : T_ABSTRACT . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(293) member_modifier : T_FINAL . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(290) member_modifier : T_PRIVATE . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(289) member_modifier : T_PROTECTED . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(288) member_modifier : T_PUBLIC . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(283) variable_modifiers : T_VAR . 
		[ T_VARIABLE ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(262) class_statement_list : class_statement_list class_statement . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(264) class_statement : variable_modifiers . property_declaration_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(265) class_statement : method_modifiers . T_CONST class_const_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(266) class_statement : method_modifiers . T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(286) non_empty_member_modifiers : member_modifier . 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(282) variable_modifiers : non_empty_member_modifiers . 
		[ T_VARIABLE ]
	(285) method_modifiers : non_empty_member_modifiers . 
		[ T_FUNCTION T_CONST ]
	(287) non_empty_member_modifiers : non_empty_member_modifiers . member_modifier 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(193) non_empty_class_name_list : non_empty_class_name_list ',' . class_name 
		[ ',' ';' '{' ]
state unknown:
	(191) class_name_list : non_empty_class_name_list no_comma . 
		[ ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(479) list_expr_element : expr T_DOUBLE_ARROW variable . 
		[ ',' ')' ]
state unknown:
	(480) list_expr_element : expr T_DOUBLE_ARROW list_expr . 
		[ ',' ')' ]
state unknown:
	(475) list_expr_elements : list_expr_elements ',' list_expr_element . 
		[ ',' ')' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(505) encaps_var_offset : '-' T_NUM_STRING . 
		[ ']' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' encaps_var_offset ']' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr '?' expr ':' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(249) non_empty_argument_list : non_empty_argument_list ',' argument . 
		[ ',' ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list no_comma ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(190) implements_list : T_IMPLEMENTS class_name_list . 
		[ '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' . class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(468) member_name : '{' expr '}' . 
		[ '(' ]
state unknown:
	(471) property_name : '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' . class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list . new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(220) new_elseif_list : . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list . else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(218) elseif_list : elseif_list . elseif 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(223) else_single : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list . T_ENDWHILE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' . for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ')' ]
state unknown:
	(228) foreach_variable : '&' variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' . foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW . foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list . T_ENDDECLARE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' . case_list T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(207) switch_case_list : ':' case_list . T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(206) switch_case_list : '{' ';' . case_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' case_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' . optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(244) optional_return_type : . 
		[ ';' '{' ]
state unknown:
	(391) lexical_vars : T_USE . '(' lexical_var_list ')' 
		[ ':' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(244) optional_return_type : . 
		[ ';' '{' ]
state unknown:
	(234) non_empty_parameter_list : non_empty_parameter_list ',' parameter . 
		[ ',' ')' ]
state unknown:
	(177) optional_ellipsis : T_ELLIPSIS . 
		[ T_VARIABLE ]
state unknown:
	(235) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE '=' expr 
		[ ',' ')' ]
state unknown:
	(168) catch : T_CATCH . '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY . '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches optional_finally . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(165) catches : catches catch . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(122) inline_use_declaration : use_type unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(90) optional_comma : ',' . 
		[ '}' ]
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' . inline_use_declaration 
		[ ',' '}' ]
state unknown:
	(114) inline_use_declarations : non_empty_inline_use_declarations optional_comma . 
		[ '}' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations . optional_comma 
		[ '}' ]
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations . ',' unprefixed_use_declaration 
		[ ',' '}' ]
	(89) optional_comma : . 
		[ '}' ]
state unknown:
	(110) non_empty_unprefixed_use_declarations : unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(390) lexical_vars : . 
		[ ':' '{' ]
state unknown:
	(267) class_statement : T_USE class_name_list . trait_adaptations 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(297) property_declaration : T_VARIABLE . 
		[ ',' ';' ]
	(298) property_declaration : T_VARIABLE . '=' expr 
		[ ',' ';' ]
state unknown:
	(264) class_statement : variable_modifiers property_declaration_list . ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(294) property_declaration_list : non_empty_property_declaration_list . no_comma 
		[ ';' ]
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list . ',' property_declaration 
		[ ',' ';' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(295) non_empty_property_declaration_list : property_declaration . 
		[ ',' ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION . optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST . class_const_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(287) non_empty_member_modifiers : non_empty_member_modifiers member_modifier . 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(193) non_empty_class_name_list : non_empty_class_name_list ',' class_name . 
		[ ',' ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list . new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(221) new_elseif_list : new_elseif_list . new_elseif 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(225) new_else_single : . 
		[ T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF . '(' expr ')' statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(224) else_single : T_ELSE . statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list else_single . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(218) elseif_list : elseif_list elseif . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list T_ENDWHILE . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr . ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' . inner_statement_list T_ENDFOREACH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(196) foreach_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable . ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(227) foreach_variable : variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list . T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(207) switch_case_list : ':' case_list T_ENDSWITCH . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE . expr case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(212) case : T_DEFAULT . case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(210) case_list : case_list case . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(206) switch_case_list : '{' ';' case_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' case_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(245) optional_return_type : ':' . type_expr 
		[ ';' '{' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type . '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(391) lexical_vars : T_USE '(' . lexical_var_list ')' 
		[ ':' '{' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(235) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . '=' expr 
		[ ',' ')' ]
state unknown:
	(168) catch : T_CATCH '(' . name_union T_VARIABLE ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' inline_use_declaration . 
		[ ',' '}' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(90) optional_comma : ',' . 
		[ '}' ]
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' . unprefixed_use_declaration 
		[ ',' '}' ]
state unknown:
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations optional_comma . 
		[ '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(244) optional_return_type : . 
		[ ';' '{' ]
state unknown:
	(268) trait_adaptations : ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(269) trait_adaptations : '{' . trait_adaptation_list '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(270) trait_adaptation_list : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(267) class_statement : T_USE class_name_list trait_adaptations . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(298) property_declaration : T_VARIABLE '=' . expr 
		[ ',' ';' ]
state unknown:
	(264) class_statement : variable_modifiers property_declaration_list ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' . property_declaration 
		[ ',' ';' ]
state unknown:
	(294) property_declaration_list : non_empty_property_declaration_list no_comma . 
		[ ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref . identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(130) class_const : identifier . '=' expr 
		[ ',' ';' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST class_const_list . ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(127) class_const_list : non_empty_class_const_list . no_comma 
		[ ';' ]
	(128) non_empty_class_const_list : non_empty_class_const_list . ',' class_const 
		[ ',' ';' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(129) non_empty_class_const_list : class_const . 
		[ ',' ';' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(222) new_elseif : T_ELSEIF . '(' expr ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(226) new_else_single : T_ELSE . ':' inner_statement_list 
		[ T_ENDIF ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single . T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(221) new_elseif_list : new_elseif_list new_elseif . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF '(' . expr ')' statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(224) else_single : T_ELSE statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list T_ENDWHILE ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' . for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list . T_ENDFOREACH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' . foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(207) switch_case_list : ':' case_list T_ENDSWITCH ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr . case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(213) case_separator : ':' . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(214) case_separator : ';' . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(212) case : T_DEFAULT case_separator . inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(206) switch_case_list : '{' ';' case_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(245) optional_return_type : ':' type_expr . 
		[ ';' '{' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(395) lexical_var : optional_ref . T_VARIABLE 
		[ ',' ')' ]
state unknown:
	(391) lexical_vars : T_USE '(' lexical_var_list . ')' 
		[ ':' '{' ]
state unknown:
	(392) lexical_var_list : non_empty_lexical_var_list . no_comma 
		[ ')' ]
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list . ',' lexical_var 
		[ ',' ')' ]
	(87) no_comma : . 
		[ error ';' '{' ')' ]
state unknown:
	(393) non_empty_lexical_var_list : lexical_var . 
		[ ',' ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' . expr 
		[ ',' ')' ]
state unknown:
	(167) name_union : name_union . '|' name 
		[ '|' T_VARIABLE ]
	(168) catch : T_CATCH '(' name_union . T_VARIABLE ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(166) name_union : name . 
		[ '|' T_VARIABLE ]
state unknown:
	(170) optional_finally : T_FINALLY '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(269) trait_adaptations : '{' trait_adaptation_list . '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(271) trait_adaptation_list : trait_adaptation_list . trait_adaptation 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(298) property_declaration : T_VARIABLE '=' expr . 
		[ ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' property_declaration . 
		[ ',' ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier . '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(130) class_const : identifier '=' . expr 
		[ ',' ';' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST class_const_list ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(128) non_empty_class_const_list : non_empty_class_const_list ',' . class_const 
		[ ',' ';' ]
state unknown:
	(127) class_const_list : non_empty_class_const_list no_comma . 
		[ ';' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' . expr ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(226) new_else_single : T_ELSE ':' . inner_statement_list 
		[ T_ENDIF ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr . ')' statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(195) for_statement : ':' . inner_statement_list T_ENDFOR ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(194) for_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr case_separator . inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(212) case : T_DEFAULT case_separator inner_statement_list . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(395) lexical_var : optional_ref T_VARIABLE . 
		[ ',' ')' ]
state unknown:
	(391) lexical_vars : T_USE '(' lexical_var_list ')' . 
		[ ':' '{' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' '{' ')' ]
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' . lexical_var 
		[ ',' ')' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(392) lexical_var_list : non_empty_lexical_var_list no_comma . 
		[ ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(167) name_union : name_union '|' . name 
		[ '|' T_VARIABLE ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE . ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(80) identifier : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
	(82) namespace_name_parts : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(60) reserved_non_modifiers : T_NAMESPACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(269) trait_adaptations : '{' trait_adaptation_list '}' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(279) trait_method_reference : identifier . 
		[ T_AS ]
state unknown:
	(277) trait_method_reference_fully_qualified : name . T_PAAMAYIM_NEKUDOTAYIM identifier 
		[ T_AS T_INSTEADOF ]
state unknown:
	(271) trait_adaptation_list : trait_adaptation_list trait_adaptation . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified . T_INSTEADOF class_name_list ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(278) trait_method_reference : trait_method_reference_fully_qualified . 
		[ T_AS ]
state unknown:
	(273) trait_adaptation : trait_method_reference . T_AS member_modifier identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference . T_AS member_modifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(275) trait_adaptation : trait_method_reference . T_AS T_STRING ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(276) trait_adaptation : trait_method_reference . T_AS reserved_non_modifiers ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' . parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(130) class_const : identifier '=' expr . 
		[ ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(128) non_empty_class_const_list : non_empty_class_const_list ',' class_const . 
		[ ',' ';' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr . ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(226) new_else_single : T_ELSE ':' inner_statement_list . 
		[ T_ENDIF ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr ')' . statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list . T_ENDFOR ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr case_separator inner_statement_list . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' lexical_var . 
		[ ',' ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(167) name_union : name_union '|' name . 
		[ '|' T_VARIABLE ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' . '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM . identifier 
		[ T_AS T_INSTEADOF ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF . class_name_list ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS . member_modifier identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference T_AS . member_modifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(275) trait_adaptation : trait_method_reference T_AS . T_STRING ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(276) trait_adaptation : trait_method_reference T_AS . reserved_non_modifiers ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list . ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' . ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr ')' statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list T_ENDFOR . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM identifier . 
		[ T_AS T_INSTEADOF ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(275) trait_adaptation : trait_method_reference T_AS T_STRING . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier . identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference T_AS member_modifier . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' . optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(244) optional_return_type : . 
		[ ';' '{' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' . inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list T_ENDFOR ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(275) trait_adaptation : trait_method_reference T_AS T_STRING ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(274) trait_adaptation : trait_method_reference T_AS member_modifier ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type . method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' inner_statement_list . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(280) method_body : ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' . inner_statement_list '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' inner_statement_list . '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' inner_statement_list '}' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
Never reduced: 
1 rule(s) never reduced
state 0
	(0) $start : . start 
	(3) top_statement_list_ex : . 

	start		goto 338
	top_statement_list	goto 793 and reduce (1)
	top_statement_list_ex	goto 2
	.		reduce (3)

state 1
	(131) inner_statement_list_ex : inner_statement_list_ex . inner_statement 
	(133) inner_statement_list : inner_statement_list_ex . 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_ELSEIF	reduce (133)
	T_ELSE		reduce (133)
	T_ENDIF		reduce (133)
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_ENDWHILE	reduce (133)
	T_FOR		shift 413
	T_ENDFOR	reduce (133)
	T_FOREACH	shift 412
	T_ENDFOREACH	reduce (133)
	T_DECLARE	shift 411
	T_ENDDECLARE	reduce (133)
	T_SWITCH	shift 410
	T_ENDSWITCH	reduce (133)
	T_CASE		reduce (133)
	T_DEFAULT	reduce (133)
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 408
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_ABSTRACT	shift 419
	T_FINAL		shift 434
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_HALT_COMPILER	shift 726 and reduce (137)
	T_CLASS		shift 753 and reduce (182)
	T_TRAIT		shift 461
	T_INTERFACE	shift 458
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'}'		reduce (133)
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 725 and reduce (134)
	function_declaration_statement	goto 724 and reduce (135)
	class_declaration_statement	goto 723 and reduce (136)
	expr		goto 135
	inner_statement	goto 722 and reduce (131)
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 206
	name		goto 290
	class_entry_type	goto 440
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 2
	(2) top_statement_list_ex : top_statement_list_ex . top_statement 
	(4) top_statement_list : top_statement_list_ex . 

	$EOF		reduce (4)
	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 408
	T_CONST		shift 406
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_USE		shift 266
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_ABSTRACT	shift 419
	T_FINAL		shift 434
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_HALT_COMPILER	shift 754 and reduce (94)
	T_CLASS		shift 753 and reduce (182)
	T_TRAIT		shift 461
	T_INTERFACE	shift 458
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 280
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'}'		reduce (4)
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	top_statement	goto 742 and reduce (2)
	namespace_name_parts	goto 445
	statement	goto 741 and reduce (91)
	function_declaration_statement	goto 740 and reduce (92)
	class_declaration_statement	goto 739 and reduce (93)
	group_use_declaration	goto 312
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 206
	name		goto 290
	class_entry_type	goto 440
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 3
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . member_name argument_list 
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . identifier 
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . error 
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	error		shift 700 and reduce (418)
	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_VARIABLE	shift 757 and reduce (456)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	'{'		shift 38
	'$'		shift 267
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 335
	simple_variable	goto 334
	member_name	goto 345
	.		error

state 4
	(269) trait_adaptations : '{' trait_adaptation_list . '}' 
	(271) trait_adaptation_list : trait_adaptation_list . trait_adaptation 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 241
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 468
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	T_NS_SEPARATOR	shift 436
	'}'		shift 631 and reduce (269)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 634 and reduce (279)
	namespace_name_parts	goto 445
	name		goto 485
	trait_adaptation	goto 605 and reduce (271)
	trait_method_reference_fully_qualified	goto 491
	trait_method_reference	goto 492
	.		error

state 5
	(273) trait_adaptation : trait_method_reference T_AS member_modifier . identifier ';' 
	(274) trait_adaptation : trait_method_reference T_AS member_modifier . ';' 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	';'		shift 650 and reduce (274)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 455
	.		error

state 6
	(273) trait_adaptation : trait_method_reference T_AS . member_modifier identifier ';' 
	(274) trait_adaptation : trait_method_reference T_AS . member_modifier ';' 
	(275) trait_adaptation : trait_method_reference T_AS . T_STRING ';' 
	(276) trait_adaptation : trait_method_reference T_AS . reserved_non_modifiers ';' 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 444
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 592 and reduce (291)
	T_ABSTRACT	shift 593 and reduce (292)
	T_FINAL		shift 594 and reduce (293)
	T_PRIVATE	shift 597 and reduce (290)
	T_PROTECTED	shift 602 and reduce (289)
	T_PUBLIC	shift 603 and reduce (288)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 447
	member_modifier	goto 5
	.		error

state 7
	(266) class_statement : method_modifiers T_FUNCTION optional_ref . identifier '(' parameter_list ')' optional_return_type method_body 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 388
	.		error

state 8
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM . identifier 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 608 and reduce (277)
	.		error

state 9
	(88) no_comma : ',' . 
	(128) non_empty_class_const_list : non_empty_class_const_list ',' . class_const 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 530
	class_const	goto 584 and reduce (128)
	.		reduce (88)

state 10
	(265) class_statement : method_modifiers T_CONST . class_const_list ';' 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 530
	class_const_list	goto 531
	non_empty_class_const_list	goto 532
	class_const	goto 546 and reduce (129)
	.		error

state 11
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' . declare_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 835
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 834 and reduce (199)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 135
	non_empty_statement	goto 833 and reduce (198)
	variable	goto 206
	declare_statement	goto 832 and reduce (156)
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 12
	(139) non_empty_statement : T_IF '(' expr ')' . statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' expr ')' . ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 827
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 840
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 13
	(141) non_empty_statement : T_WHILE '(' expr ')' . while_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 839
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 838 and reduce (215)
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	while_statement	goto 837 and reduce (141)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 14
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' . for_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 553
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 558 and reduce (194)
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	for_statement	goto 565 and reduce (143)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 15
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' . foreach_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 644
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 641 and reduce (196)
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	foreach_statement	goto 666 and reduce (154)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 16
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' . foreach_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 644
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 641 and reduce (196)
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	foreach_statement	goto 663 and reduce (155)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 17
	(224) else_single : T_ELSE . statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 661 and reduce (224)
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 18
	(142) non_empty_statement : T_DO . statement T_WHILE '(' expr ')' ';' 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 542
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 19
	(219) elseif : T_ELSEIF '(' expr ')' . statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 108
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 109
	T_CONTINUE	shift 100
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 112
	T_TRY		shift 405
	T_THROW		shift 113
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	statement	goto 623 and reduce (219)
	expr		goto 135
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 20
	(246) argument_list : '(' . ')' 
	(247) argument_list : '(' . non_empty_argument_list no_comma ')' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 224
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	T_ELLIPSIS	shift 48
	'('		shift 114
	')'		shift 716 and reduce (246)
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 165
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	non_empty_argument_list	goto 528
	argument	goto 714 and reduce (248)
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 21
	(88) no_comma : ',' . 
	(249) non_empty_argument_list : non_empty_argument_list ',' . argument 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 224
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	T_ELLIPSIS	shift 48
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 165
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	argument	goto 639 and reduce (249)
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (88)

state 22
	(420) dereferencable_scalar : T_ARRAY '(' . array_pair_list ')' 
	(489) array_pair : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 217
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 155
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	array_pair_list	goto 518
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	inner_array_pair_list	goto 380
	array_pair	goto 792 and reduce (484)
	.		reduce (489)

state 23
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . expr '}' 
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '}' 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_STRING_VARNAME	shift 294
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 150
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 24
	(359) expr : expr '?' . expr ':' expr 
	(360) expr : expr '?' . ':' expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	':'		shift 70
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 137
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 25
	(419) array_short_syntax : '[' . array_pair_list ']' 
	(489) array_pair : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 217
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 155
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	array_pair_list	goto 382
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	inner_array_pair_list	goto 380
	array_pair	goto 792 and reduce (484)
	.		reduce (489)

state 26
	(307) expr : variable '=' . expr 
	(308) expr : variable '=' . '&' variable 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 218
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 180
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 27
	(483) inner_array_pair_list : inner_array_pair_list ',' . array_pair 
	(489) array_pair : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 217
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 155
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	array_pair	goto 822 and reduce (483)
	.		reduce (489)

state 28
	(485) array_pair : expr T_DOUBLE_ARROW . expr 
	(487) array_pair : expr T_DOUBLE_ARROW . '&' variable 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'&'		shift 226
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 169
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 29
	(363) expr : T_EMPTY '(' . expr ')' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 141
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 30
	(330) expr : expr T_LOGICAL_AND . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 185
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 31
	(331) expr : expr T_LOGICAL_XOR . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 174
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 32
	(142) non_empty_statement : T_DO statement T_WHILE '(' . expr ')' ';' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 153
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 33
	(329) expr : expr T_LOGICAL_OR . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 173
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 34
	(457) simple_variable : '$' '{' . expr '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 142
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 35
	(366) expr : T_EVAL '(' . expr ')' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 143
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 36
	(471) property_name : '{' . expr '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 154
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 37
	(442) dereferencable : '(' . expr ')' 
	(445) callable_expr : '(' . expr ')' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 140
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 38
	(468) member_name : '{' . expr '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 156
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 39
	(474) list_expr : T_LIST '(' . list_expr_elements ')' 
	(481) list_expr_element : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 149
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 515
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	list_expr_elements	goto 292
	list_expr_element	goto 671 and reduce (476)
	.		reduce (481)

state 40
	(462) new_variable : new_variable '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 358
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 41
	(410) exit_expr : '(' . optional_expr ')' 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 469
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 42
	(211) case : T_CASE . expr case_separator inner_statement_list 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 133
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 43
	(463) new_variable : new_variable '{' . expr '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 136
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 44
	(298) property_declaration : T_VARIABLE '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 164
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 45
	(88) no_comma : ',' . 
	(300) non_empty_expr_list : non_empty_expr_list ',' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 166
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (88)

state 46
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 170
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 47
	(144) non_empty_statement : T_SWITCH '(' . expr ')' switch_case_list 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 146
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 48
	(252) argument : T_ELLIPSIS . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 171
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 49
	(154) non_empty_statement : T_FOREACH '(' . expr T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' . expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 151
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 50
	(143) non_empty_statement : T_FOR '(' . for_expr ';' for_expr ';' for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 167
	for_expr	goto 519
	expr_list	goto 688 and reduce (303)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 539
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (302)

state 51
	(141) non_empty_statement : T_WHILE '(' . expr ')' while_statement 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 145
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 52
	(139) non_empty_statement : T_IF '(' . expr ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' . expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 148
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 53
	(130) class_const : identifier '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 158
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 54
	(332) expr : expr '|' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 199
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 55
	(361) expr : expr T_COALESCE . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 195
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 56
	(320) expr : variable T_SL_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 190
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 57
	(312) expr : variable T_MINUS_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 182
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 58
	(313) expr : variable T_MUL_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 183
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 59
	(314) expr : variable T_DIV_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 184
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 60
	(315) expr : variable T_CONCAT_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 177
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 61
	(316) expr : variable T_MOD_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 191
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 62
	(317) expr : variable T_AND_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 192
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 63
	(318) expr : variable T_OR_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 193
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 64
	(319) expr : variable T_XOR_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 188
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 65
	(321) expr : variable T_SR_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 186
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 66
	(343) expr : expr T_POW . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 487
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 67
	(322) expr : variable T_POW_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 176
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 68
	(305) expr : list_expr '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 178
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 69
	(306) expr : array_short_syntax '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 179
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 70
	(360) expr : expr '?' ':' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 194
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 71
	(448) callable_variable : dereferencable '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 346
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 72
	(450) callable_variable : dereferencable '{' . expr '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 152
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 73
	(449) callable_variable : constant '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 351
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 74
	(383) expr : T_YIELD expr T_DOUBLE_ARROW . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 823 and reduce (383)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 75
	(311) expr : variable T_PLUS_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 181
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 76
	(340) expr : expr '%' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 320
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 77
	(327) expr : expr T_BOOLEAN_OR . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 197
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 78
	(353) expr : expr '<' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 209
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 79
	(328) expr : expr T_BOOLEAN_AND . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 198
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 80
	(334) expr : expr '^' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 200
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 81
	(333) expr : expr '&' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 208
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 82
	(350) expr : expr T_IS_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 205
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 83
	(351) expr : expr T_IS_NOT_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 201
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 84
	(348) expr : expr T_IS_IDENTICAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 202
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 85
	(349) expr : expr T_IS_NOT_IDENTICAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 203
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 86
	(352) expr : expr T_SPACESHIP . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 204
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 87
	(354) expr : expr T_IS_SMALLER_OR_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 210
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 88
	(339) expr : expr '/' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 319
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 89
	(355) expr : expr '>' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 212
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 90
	(356) expr : expr T_IS_GREATER_OR_EQUAL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 211
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 91
	(341) expr : expr T_SL . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 233
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 92
	(342) expr : expr T_SR . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 232
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 93
	(336) expr : expr '+' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 249
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 94
	(337) expr : expr '-' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 251
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 95
	(335) expr : expr '.' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 247
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 96
	(338) expr : expr '*' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 315
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 97
	(143) non_empty_statement : T_FOR '(' for_expr ';' . for_expr ';' for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 167
	for_expr	goto 417
	expr_list	goto 688 and reduce (303)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 539
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (302)

state 98
	(219) elseif : T_ELSEIF '(' . expr ')' statement 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 139
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 99
	(204) declare_list_element : T_STRING '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 160
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 100
	(146) non_empty_statement : T_CONTINUE . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 317
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 101
	(370) expr : T_DOUBLE_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 399
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 102
	(371) expr : T_STRING_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 394
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 103
	(372) expr : T_ARRAY_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 392
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 104
	(373) expr : T_OBJECT_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 391
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 105
	(374) expr : T_BOOL_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 390
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 106
	(375) expr : T_UNSET_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 466
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 107
	(310) expr : T_CLONE . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 787 and reduce (310)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 108
	(150) non_empty_statement : T_ECHO . expr_list semi 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 167
	expr_list	goto 331
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 539
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 109
	(145) non_empty_statement : T_BREAK . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 330
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 110
	(261) static_var : T_VARIABLE '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 163
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 111
	(347) expr : '~' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 348
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 112
	(147) non_empty_statement : T_RETURN . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 161
	optional_expr	goto 325
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 113
	(158) non_empty_statement : T_THROW . expr semi 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 134
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 114
	(358) expr : '(' . expr ')' 
	(442) dereferencable : '(' . expr ')' 
	(445) callable_expr : '(' . expr ')' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 147
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 115
	(359) expr : expr '?' expr ':' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 196
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 116
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' . for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 167
	for_expr	goto 372
	expr_list	goto 688 and reduce (303)
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 539
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (302)

state 117
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}' 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 144
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 118
	(126) constant_declaration : T_STRING '=' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 157
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 119
	(475) list_expr_elements : list_expr_elements ',' . list_expr_element 
	(481) list_expr_element : . 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 149
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 515
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	list_expr_element	goto 570 and reduce (475)
	.		reduce (481)

state 120
	(222) new_elseif : T_ELSEIF '(' . expr ')' ':' inner_statement_list 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 138
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 121
	(369) expr : T_INT_CAST . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 357
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 122
	(377) expr : '@' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 384
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 123
	(346) expr : '!' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 314
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 124
	(384) expr : T_YIELD_FROM . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 187
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 125
	(364) expr : T_INCLUDE . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 162
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 126
	(365) expr : T_INCLUDE_ONCE . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 159
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 127
	(345) expr : '-' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 350
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 128
	(367) expr : T_REQUIRE . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 172
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 129
	(344) expr : '+' . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 353
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 130
	(368) expr : T_REQUIRE_ONCE . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 168
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 131
	(380) expr : T_PRINT . expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 189
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 132
	(381) expr : T_YIELD . 
	(382) expr : T_YIELD . expr 
	(383) expr : T_YIELD . expr T_DOUBLE_ARROW expr 

	T_INCLUDE	shift 125
	T_INCLUDE_ONCE	shift 126
	T_EVAL		shift 429
	T_REQUIRE	shift 128
	T_REQUIRE_ONCE	shift 130
	T_PRINT		shift 131
	T_YIELD		shift 132
	T_YIELD_FROM	shift 124
	'+'		shift 129
	'-'		shift 127
	'!'		shift 123
	'~'		shift 111
	T_INC		shift 225
	T_DEC		shift 216
	T_INT_CAST	shift 121
	T_DOUBLE_CAST	shift 101
	T_STRING_CAST	shift 102
	T_ARRAY_CAST	shift 103
	T_OBJECT_CAST	shift 104
	T_BOOL_CAST	shift 105
	T_UNSET_CAST	shift 106
	'@'		shift 122
	'['		shift 25
	T_NEW		shift 234
	T_CLONE		shift 107
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 343
	T_ISSET		shift 464
	T_EMPTY		shift 463
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 250
	T_NAMESPACE	shift 354
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 436
	'('		shift 114
	'`'		shift 260
	'"'		shift 258
	'$'		shift 267
	namespace_name_parts	goto 445
	expr		goto 175
	variable	goto 206
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 371
	array_short_syntax	goto 401
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 362
	dereferencable_scalar	goto 244
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (381)

state 133
	(211) case : T_CASE expr . case_separator inner_statement_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	':'		shift 662 and reduce (213)
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	';'		shift 660 and reduce (214)
	case_separator	goto 636
	.		error

state 134
	(158) non_empty_statement : T_THROW expr . semi 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	error		shift 765 and reduce (86)
	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	';'		shift 763 and reduce (85)
	semi		goto 680 and reduce (158)
	.		error

state 135
	(152) non_empty_statement : expr . semi 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	error		shift 765 and reduce (86)
	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	';'		shift 763 and reduce (85)
	semi		goto 699 and reduce (152)
	.		error

state 136
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(463) new_variable : new_variable '{' expr . '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	'}'		shift 841 and reduce (463)
	.		error

state 137
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(359) expr : expr '?' expr . ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	':'		shift 115
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		error

state 138
	(222) new_elseif : T_ELSEIF '(' expr . ')' ':' inner_statement_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 366
	.		error

state 139
	(219) elseif : T_ELSEIF '(' expr . ')' statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 19
	.		error

state 140
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(442) dereferencable : '(' expr . ')' 
	(445) callable_expr : '(' expr . ')' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 333
	.		error

state 141
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(363) expr : T_EMPTY '(' expr . ')' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 801 and reduce (363)
	.		error

state 142
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(457) simple_variable : '$' '{' expr . '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	'}'		shift 850 and reduce (457)
	.		error

state 143
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(366) expr : T_EVAL '(' expr . ')' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 856 and reduce (366)
	.		error

state 144
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	']'		shift 393
	.		error

state 145
	(141) non_empty_statement : T_WHILE '(' expr . ')' while_statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 13
	.		error

state 146
	(144) non_empty_statement : T_SWITCH '(' expr . ')' switch_case_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 313
	.		error

state 147
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(358) expr : '(' expr . ')' 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(442) dereferencable : '(' expr . ')' 
	(445) callable_expr : '(' expr . ')' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 243
	.		error

state 148
	(139) non_empty_statement : T_IF '(' expr . ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' expr . ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 12
	.		error

state 149
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(479) list_expr_element : expr . T_DOUBLE_ARROW variable 
	(480) list_expr_element : expr . T_DOUBLE_ARROW list_expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	T_DOUBLE_ARROW	shift 215
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		error

state 150
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr . '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	'}'		shift 825 and reduce (499)
	.		error

state 151
	(154) non_empty_statement : T_FOREACH '(' expr . T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' expr . T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	T_AS		shift 213
	.		error

state 152
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(450) callable_variable : dereferencable '{' expr . '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	'}'		shift 845 and reduce (450)
	.		error

state 153
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr . ')' ';' 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	')'		shift 453
	.		error

state 154
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(471) property_name : '{' expr . '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	'}'		shift 648 and reduce (471)
	.		error

state 155
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(485) array_pair : expr . T_DOUBLE_ARROW expr 
	(486) array_pair : expr . 
	(487) array_pair : expr . T_DOUBLE_ARROW '&' variable 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	T_DOUBLE_ARROW	shift 28
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (486)

state 156
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(468) member_name : '{' expr . '}' 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	'}'		shift 646 and reduce (468)
	.		error

state 157
	(126) constant_declaration : T_STRING '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (126)

state 158
	(130) class_const : identifier '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (130)

state 159
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(365) expr : T_INCLUDE_ONCE expr . 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (365)

state 160
	(204) declare_list_element : T_STRING '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (204)

state 161
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(440) optional_expr : expr . 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (440)

state 162
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(364) expr : T_INCLUDE expr . 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (364)

state 163
	(261) static_var : T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (261)

state 164
	(298) property_declaration : T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (298)

state 165
	(250) argument : expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (250)

state 166
	(300) non_empty_expr_list : non_empty_expr_list ',' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (300)

state 167
	(301) non_empty_expr_list : expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (301)

state 168
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(368) expr : T_REQUIRE_ONCE expr . 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (368)

state 169
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(485) array_pair : expr T_DOUBLE_ARROW expr . 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (485)

state 170
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (236)

state 171
	(252) argument : T_ELLIPSIS expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (252)

state 172
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(367) expr : T_REQUIRE expr . 

	T_LOGICAL_OR	shift 33
	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (367)

state 173
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(329) expr : expr T_LOGICAL_OR expr . 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_XOR	shift 31
	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (329)

state 174
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(331) expr : expr T_LOGICAL_XOR expr . 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_AND	shift 30
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (331)

state 175
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(382) expr : T_YIELD expr . 
	(383) expr : T_YIELD expr . T_DOUBLE_ARROW expr 

	T_DOUBLE_ARROW	shift 74
	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (382)

state 176
	(322) expr : variable T_POW_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (322)

state 177
	(315) expr : variable T_CONCAT_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (315)

state 178
	(305) expr : list_expr '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (305)

state 179
	(306) expr : array_short_syntax '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (306)

state 180
	(307) expr : variable '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (307)

state 181
	(311) expr : variable T_PLUS_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (311)

state 182
	(312) expr : variable T_MINUS_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (312)

state 183
	(313) expr : variable T_MUL_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (313)

state 184
	(314) expr : variable T_DIV_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (314)

state 185
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(330) expr : expr T_LOGICAL_AND expr . 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (330)

state 186
	(321) expr : variable T_SR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (321)

state 187
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(384) expr : T_YIELD_FROM expr . 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (384)

state 188
	(319) expr : variable T_XOR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (319)

state 189
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(380) expr : T_PRINT expr . 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (380)

state 190
	(320) expr : variable T_SL_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (320)

state 191
	(316) expr : variable T_MOD_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (316)

state 192
	(317) expr : variable T_AND_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (317)

state 193
	(318) expr : variable T_OR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 24
	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (318)

state 194
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(360) expr : expr '?' ':' expr . 
	(361) expr : expr . T_COALESCE expr 

	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (360)

state 195
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(361) expr : expr T_COALESCE expr . 

	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (361)

state 196
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(359) expr : expr '?' expr ':' expr . 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_COALESCE	shift 55
	T_BOOLEAN_OR	shift 77
	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (359)

state 197
	(327) expr : expr . T_BOOLEAN_OR expr 
	(327) expr : expr T_BOOLEAN_OR expr . 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_BOOLEAN_AND	shift 79
	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (327)

state 198
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(328) expr : expr T_BOOLEAN_AND expr . 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'|'		shift 54
	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (328)

state 199
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(332) expr : expr '|' expr . 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'^'		shift 80
	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (332)

state 200
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(334) expr : expr '^' expr . 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'&'		shift 81
	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (334)

state 201
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(351) expr : expr T_IS_NOT_EQUAL expr . 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (351)

state 202
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(348) expr : expr T_IS_IDENTICAL expr . 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (348)

state 203
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(349) expr : expr T_IS_NOT_IDENTICAL expr . 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (349)

state 204
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(352) expr : expr T_SPACESHIP expr . 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (352)

state 205
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(350) expr : expr T_IS_EQUAL expr . 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (350)

state 206
	(304) expr : variable . 
	(307) expr : variable . '=' expr 
	(308) expr : variable . '=' '&' variable 
	(311) expr : variable . T_PLUS_EQUAL expr 
	(312) expr : variable . T_MINUS_EQUAL expr 
	(313) expr : variable . T_MUL_EQUAL expr 
	(314) expr : variable . T_DIV_EQUAL expr 
	(315) expr : variable . T_CONCAT_EQUAL expr 
	(316) expr : variable . T_MOD_EQUAL expr 
	(317) expr : variable . T_AND_EQUAL expr 
	(318) expr : variable . T_OR_EQUAL expr 
	(319) expr : variable . T_XOR_EQUAL expr 
	(320) expr : variable . T_SL_EQUAL expr 
	(321) expr : variable . T_SR_EQUAL expr 
	(322) expr : variable . T_POW_EQUAL expr 
	(323) expr : variable . T_INC 
	(325) expr : variable . T_DEC 
	(441) dereferencable : variable . 

	'='		shift 26
	T_PLUS_EQUAL	shift 75
	T_MINUS_EQUAL	shift 57
	T_MUL_EQUAL	shift 58
	T_DIV_EQUAL	shift 59
	T_CONCAT_EQUAL	shift 60
	T_MOD_EQUAL	shift 61
	T_AND_EQUAL	shift 62
	T_OR_EQUAL	shift 63
	T_XOR_EQUAL	shift 64
	T_SL_EQUAL	shift 56
	T_SR_EQUAL	shift 65
	T_POW_EQUAL	shift 67
	T_INC		shift 729 and reduce (323)
	T_DEC		shift 696 and reduce (325)
	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (304)

state 207
207: reduce/reduce conflict (reduce 304, reduce 477) on ')'
207: reduce/reduce conflict (reduce 304, reduce 477) on ','
	(304) expr : variable . 
	(307) expr : variable . '=' expr 
	(308) expr : variable . '=' '&' variable 
	(311) expr : variable . T_PLUS_EQUAL expr 
	(312) expr : variable . T_MINUS_EQUAL expr 
	(313) expr : variable . T_MUL_EQUAL expr 
	(314) expr : variable . T_DIV_EQUAL expr 
	(315) expr : variable . T_CONCAT_EQUAL expr 
	(316) expr : variable . T_MOD_EQUAL expr 
	(317) expr : variable . T_AND_EQUAL expr 
	(318) expr : variable . T_OR_EQUAL expr 
	(319) expr : variable . T_XOR_EQUAL expr 
	(320) expr : variable . T_SL_EQUAL expr 
	(321) expr : variable . T_SR_EQUAL expr 
	(322) expr : variable . T_POW_EQUAL expr 
	(323) expr : variable . T_INC 
	(325) expr : variable . T_DEC 
	(441) dereferencable : variable . 
	(477) list_expr_element : variable . 

	'='		shift 26
	T_PLUS_EQUAL	shift 75
	T_MINUS_EQUAL	shift 57
	T_MUL_EQUAL	shift 58
	T_DIV_EQUAL	shift 59
	T_CONCAT_EQUAL	shift 60
	T_MOD_EQUAL	shift 61
	T_AND_EQUAL	shift 62
	T_OR_EQUAL	shift 63
	T_XOR_EQUAL	shift 64
	T_SL_EQUAL	shift 56
	T_SR_EQUAL	shift 65
	T_POW_EQUAL	shift 67
	T_INC		shift 729 and reduce (323)
	T_DEC		shift 696 and reduce (325)
	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (304)

state 208
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(333) expr : expr '&' expr . 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	shift 82
	T_IS_NOT_EQUAL	shift 83
	T_IS_IDENTICAL	shift 84
	T_IS_NOT_IDENTICAL	shift 85
	T_SPACESHIP	shift 86
	'<'		shift 78
	T_IS_SMALLER_OR_EQUAL	shift 87
	'>'		shift 89
	T_IS_GREATER_OR_EQUAL	shift 90
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (333)

state 209
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(353) expr : expr '<' expr . 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (353)

state 210
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(354) expr : expr T_IS_SMALLER_OR_EQUAL expr . 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (354)

state 211
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(356) expr : expr T_IS_GREATER_OR_EQUAL expr . 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (356)

state 212
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(355) expr : expr '>' expr . 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 91
	T_SR		shift 92
	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (355)

state 213
	(154) non_empty_statement : T_FOREACH '(' expr T_AS . foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' expr T_AS . variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	'&'		shift 222
	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	foreach_variable	goto 404
	variable	goto 291
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 836 and reduce (229)
	array_short_syntax	goto 336
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 214
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW . foreach_variable ')' foreach_statement 

	'&'		shift 222
	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	foreach_variable	goto 385
	variable	goto 337
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 836 and reduce (229)
	array_short_syntax	goto 336
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 215
	(479) list_expr_element : expr T_DOUBLE_ARROW . variable 
	(480) list_expr_element : expr T_DOUBLE_ARROW . list_expr 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_LIST		shift 457
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 289
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 568 and reduce (480)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 216
	(326) expr : T_DEC . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 256
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 217
	(488) array_pair : '&' . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 271
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 218
	(308) expr : variable '=' '&' . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 257
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 219
	(88) no_comma : ',' . 
	(173) non_empty_variables_list : non_empty_variables_list ',' . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 288
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (88)

state 220
	(153) non_empty_statement : T_UNSET '(' . variables_list ')' semi 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variables_list	goto 508
	variable	goto 287
	name		goto 290
	non_empty_variables_list	goto 509
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 221
	(362) expr : T_ISSET '(' . variables_list ')' 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variables_list	goto 510
	variable	goto 287
	name		goto 290
	non_empty_variables_list	goto 509
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 222
	(228) foreach_variable : '&' . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 332
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 223
	(502) encaps_var : T_CURLY_OPEN . variable '}' 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 520
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 224
	(251) argument : '&' . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 286
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 225
	(324) expr : T_INC . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 255
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 226
	(487) array_pair : expr T_DOUBLE_ARROW '&' . variable 

	'['		shift 25
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 456
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'('		shift 37
	'$'		shift 267
	namespace_name_parts	goto 445
	variable	goto 272
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 281
	constant	goto 344
	dereferencable_scalar	goto 339
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 227
	(88) no_comma : ',' . 
	(234) non_empty_parameter_list : non_empty_parameter_list ',' . parameter 
	(242) optional_param_type : . 

	'?'		shift 254
	'&'		reduce (242)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	reduce (242)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	T_ELLIPSIS	reduce (242)
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	parameter	goto 607 and reduce (234)
	optional_param_type	goto 441
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (88)

state 228
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 592 and reduce (291)
	T_ABSTRACT	shift 593 and reduce (292)
	T_FINAL		shift 594 and reduce (293)
	T_PRIVATE	shift 597 and reduce (290)
	T_PROTECTED	shift 602 and reduce (289)
	T_PUBLIC	shift 603 and reduce (288)
	T_VAR		shift 574 and reduce (283)
	'}'		shift 561 and reduce (181)
	class_statement	goto 573 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 550 and reduce (286)
	non_empty_member_modifiers	goto 236
	.		reduce (284)

state 229
	(262) class_statement_list : class_statement_list . class_statement 
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list . '}' 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 592 and reduce (291)
	T_ABSTRACT	shift 593 and reduce (292)
	T_FINAL		shift 594 and reduce (293)
	T_PRIVATE	shift 597 and reduce (290)
	T_PROTECTED	shift 602 and reduce (289)
	T_PUBLIC	shift 603 and reduce (288)
	T_VAR		shift 574 and reduce (283)
	'}'		shift 563 and reduce (387)
	class_statement	goto 573 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 550 and reduce (286)
	non_empty_member_modifiers	goto 236
	.		reduce (284)

state 230
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 592 and reduce (291)
	T_ABSTRACT	shift 593 and reduce (292)
	T_FINAL		shift 594 and reduce (293)
	T_PRIVATE	shift 597 and reduce (290)
	T_PROTECTED	shift 602 and reduce (289)
	T_PUBLIC	shift 603 and reduce (288)
	T_VAR		shift 574 and reduce (283)
	'}'		shift 562 and reduce (179)
	class_statement	goto 573 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 550 and reduce (286)
	non_empty_member_modifiers	goto 236
	.		reduce (284)

state 231
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 592 and reduce (291)
	T_ABSTRACT	shift 593 and reduce (292)
	T_FINAL		shift 594 and reduce (293)
	T_PRIVATE	shift 597 and reduce (290)
	T_PROTECTED	shift 602 and reduce (289)
	T_PUBLIC	shift 603 and reduce (288)
	T_VAR		shift 574 and reduce (283)
	'}'		shift 625 and reduce (180)
	class_statement	goto 573 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 550 and reduce (286)
	non_empty_member_modifiers	goto 236
	.		reduce (284)

state 232
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(342) expr : expr T_SR expr . 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (342)

state 233
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(341) expr : expr T_SL expr . 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'+'		shift 93
	'-'		shift 94
	'.'		shift 95
	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (341)

state 234
	(388) new_expr : T_NEW . class_name_reference ctor_arguments 
	(389) new_expr : T_NEW . anonymous_class 

	error		shift 791 and reduce (406)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_STATIC	shift 762 and reduce (399)
	T_CLASS		shift 378
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'$'		shift 267
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 467
	simple_variable	goto 789 and reduce (461)
	class_name_reference	goto 540
	anonymous_class	goto 788 and reduce (389)
	new_variable	goto 259
	.		error

state 235
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 254
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	')'		reduce (232)
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	parameter_list	goto 424
	non_empty_parameter_list	goto 439
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 441
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 236
	(282) variable_modifiers : non_empty_member_modifiers . 
	(285) method_modifiers : non_empty_member_modifiers . 
	(287) non_empty_member_modifiers : non_empty_member_modifiers . member_modifier 

	T_VARIABLE	reduce (282)
	T_STATIC	shift 592 and reduce (291)
	T_ABSTRACT	shift 593 and reduce (292)
	T_FINAL		shift 594 and reduce (293)
	T_PRIVATE	shift 597 and reduce (290)
	T_PROTECTED	shift 602 and reduce (289)
	T_PUBLIC	shift 603 and reduce (288)
	member_modifier	goto 628 and reduce (287)
	.		reduce (285)

state 237
	(385) expr : T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 254
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	')'		reduce (232)
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	parameter_list	goto 438
	non_empty_parameter_list	goto 439
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 441
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 238
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' . parameter_list ')' optional_return_type method_body 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 254
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	')'		reduce (232)
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	parameter_list	goto 365
	non_empty_parameter_list	goto 439
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 441
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 239
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' . parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 254
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	')'		reduce (232)
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	parameter_list	goto 423
	non_empty_parameter_list	goto 439
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 441
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 240
	(357) expr : expr T_INSTANCEOF . class_name_reference 

	error		shift 791 and reduce (406)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	'$'		shift 267
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 467
	simple_variable	goto 789 and reduce (461)
	class_name_reference	goto 717 and reduce (357)
	new_variable	goto 259
	.		error

state 241
241: reduce/reduce conflict (reduce 80, reduce 82) on ']'
241: reduce/reduce conflict (reduce 80, reduce 82) on ')'
241: reduce/reduce conflict (reduce 80, reduce 82) on '('
241: reduce/reduce conflict (reduce 80, reduce 82) on '}'
241: reduce/reduce conflict (reduce 80, reduce 82) on ';'
241: reduce/reduce conflict (reduce 80, reduce 82) on T_AS
241: reduce/reduce conflict (reduce 80, reduce 82) on '['
241: reduce/reduce conflict (reduce 80, reduce 82) on T_POW
241: reduce/reduce conflict (reduce 80, reduce 82) on T_INSTANCEOF
241: reduce/reduce conflict (reduce 80, reduce 82) on '%'
241: reduce/reduce conflict (reduce 80, reduce 82) on '/'
241: reduce/reduce conflict (reduce 80, reduce 82) on '*'
241: reduce/reduce conflict (reduce 80, reduce 82) on '.'
241: reduce/reduce conflict (reduce 80, reduce 82) on '-'
241: reduce/reduce conflict (reduce 80, reduce 82) on '+'
241: reduce/reduce conflict (reduce 80, reduce 82) on T_SR
241: reduce/reduce conflict (reduce 80, reduce 82) on T_SL
241: reduce/reduce conflict (reduce 80, reduce 82) on T_IS_GREATER_OR_EQUAL
241: reduce/reduce conflict (reduce 80, reduce 82) on '>'
241: reduce/reduce conflict (reduce 80, reduce 82) on T_IS_SMALLER_OR_EQUAL
241: reduce/reduce conflict (reduce 80, reduce 82) on '<'
241: reduce/reduce conflict (reduce 80, reduce 82) on T_SPACESHIP
241: reduce/reduce conflict (reduce 80, reduce 82) on T_IS_NOT_IDENTICAL
241: reduce/reduce conflict (reduce 80, reduce 82) on T_IS_IDENTICAL
241: reduce/reduce conflict (reduce 80, reduce 82) on T_IS_NOT_EQUAL
241: reduce/reduce conflict (reduce 80, reduce 82) on T_IS_EQUAL
241: reduce/reduce conflict (reduce 80, reduce 82) on '&'
241: reduce/reduce conflict (reduce 80, reduce 82) on '^'
241: reduce/reduce conflict (reduce 80, reduce 82) on '|'
241: reduce/reduce conflict (reduce 80, reduce 82) on T_BOOLEAN_AND
241: reduce/reduce conflict (reduce 80, reduce 82) on T_BOOLEAN_OR
241: reduce/reduce conflict (reduce 80, reduce 82) on T_COALESCE
241: reduce/reduce conflict (reduce 80, reduce 82) on ':'
241: reduce/reduce conflict (reduce 80, reduce 82) on '?'
241: reduce/reduce conflict (reduce 80, reduce 82) on T_DOUBLE_ARROW
241: reduce/reduce conflict (reduce 80, reduce 82) on T_LOGICAL_AND
241: reduce/reduce conflict (reduce 80, reduce 82) on T_LOGICAL_XOR
241: reduce/reduce conflict (reduce 80, reduce 82) on T_LOGICAL_OR
241: reduce/reduce conflict (reduce 80, reduce 82) on ','
241: reduce/reduce conflict (reduce 80, reduce 82) on error
	(80) identifier : T_STRING . 
	(82) namespace_name_parts : T_STRING . 

	T_VARIABLE	reduce (82)
	T_IMPLEMENTS	reduce (82)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (82)
	T_NS_SEPARATOR	reduce (82)
	T_ELLIPSIS	reduce (82)
	'{'		reduce (82)
	.		reduce (80)

state 242
	(245) optional_return_type : ':' . type_expr 

	'?'		shift 254
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	type_expr	goto 653 and reduce (245)
	type		goto 811 and reduce (237)
	.		error

state 243
	(358) expr : '(' expr ')' . 
	(442) dereferencable : '(' expr ')' . 
	(445) callable_expr : '(' expr ')' . 

	'['		reduce (442)
	T_OBJECT_OPERATOR	reduce (442)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (442)
	'{'		reduce (442)
	'('		reduce (445)
	.		reduce (358)

state 244
	(433) scalar : dereferencable_scalar . 
	(443) dereferencable : dereferencable_scalar . 
	(446) callable_expr : dereferencable_scalar . 

	'['		reduce (443)
	T_OBJECT_OPERATOR	reduce (443)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (443)
	'{'		reduce (443)
	'('		reduce (446)
	.		reduce (433)

state 245
	(88) no_comma : ',' . 
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' . lexical_var 
	(174) optional_ref : . 

	error		reduce (88)
	'&'		shift 784 and reduce (175)
	';'		reduce (88)
	'{'		reduce (88)
	')'		reduce (88)
	optional_ref	goto 495
	lexical_var	goto 556 and reduce (394)
	.		reduce (174)

state 246
	(438) scalar : T_START_HEREDOC encaps_list . T_END_HEREDOC 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_END_HEREDOC	shift 697 and reduce (438)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	encaps_var	goto 683 and reduce (490)
	encaps_string_part	goto 698 and reduce (491)
	encaps_base_var	goto 301
	.		error

state 247
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(335) expr : expr '.' expr . 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (335)

state 248
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR . property_name argument_list 
	(455) variable : dereferencable T_OBJECT_OPERATOR . property_name 

	error		shift 890 and reduce (473)
	T_STRING	shift 857 and reduce (470)
	T_VARIABLE	shift 757 and reduce (456)
	'{'		shift 36
	'$'		shift 267
	simple_variable	goto 826 and reduce (472)
	property_name	goto 349
	.		error

state 249
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(336) expr : expr '+' expr . 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (336)

state 250
	(435) scalar : T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
	(436) scalar : T_START_HEREDOC . T_END_HEREDOC 
	(438) scalar : T_START_HEREDOC . encaps_list T_END_HEREDOC 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 481
	T_END_HEREDOC	shift 771 and reduce (436)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	encaps_list	goto 246
	encaps_var	goto 770 and reduce (492)
	encaps_string_part	goto 277
	encaps_base_var	goto 301
	.		error

state 251
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(337) expr : expr '-' expr . 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 96
	'/'		shift 88
	'%'		shift 76
	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (337)

state 252
	(464) new_variable : new_variable T_OBJECT_OPERATOR . property_name 

	error		shift 890 and reduce (473)
	T_STRING	shift 857 and reduce (470)
	T_VARIABLE	shift 757 and reduce (456)
	'{'		shift 36
	'$'		shift 267
	simple_variable	goto 826 and reduce (472)
	property_name	goto 820 and reduce (464)
	.		error

state 253
	(437) scalar : '"' encaps_list . '"' 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	'"'		shift 719 and reduce (437)
	encaps_var	goto 683 and reduce (490)
	encaps_string_part	goto 698 and reduce (491)
	encaps_base_var	goto 301
	.		error

state 254
	(238) type_expr : '?' . type 

	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 814 and reduce (239)
	type		goto 829 and reduce (238)
	.		error

state 255
	(324) expr : T_INC variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (324)

state 256
	(326) expr : T_DEC variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (326)

state 257
	(308) expr : variable '=' '&' variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (308)

state 258
	(437) scalar : '"' . encaps_list '"' 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	encaps_list	goto 253
	encaps_var	goto 770 and reduce (492)
	encaps_string_part	goto 277
	encaps_base_var	goto 301
	.		error

state 259
	(405) class_name_reference : new_variable . 
	(462) new_variable : new_variable . '[' optional_expr ']' 
	(463) new_variable : new_variable . '{' expr '}' 
	(464) new_variable : new_variable . T_OBJECT_OPERATOR property_name 
	(466) new_variable : new_variable . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	'['		shift 40
	T_OBJECT_OPERATOR	shift 252
	T_PAAMAYIM_NEKUDOTAYIM	shift 298
	'{'		shift 43
	.		reduce (405)

state 260
	(379) expr : '`' . backticks_expr '`' 
	(411) backticks_expr : . 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 340
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	backticks_expr	goto 476
	encaps_list	goto 269
	encaps_var	goto 770 and reduce (492)
	encaps_string_part	goto 277
	encaps_base_var	goto 301
	.		reduce (411)

state 261
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF . class_name_list ';' 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 443
	non_empty_class_name_list	goto 454
	.		error

state 262
	(88) no_comma : ',' . 
	(193) non_empty_class_name_list : non_empty_class_name_list ',' . class_name 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 627 and reduce (193)
	.		reduce (88)

state 263
	(186) extends_from : T_EXTENDS . class_name 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 849 and reduce (186)
	.		error

state 264
	(188) interface_extends_list : T_EXTENDS . class_name_list 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 799 and reduce (188)
	non_empty_class_name_list	goto 454
	.		error

state 265
	(190) implements_list : T_IMPLEMENTS . class_name_list 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 642 and reduce (190)
	non_empty_class_name_list	goto 454
	.		error

state 266
	(98) top_statement : T_USE . use_declarations semi 
	(99) top_statement : T_USE . use_type use_declarations semi 
	(104) group_use_declaration : T_USE . use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(105) group_use_declaration : T_USE . use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(106) group_use_declaration : T_USE . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
	(107) group_use_declaration : T_USE . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	T_NS_SEPARATOR	shift 527
	namespace_name_parts	goto 497
	namespace_name	goto 525
	use_declarations	goto 324
	use_type	goto 323
	unprefixed_use_declaration	goto 778 and reduce (119)
	non_empty_use_declarations	goto 494
	use_declaration	goto 764 and reduce (113)
	.		error

state 267
	(457) simple_variable : '$' . '{' expr '}' 
	(458) simple_variable : '$' . simple_variable 
	(459) simple_variable : '$' . error 

	error		shift 767 and reduce (459)
	T_VARIABLE	shift 757 and reduce (456)
	'{'		shift 34
	'$'		shift 267
	simple_variable	goto 766 and reduce (458)
	.		error

state 268
	(267) class_statement : T_USE . class_name_list trait_adaptations 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 316
	non_empty_class_name_list	goto 454
	.		error

state 269
	(413) backticks_expr : encaps_list . 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	encaps_var	goto 683 and reduce (490)
	encaps_string_part	goto 698 and reduce (491)
	encaps_base_var	goto 301
	.		reduce (413)

state 270
	(497) encaps_var : encaps_base_var '[' . encaps_var_offset ']' 

	'-'		shift 459
	T_STRING	shift 855 and reduce (503)
	T_VARIABLE	shift 854 and reduce (506)
	T_NUM_STRING	shift 853 and reduce (504)
	encaps_var_offset	goto 460
	.		error

state 271
	(441) dereferencable : variable . 
	(488) array_pair : '&' variable . 

	','		reduce (488)
	')'		reduce (488)
	']'		reduce (488)
	.		reduce (441)

state 272
	(441) dereferencable : variable . 
	(487) array_pair : expr T_DOUBLE_ARROW '&' variable . 

	','		reduce (487)
	')'		reduce (487)
	']'		reduce (487)
	.		reduce (441)

state 273
	(207) switch_case_list : ':' case_list . T_ENDSWITCH ';' 
	(210) case_list : case_list . case 

	T_ENDSWITCH	shift 381
	T_CASE		shift 42
	T_DEFAULT	shift 318
	case		goto 557 and reduce (210)
	.		error

state 274
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	use_type	goto 431
	inline_use_declarations	goto 352
	unprefixed_use_declaration	goto 795 and reduce (121)
	non_empty_inline_use_declarations	goto 502
	inline_use_declaration	goto 668 and reduce (116)
	.		error

state 275
	(205) switch_case_list : '{' case_list . '}' 
	(210) case_list : case_list . case 

	T_CASE		shift 42
	T_DEFAULT	shift 318
	'}'		shift 548 and reduce (205)
	case		goto 557 and reduce (210)
	.		error

state 276
	(90) optional_comma : ',' . 
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' . inline_use_declaration 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	use_type	goto 431
	unprefixed_use_declaration	goto 795 and reduce (121)
	inline_use_declaration	goto 588 and reduce (115)
	.		reduce (90)

state 277
	(493) encaps_list : encaps_string_part . encaps_var 

	T_VARIABLE	shift 772 and reduce (495)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 23
	T_CURLY_OPEN	shift 223
	encaps_var	goto 715 and reduce (493)
	encaps_base_var	goto 301
	.		error

state 278
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	use_type	goto 431
	inline_use_declarations	goto 432
	unprefixed_use_declaration	goto 795 and reduce (121)
	non_empty_inline_use_declarations	goto 502
	inline_use_declaration	goto 668 and reduce (116)
	.		error

state 279
	(95) top_statement : T_NAMESPACE namespace_name . semi 
	(96) top_statement : T_NAMESPACE namespace_name . '{' top_statement_list '}' 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	'{'		shift 728
	semi		goto 727 and reduce (95)
	.		error

state 280
	(95) top_statement : T_NAMESPACE . namespace_name semi 
	(96) top_statement : T_NAMESPACE . namespace_name '{' top_statement_list '}' 
	(97) top_statement : T_NAMESPACE . '{' top_statement_list '}' 
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_STRING	shift 747 and reduce (82)
	T_NS_SEPARATOR	shift 480
	'{'		shift 769
	namespace_name_parts	goto 479
	namespace_name	goto 279
	.		error

state 281
	(408) class_name_or_var : dereferencable . 
	(448) callable_variable : dereferencable . '[' optional_expr ']' 
	(450) callable_variable : dereferencable . '{' expr '}' 
	(452) callable_variable : dereferencable . T_OBJECT_OPERATOR property_name argument_list 
	(455) variable : dereferencable . T_OBJECT_OPERATOR property_name 

	'['		shift 71
	T_OBJECT_OPERATOR	shift 248
	'{'		shift 72
	.		reduce (408)

state 282
	(168) catch : T_CATCH '(' . name_union T_VARIABLE ')' '{' inner_statement_list '}' 

	T_STRING	shift 747 and reduce (82)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name_union	goto 297
	name		goto 560 and reduce (166)
	.		error

state 283
	(206) switch_case_list : '{' ';' case_list . '}' 
	(210) case_list : case_list . case 

	T_CASE		shift 42
	T_DEFAULT	shift 318
	'}'		shift 656 and reduce (206)
	case		goto 557 and reduce (210)
	.		error

state 284
	(208) switch_case_list : ':' ';' case_list . T_ENDSWITCH ';' 
	(210) case_list : case_list . case 

	T_ENDSWITCH	shift 486
	T_CASE		shift 42
	T_DEFAULT	shift 318
	case		goto 557 and reduce (210)
	.		error

state 285
	(167) name_union : name_union '|' . name 

	T_STRING	shift 747 and reduce (82)
	T_NAMESPACE	shift 354
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 445
	name		goto 547 and reduce (167)
	.		error

state 286
	(251) argument : '&' variable . 
	(441) dereferencable : variable . 

	','		reduce (251)
	')'		reduce (251)
	.		reduce (441)

state 287
	(172) non_empty_variables_list : variable . 
	(441) dereferencable : variable . 

	','		reduce (172)
	')'		reduce (172)
	.		reduce (441)

state 288
	(173) non_empty_variables_list : non_empty_variables_list ',' variable . 
	(441) dereferencable : variable . 

	','		reduce (173)
	')'		reduce (173)
	.		reduce (441)

state 289
	(441) dereferencable : variable . 
	(479) list_expr_element : expr T_DOUBLE_ARROW variable . 

	','		reduce (479)
	')'		reduce (479)
	.		reduce (441)

state 290
290: reduce/reduce conflict (reduce 400, reduce 416) on ']'
290: reduce/reduce conflict (reduce 400, reduce 416) on ')'
290: reduce/reduce conflict (reduce 400, reduce 416) on '}'
290: reduce/reduce conflict (reduce 400, reduce 416) on ';'
290: reduce/reduce conflict (reduce 400, reduce 416) on T_AS
290: reduce/reduce conflict (reduce 400, reduce 416) on T_POW
290: reduce/reduce conflict (reduce 400, reduce 416) on T_INSTANCEOF
290: reduce/reduce conflict (reduce 400, reduce 416) on '%'
290: reduce/reduce conflict (reduce 400, reduce 416) on '/'
290: reduce/reduce conflict (reduce 400, reduce 416) on '*'
290: reduce/reduce conflict (reduce 400, reduce 416) on '.'
290: reduce/reduce conflict (reduce 400, reduce 416) on '-'
290: reduce/reduce conflict (reduce 400, reduce 416) on '+'
290: reduce/reduce conflict (reduce 400, reduce 416) on T_SR
290: reduce/reduce conflict (reduce 400, reduce 416) on T_SL
290: reduce/reduce conflict (reduce 400, reduce 416) on T_IS_GREATER_OR_EQUAL
290: reduce/reduce conflict (reduce 400, reduce 416) on '>'
290: reduce/reduce conflict (reduce 400, reduce 416) on T_IS_SMALLER_OR_EQUAL
290: reduce/reduce conflict (reduce 400, reduce 416) on '<'
290: reduce/reduce conflict (reduce 400, reduce 416) on T_SPACESHIP
290: reduce/reduce conflict (reduce 400, reduce 416) on T_IS_NOT_IDENTICAL
290: reduce/reduce conflict (reduce 400, reduce 416) on T_IS_IDENTICAL
290: reduce/reduce conflict (reduce 400, reduce 416) on T_IS_NOT_EQUAL
290: reduce/reduce conflict (reduce 400, reduce 416) on T_IS_EQUAL
290: reduce/reduce conflict (reduce 400, reduce 416) on '&'
290: reduce/reduce conflict (reduce 400, reduce 416) on '^'
290: reduce/reduce conflict (reduce 400, reduce 416) on '|'
290: reduce/reduce conflict (reduce 400, reduce 416) on T_BOOLEAN_AND
290: reduce/reduce conflict (reduce 400, reduce 416) on T_BOOLEAN_OR
290: reduce/reduce conflict (reduce 400, reduce 416) on T_COALESCE
290: reduce/reduce conflict (reduce 400, reduce 416) on ':'
290: reduce/reduce conflict (reduce 400, reduce 416) on '?'
290: reduce/reduce conflict (reduce 400, reduce 416) on T_DOUBLE_ARROW
290: reduce/reduce conflict (reduce 400, reduce 416) on T_LOGICAL_AND
290: reduce/reduce conflict (reduce 400, reduce 416) on T_LOGICAL_XOR
290: reduce/reduce conflict (reduce 400, reduce 416) on T_LOGICAL_OR
290: reduce/reduce conflict (reduce 400, reduce 416) on ','
290: reduce/reduce conflict (reduce 400, reduce 416) on error
290: shift/reduce conflict (shift 20, reduce 400) on '('
	(396) function_call : name . argument_list 
	(400) class_name : name . 
	(416) constant : name . 

	'['		reduce (416)
	'('		shift 20
	argument_list	goto 695 and reduce (396)
	.		reduce (400)

state 291
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable . T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
	(227) foreach_variable : variable . 
	(441) dereferencable : variable . 

	T_DOUBLE_ARROW	shift 214
	')'		reduce (227)
	.		reduce (441)

state 292
	(474) list_expr : T_LIST '(' list_expr_elements . ')' 
	(475) list_expr_elements : list_expr_elements . ',' list_expr_element 

	','		shift 119
	')'		shift 797 and reduce (474)
	.		error

state 293
	(99) top_statement : T_USE use_type use_declarations . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 807 and reduce (99)
	.		error

state 294
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '}' 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}' 

	'['		shift 117
	'}'		shift 810 and reduce (500)
	.		error

state 295
	(88) no_comma : ',' . 
	(112) non_empty_use_declarations : non_empty_use_declarations ',' . use_declaration 

	T_STRING	shift 747 and reduce (82)
	T_NS_SEPARATOR	shift 449
	namespace_name_parts	goto 479
	namespace_name	goto 525
	unprefixed_use_declaration	goto 778 and reduce (119)
	use_declaration	goto 806 and reduce (112)
	.		reduce (88)

state 296
	(88) no_comma : ',' . 
	(254) non_empty_global_var_list : non_empty_global_var_list ',' . global_var 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 267
	global_var	goto 805 and reduce (254)
	simple_variable	goto 776 and reduce (256)
	.		reduce (88)

state 297
	(167) name_union : name_union . '|' name 
	(168) catch : T_CATCH '(' name_union . T_VARIABLE ')' '{' inner_statement_list '}' 

	'|'		shift 285
	T_VARIABLE	shift 475
	.		error

state 298
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 267
	simple_variable	goto 819 and reduce (466)
	.		error

state 299
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 267
	simple_variable	goto 821 and reduce (465)
	.		error

state 300
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 369
	.		error

state 301
	(496) encaps_var : encaps_base_var . 
	(497) encaps_var : encaps_base_var . '[' encaps_var_offset ']' 
	(498) encaps_var : encaps_base_var . T_OBJECT_OPERATOR T_STRING 

	'['		shift 270
	T_OBJECT_OPERATOR	shift 523
	.		reduce (496)

state 302
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list . new_else_single T_ENDIF ';' 
	(221) new_elseif_list : new_elseif_list . new_elseif 
	(225) new_else_single : . 

	T_ELSEIF	shift 533
	T_ELSE		shift 534
	new_else_single	goto 535
	new_elseif	goto 606 and reduce (221)
	.		reduce (225)

state 303
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches . optional_finally 
	(165) catches : catches . catch 
	(169) optional_finally : . 

	T_CATCH		shift 359
	T_FINALLY	shift 355
	optional_finally	goto 637 and reduce (157)
	catch		goto 630 and reduce (165)
	.		reduce (169)

state 304
	(265) class_statement : method_modifiers . T_CONST class_const_list ';' 
	(266) class_statement : method_modifiers . T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body 

	T_FUNCTION	shift 395
	T_CONST		shift 10
	.		error

state 305
	(148) non_empty_statement : T_GLOBAL . global_var_list semi 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 267
	global_var_list	goto 322
	non_empty_global_var_list	goto 493
	global_var	goto 777 and reduce (255)
	simple_variable	goto 776 and reduce (256)
	.		error

state 306
	(149) non_empty_statement : T_STATIC . static_var_list semi 
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(399) class_name : T_STATIC . 

	T_VARIABLE	shift 490
	T_FUNCTION	shift 489
	static_var_list	goto 321
	non_empty_static_var_list	goto 488
	static_var	goto 775 and reduce (259)
	.		reduce (399)

state 307
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type . method_body 

	';'		shift 598 and reduce (280)
	'{'		shift 595
	method_body	goto 591 and reduce (266)
	.		error

state 308
308: shift/reduce conflict (shift 17, reduce 223) on T_ELSE
308: shift/reduce conflict (shift 389, reduce 223) on T_ELSEIF
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list . else_single 
	(218) elseif_list : elseif_list . elseif 
	(223) else_single : . 

	T_ELSEIF	shift 389
	T_ELSE		shift 17
	else_single	goto 612 and reduce (139)
	elseif		goto 621 and reduce (218)
	.		reduce (223)

state 309
	(153) non_empty_statement : T_UNSET '(' variables_list ')' . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 587 and reduce (153)
	.		error

state 310
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 427
	.		error

state 311
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 274
	.		error

state 312
	(100) top_statement : group_use_declaration . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 730 and reduce (100)
	.		error

state 313
	(144) non_empty_statement : T_SWITCH '(' expr ')' . switch_case_list 

	':'		shift 421
	'{'		shift 422
	switch_case_list	goto 830 and reduce (144)
	.		error

state 314
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(346) expr : '!' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (346)

state 315
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(338) expr : expr '*' expr . 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (338)

state 316
	(267) class_statement : T_USE class_name_list . trait_adaptations 

	';'		shift 578 and reduce (268)
	'{'		shift 577
	trait_adaptations	goto 613 and reduce (267)
	.		error

state 317
	(146) non_empty_statement : T_CONTINUE optional_expr . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 685 and reduce (146)
	.		error

state 318
	(212) case : T_DEFAULT . case_separator inner_statement_list 

	':'		shift 662 and reduce (213)
	';'		shift 660 and reduce (214)
	case_separator	goto 657
	.		error

state 319
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(339) expr : expr '/' expr . 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (339)

state 320
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(340) expr : expr '%' expr . 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 66
	.		reduce (340)

state 321
	(149) non_empty_statement : T_STATIC static_var_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 674 and reduce (149)
	.		error

state 322
	(148) non_empty_statement : T_GLOBAL global_var_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 676 and reduce (148)
	.		error

state 323
	(99) top_statement : T_USE use_type . use_declarations semi 
	(104) group_use_declaration : T_USE use_type . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(105) group_use_declaration : T_USE use_type . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_NS_SEPARATOR	shift 499
	namespace_name_parts	goto 500
	namespace_name	goto 525
	use_declarations	goto 293
	unprefixed_use_declaration	goto 778 and reduce (119)
	non_empty_use_declarations	goto 494
	use_declaration	goto 764 and reduce (113)
	.		error

state 324
	(98) top_statement : T_USE use_declarations . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 678 and reduce (98)
	.		error

state 325
	(147) non_empty_statement : T_RETURN optional_expr . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 681 and reduce (147)
	.		error

state 326
	(101) top_statement : T_CONST constant_declaration_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 682 and reduce (101)
	.		error

state 327
	(178) function_declaration_statement : T_FUNCTION optional_ref . T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	T_STRING	shift 504
	'('		shift 237
	.		error

state 328
	(159) non_empty_statement : T_GOTO T_STRING . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 684 and reduce (159)
	.		error

state 329
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 278
	.		error

state 330
	(145) non_empty_statement : T_BREAK optional_expr . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 686 and reduce (145)
	.		error

state 331
	(150) non_empty_statement : T_ECHO expr_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 690 and reduce (150)
	.		error

state 332
	(228) foreach_variable : '&' variable . 
	(441) dereferencable : variable . 

	')'		reduce (228)
	.		reduce (441)

state 333
	(442) dereferencable : '(' expr ')' . 
	(445) callable_expr : '(' expr ')' . 

	'('		reduce (445)
	.		reduce (442)

state 334
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
	(469) member_name : simple_variable . 

	'('		reduce (469)
	.		reduce (460)

state 335
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM identifier . 
	(467) member_name : identifier . 

	'('		reduce (467)
	.		reduce (417)

state 336
336: reduce/reduce conflict (reduce 230, reduce 421) on ')'
	(230) foreach_variable : array_short_syntax . 
	(421) dereferencable_scalar : array_short_syntax . 

	')'		reduce (230)
	.		reduce (421)

state 337
	(227) foreach_variable : variable . 
	(441) dereferencable : variable . 

	')'		reduce (227)
	.		reduce (441)

state 338
	(0) $start : start . 

	$EOF		accept
	.		error

state 339
	(443) dereferencable : dereferencable_scalar . 
	(446) callable_expr : dereferencable_scalar . 

	'('		reduce (446)
	.		reduce (443)

state 340
340: reduce/reduce conflict (reduce 412, reduce 494) on '`'
	(412) backticks_expr : T_ENCAPSED_AND_WHITESPACE . 
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	'`'		reduce (412)
	.		reduce (494)

state 341
	(444) callable_expr : callable_variable . 
	(453) variable : callable_variable . 

	'('		reduce (444)
	.		reduce (453)

state 342
	(118) unprefixed_use_declaration : namespace_name T_AS . T_STRING 

	T_STRING	shift 808 and reduce (118)
	.		error

state 343
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(399) class_name : T_STATIC . 

	T_FUNCTION	shift 489
	.		reduce (399)

state 344
	(449) callable_variable : constant . '[' optional_expr ']' 

	'['		shift 73
	.		error

state 345
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name . argument_list 

	'('		shift 20
	argument_list	goto 848 and reduce (398)
	.		error

state 346
	(448) callable_variable : dereferencable '[' optional_expr . ']' 

	']'		shift 847 and reduce (448)
	.		error

state 347
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 609 and reduce (386)
	.		error

state 348
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(347) expr : '~' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 66
	.		reduce (347)

state 349
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name . argument_list 
	(455) variable : dereferencable T_OBJECT_OPERATOR property_name . 

	'('		shift 20
	argument_list	goto 846 and reduce (452)
	.		reduce (455)

state 350
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(345) expr : '-' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 66
	.		reduce (345)

state 351
	(449) callable_variable : constant '[' optional_expr . ']' 

	']'		shift 844 and reduce (449)
	.		error

state 352
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 

	'}'		shift 576 and reduce (107)
	.		error

state 353
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(344) expr : '+' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 66
	.		reduce (344)

state 354
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_NS_SEPARATOR	shift 480
	.		error

state 355
	(170) optional_finally : T_FINALLY . '{' inner_statement_list '}' 

	'{'		shift 596
	.		error

state 356
	(387) anonymous_class : T_CLASS ctor_arguments extends_from . implements_list '{' class_statement_list '}' 
	(189) implements_list : . 

	T_IMPLEMENTS	shift 265
	implements_list	goto 414
	.		reduce (189)

state 357
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(369) expr : T_INT_CAST expr . 

	T_POW		shift 66
	.		reduce (369)

state 358
	(462) new_variable : new_variable '[' optional_expr . ']' 

	']'		shift 843 and reduce (462)
	.		error

state 359
	(168) catch : T_CATCH . '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' 

	'('		shift 282
	.		error

state 360
	(235) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE 
	(236) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE '=' expr 

	T_VARIABLE	shift 374
	.		error

state 361
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 471
	.		reduce (174)

state 362
	(434) scalar : constant . 
	(449) callable_variable : constant . '[' optional_expr ']' 

	'['		shift 73
	.		reduce (434)

state 363
	(398) function_call : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM member_name argument_list 
	(417) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM identifier 
	(418) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM error 
	(460) static_member : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	T_PAAMAYIM_NEKUDOTAYIM	shift 3
	.		error

state 364
	(397) function_call : callable_expr . argument_list 

	'('		shift 20
	argument_list	goto 694 and reduce (397)
	.		error

state 365
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list . ')' optional_return_type method_body 

	')'		shift 448
	.		error

state 366
	(222) new_elseif : T_ELSEIF '(' expr ')' . ':' inner_statement_list 

	':'		shift 659
	.		error

state 367
	(195) for_statement : ':' inner_statement_list T_ENDFOR . ';' 

	';'		shift 658 and reduce (195)
	.		error

state 368
	(88) no_comma : ',' . 
	(203) non_empty_declare_list : non_empty_declare_list ',' . declare_list_element 

	T_STRING	shift 516
	declare_list_element	goto 831 and reduce (203)
	.		reduce (88)

state 369
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	unprefixed_use_declarations	goto 373
	non_empty_unprefixed_use_declarations	goto 387
	unprefixed_use_declaration	goto 571 and reduce (110)
	.		error

state 370
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 

	'}'		shift 585 and reduce (104)
	.		error

state 371
	(305) expr : list_expr . '=' expr 

	'='		shift 68
	.		error

state 372
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr . ')' for_statement 

	')'		shift 14
	.		error

state 373
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 

	'}'		shift 554 and reduce (105)
	.		error

state 374
	(235) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . 
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . '=' expr 

	'='		shift 46
	.		reduce (235)

state 375
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 566
	.		error

state 376
	(391) lexical_vars : T_USE '(' . lexical_var_list ')' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 495
	lexical_var_list	goto 482
	non_empty_lexical_var_list	goto 496
	lexical_var	goto 569 and reduce (393)
	.		reduce (174)

state 377
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 647
	.		error

state 378
	(387) anonymous_class : T_CLASS . ctor_arguments extends_from implements_list '{' class_statement_list '}' 
	(414) ctor_arguments : . 

	'('		shift 20
	argument_list	goto 692 and reduce (415)
	ctor_arguments	goto 470
	.		reduce (414)

state 379
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' . '{' inner_statement_list '}' 

	'{'		shift 618
	.		error

state 380
	(482) array_pair_list : inner_array_pair_list . 
	(483) inner_array_pair_list : inner_array_pair_list . ',' array_pair 

	','		shift 27
	.		reduce (482)

state 381
	(207) switch_case_list : ':' case_list T_ENDSWITCH . ';' 

	';'		shift 665 and reduce (207)
	.		error

state 382
	(419) array_short_syntax : '[' array_pair_list . ']' 

	']'		shift 693 and reduce (419)
	.		error

state 383
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE . ';' 

	';'		shift 632 and reduce (200)
	.		error

state 384
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(377) expr : '@' expr . 

	T_POW		shift 66
	.		reduce (377)

state 385
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable . ')' foreach_statement 

	')'		shift 16
	.		error

state 386
	(216) while_statement : ':' inner_statement_list T_ENDWHILE . ';' 

	';'		shift 617 and reduce (216)
	.		error

state 387
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations . optional_comma 
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations . ',' unprefixed_use_declaration 
	(89) optional_comma : . 

	','		shift 465
	optional_comma	goto 582 and reduce (108)
	.		reduce (89)

state 388
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier . '(' parameter_list ')' optional_return_type method_body 

	'('		shift 238
	.		error

state 389
	(219) elseif : T_ELSEIF . '(' expr ')' statement 

	'('		shift 98
	.		error

state 390
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(374) expr : T_BOOL_CAST expr . 

	T_POW		shift 66
	.		reduce (374)

state 391
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(373) expr : T_OBJECT_CAST expr . 

	T_POW		shift 66
	.		reduce (373)

state 392
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(372) expr : T_ARRAY_CAST expr . 

	T_POW		shift 66
	.		reduce (372)

state 393
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}' 

	'}'		shift 559 and reduce (501)
	.		error

state 394
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(371) expr : T_STRING_CAST expr . 

	T_POW		shift 66
	.		reduce (371)

state 395
	(266) class_statement : method_modifiers T_FUNCTION . optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 7
	.		reduce (174)

state 396
	(294) property_declaration_list : non_empty_property_declaration_list . no_comma 
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list . ',' property_declaration 
	(87) no_comma : . 

	','		shift 529
	no_comma	goto 586 and reduce (294)
	.		reduce (87)

state 397
	(264) class_statement : variable_modifiers property_declaration_list . ';' 

	';'		shift 579 and reduce (264)
	.		error

state 398
	(297) property_declaration : T_VARIABLE . 
	(298) property_declaration : T_VARIABLE . '=' expr 

	'='		shift 44
	.		reduce (297)

state 399
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(370) expr : T_DOUBLE_CAST expr . 

	T_POW		shift 66
	.		reduce (370)

state 400
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
	(390) lexical_vars : . 

	T_USE		shift 435
	lexical_vars	goto 403
	.		reduce (390)

state 401
	(306) expr : array_short_syntax . '=' expr 
	(421) dereferencable_scalar : array_short_syntax . 

	'='		shift 69
	.		reduce (421)

state 402
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 242
	optional_return_type	goto 375
	.		reduce (244)

state 403
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 242
	optional_return_type	goto 506
	.		reduce (244)

state 404
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable . ')' foreach_statement 

	')'		shift 15
	.		error

state 405
	(157) non_empty_statement : T_TRY . '{' inner_statement_list '}' catches optional_finally 

	'{'		shift 782
	.		error

state 406
	(101) top_statement : T_CONST . constant_declaration_list semi 

	T_STRING	shift 545
	constant_declaration_list	goto 326
	non_empty_constant_declaration_list	goto 543
	constant_declaration	goto 783 and reduce (125)
	.		error

state 407
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list . '{' class_statement_list '}' 

	'{'		shift 643
	.		error

state 408
	(178) function_declaration_statement : T_FUNCTION . optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 327
	.		reduce (174)

state 409
	(159) non_empty_statement : T_GOTO . T_STRING semi 

	T_STRING	shift 328
	.		error

state 410
	(144) non_empty_statement : T_SWITCH . '(' expr ')' switch_case_list 

	'('		shift 47
	.		error

state 411
	(156) non_empty_statement : T_DECLARE . '(' declare_list ')' declare_statement 

	'('		shift 544
	.		error

state 412
	(154) non_empty_statement : T_FOREACH . '(' expr T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH . '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	'('		shift 49
	.		error

state 413
	(143) non_empty_statement : T_FOR . '(' for_expr ';' for_expr ';' for_expr ')' for_statement 

	'('		shift 50
	.		error

state 414
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list . '{' class_statement_list '}' 

	'{'		shift 649
	.		error

state 415
	(141) non_empty_statement : T_WHILE . '(' expr ')' while_statement 

	'('		shift 51
	.		error

state 416
	(264) class_statement : variable_modifiers . property_declaration_list ';' 

	T_VARIABLE	shift 398
	property_declaration_list	goto 397
	non_empty_property_declaration_list	goto 396
	property_declaration	goto 633 and reduce (295)
	.		error

state 417
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr . ';' for_expr ')' for_statement 

	';'		shift 116
	.		error

state 418
418: shift/reduce conflict (shift 785, reduce 82) on ':'
	(82) namespace_name_parts : T_STRING . 
	(160) non_empty_statement : T_STRING . ':' 

	':'		shift 785 and reduce (160)
	.		reduce (82)

state 419
	(183) class_entry_type : T_ABSTRACT . T_CLASS 

	T_CLASS		shift 774 and reduce (183)
	.		error

state 420
	(139) non_empty_statement : T_IF . '(' expr ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF . '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	'('		shift 52
	.		error

state 421
	(207) switch_case_list : ':' . case_list T_ENDSWITCH ';' 
	(208) switch_case_list : ':' . ';' case_list T_ENDSWITCH ';' 
	(209) case_list : . 

	';'		shift 635
	case_list	goto 273
	.		reduce (209)

state 422
	(205) switch_case_list : '{' . case_list '}' 
	(206) switch_case_list : '{' . ';' case_list '}' 
	(209) case_list : . 

	';'		shift 610
	case_list	goto 275
	.		reduce (209)

state 423
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list . ')' optional_return_type '{' inner_statement_list '}' 

	')'		shift 437
	.		error

state 424
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	')'		shift 400
	.		error

state 425
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
	(390) lexical_vars : . 

	T_USE		shift 435
	lexical_vars	goto 402
	.		reduce (390)

state 426
	(376) expr : T_EXIT . exit_expr 
	(409) exit_expr : . 

	'('		shift 41
	exit_expr	goto 786 and reduce (376)
	.		reduce (409)

state 427
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	unprefixed_use_declarations	goto 370
	non_empty_unprefixed_use_declarations	goto 387
	unprefixed_use_declaration	goto 571 and reduce (110)
	.		error

state 428
	(235) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE 
	(236) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE '=' expr 
	(176) optional_ellipsis : . 

	T_ELLIPSIS	shift 629 and reduce (177)
	optional_ellipsis	goto 360
	.		reduce (176)

state 429
	(366) expr : T_EVAL . '(' expr ')' 

	'('		shift 35
	.		error

state 430
	(281) method_body : '{' inner_statement_list . '}' 

	'}'		shift 920 and reduce (281)
	.		error

state 431
	(122) inline_use_declaration : use_type . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	unprefixed_use_declaration	goto 564 and reduce (122)
	.		error

state 432
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 

	'}'		shift 552 and reduce (106)
	.		error

state 433
	(247) argument_list : '(' non_empty_argument_list no_comma . ')' 

	')'		shift 640 and reduce (247)
	.		error

state 434
	(184) class_entry_type : T_FINAL . T_CLASS 

	T_CLASS		shift 773 and reduce (184)
	.		error

state 435
	(391) lexical_vars : T_USE . '(' lexical_var_list ')' 

	'('		shift 376
	.		error

state 436
	(402) name : T_NS_SEPARATOR . namespace_name_parts 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 478
	.		error

state 437
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 242
	optional_return_type	goto 377
	.		reduce (244)

state 438
	(385) expr : T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	')'		shift 425
	.		error

state 439
	(231) parameter_list : non_empty_parameter_list . no_comma 
	(234) non_empty_parameter_list : non_empty_parameter_list . ',' parameter 
	(87) no_comma : . 

	','		shift 227
	no_comma	goto 828 and reduce (231)
	.		reduce (87)

state 440
	(179) class_declaration_statement : class_entry_type . T_STRING extends_from implements_list '{' class_statement_list '}' 

	T_STRING	shift 472
	.		error

state 441
	(235) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE 
	(236) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE '=' expr 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 428
	.		reduce (174)

state 442
	(200) declare_statement : ':' inner_statement_list . T_ENDDECLARE ';' 

	T_ENDDECLARE	shift 383
	.		error

state 443
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list . ';' 

	';'		shift 655 and reduce (272)
	.		error

state 444
	(275) trait_adaptation : trait_method_reference T_AS T_STRING . ';' 

	';'		shift 654 and reduce (275)
	.		error

state 445
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(401) name : namespace_name_parts . 

	T_NS_SEPARATOR	shift 474
	.		reduce (401)

state 446
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_NS_SEPARATOR	shift 300
	.		reduce (84)

state 447
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers . ';' 

	';'		shift 651 and reduce (276)
	.		error

state 448
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' . optional_return_type method_body 
	(244) optional_return_type : . 

	':'		shift 242
	optional_return_type	goto 307
	.		reduce (244)

state 449
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	unprefixed_use_declaration	goto 679 and reduce (120)
	.		error

state 450
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list . '}' 

	'}'		shift 575 and reduce (168)
	.		error

state 451
	(153) non_empty_statement : T_UNSET . '(' variables_list ')' semi 

	'('		shift 220
	.		error

state 452
	(216) while_statement : ':' inner_statement_list . T_ENDWHILE ';' 

	T_ENDWHILE	shift 386
	.		error

state 453
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' . ';' 

	';'		shift 664 and reduce (142)
	.		error

state 454
	(191) class_name_list : non_empty_class_name_list . no_comma 
	(193) non_empty_class_name_list : non_empty_class_name_list . ',' class_name 
	(87) no_comma : . 

	','		shift 262
	no_comma	goto 549 and reduce (191)
	.		reduce (87)

state 455
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier . ';' 

	';'		shift 600 and reduce (273)
	.		error

state 456
	(420) dereferencable_scalar : T_ARRAY . '(' array_pair_list ')' 

	'('		shift 22
	.		error

state 457
	(474) list_expr : T_LIST . '(' list_expr_elements ')' 

	'('		shift 39
	.		error

state 458
	(180) class_declaration_statement : T_INTERFACE . T_STRING interface_extends_list '{' class_statement_list '}' 

	T_STRING	shift 483
	.		error

state 459
	(505) encaps_var_offset : '-' . T_NUM_STRING 

	T_NUM_STRING	shift 572 and reduce (505)
	.		error

state 460
	(497) encaps_var : encaps_base_var '[' encaps_var_offset . ']' 

	']'		shift 604 and reduce (497)
	.		error

state 461
	(181) class_declaration_statement : T_TRAIT . T_STRING '{' class_statement_list '}' 

	T_STRING	shift 484
	.		error

state 462
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list . '}' 

	'}'		shift 590 and reduce (96)
	.		error

state 463
	(363) expr : T_EMPTY . '(' expr ')' 

	'('		shift 29
	.		error

state 464
	(362) expr : T_ISSET . '(' variables_list ')' 

	'('		shift 221
	.		error

state 465
	(90) optional_comma : ',' . 
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 479
	namespace_name	goto 525
	unprefixed_use_declaration	goto 589 and reduce (109)
	.		reduce (90)

state 466
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(375) expr : T_UNSET_CAST expr . 

	T_POW		shift 66
	.		reduce (375)

state 467
	(404) class_name_reference : class_name . 
	(465) new_variable : class_name . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	T_PAAMAYIM_NEKUDOTAYIM	shift 299
	.		reduce (404)

state 468
	(60) reserved_non_modifiers : T_NAMESPACE . 
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_NS_SEPARATOR	shift 480
	.		reduce (60)

state 469
	(410) exit_expr : '(' optional_expr . ')' 

	')'		shift 818 and reduce (410)
	.		error

state 470
	(387) anonymous_class : T_CLASS ctor_arguments . extends_from implements_list '{' class_statement_list '}' 
	(185) extends_from : . 

	T_EXTENDS	shift 263
	extends_from	goto 356
	.		reduce (185)

state 471
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	'('		shift 237
	.		error

state 472
	(179) class_declaration_statement : class_entry_type T_STRING . extends_from implements_list '{' class_statement_list '}' 
	(185) extends_from : . 

	T_EXTENDS	shift 263
	extends_from	goto 537
	.		reduce (185)

state 473
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 601 and reduce (385)
	.		error

state 474
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 

	T_STRING	shift 718 and reduce (83)
	.		error

state 475
	(168) catch : T_CATCH '(' name_union T_VARIABLE . ')' '{' inner_statement_list '}' 

	')'		shift 379
	.		error

state 476
	(379) expr : '`' backticks_expr . '`' 

	'`'		shift 720 and reduce (379)
	.		error

state 477
	(138) non_empty_statement : '{' inner_statement_list . '}' 

	'}'		shift 721 and reduce (138)
	.		error

state 478
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(402) name : T_NS_SEPARATOR namespace_name_parts . 

	T_NS_SEPARATOR	shift 474
	.		reduce (402)

state 479
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 

	T_NS_SEPARATOR	shift 474
	.		reduce (84)

state 480
	(403) name : T_NAMESPACE T_NS_SEPARATOR . namespace_name_parts 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 524
	.		error

state 481
481: shift/reduce conflict (shift 670, reduce 494) on T_END_HEREDOC
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC 
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	T_END_HEREDOC	shift 670 and reduce (435)
	.		reduce (494)

state 482
	(391) lexical_vars : T_USE '(' lexical_var_list . ')' 

	')'		shift 615 and reduce (391)
	.		error

state 483
	(180) class_declaration_statement : T_INTERFACE T_STRING . interface_extends_list '{' class_statement_list '}' 
	(187) interface_extends_list : . 

	T_EXTENDS	shift 264
	interface_extends_list	goto 511
	.		reduce (187)

state 484
	(181) class_declaration_statement : T_TRAIT T_STRING . '{' class_statement_list '}' 

	'{'		shift 672
	.		error

state 485
	(277) trait_method_reference_fully_qualified : name . T_PAAMAYIM_NEKUDOTAYIM identifier 

	T_PAAMAYIM_NEKUDOTAYIM	shift 8
	.		error

state 486
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH . ';' 

	';'		shift 652 and reduce (208)
	.		error

state 487
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(343) expr : expr T_POW expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 66
	.		reduce (343)

state 488
	(257) static_var_list : non_empty_static_var_list . no_comma 
	(258) non_empty_static_var_list : non_empty_static_var_list . ',' static_var 
	(87) no_comma : . 

	','		shift 507
	no_comma	goto 673 and reduce (257)
	.		reduce (87)

state 489
	(386) expr : T_STATIC T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 505
	.		reduce (174)

state 490
	(260) static_var : T_VARIABLE . 
	(261) static_var : T_VARIABLE . '=' expr 

	'='		shift 110
	.		reduce (260)

state 491
	(272) trait_adaptation : trait_method_reference_fully_qualified . T_INSTEADOF class_name_list ';' 
	(278) trait_method_reference : trait_method_reference_fully_qualified . 

	T_INSTEADOF	shift 261
	.		reduce (278)

state 492
	(273) trait_adaptation : trait_method_reference . T_AS member_modifier identifier ';' 
	(274) trait_adaptation : trait_method_reference . T_AS member_modifier ';' 
	(275) trait_adaptation : trait_method_reference . T_AS T_STRING ';' 
	(276) trait_adaptation : trait_method_reference . T_AS reserved_non_modifiers ';' 

	T_AS		shift 6
	.		error

state 493
	(253) global_var_list : non_empty_global_var_list . no_comma 
	(254) non_empty_global_var_list : non_empty_global_var_list . ',' global_var 
	(87) no_comma : . 

	','		shift 296
	no_comma	goto 675 and reduce (253)
	.		reduce (87)

state 494
	(111) use_declarations : non_empty_use_declarations . no_comma 
	(112) non_empty_use_declarations : non_empty_use_declarations . ',' use_declaration 
	(87) no_comma : . 

	','		shift 295
	no_comma	goto 677 and reduce (111)
	.		reduce (87)

state 495
	(395) lexical_var : optional_ref . T_VARIABLE 

	T_VARIABLE	shift 614 and reduce (395)
	.		error

state 496
	(392) lexical_var_list : non_empty_lexical_var_list . no_comma 
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list . ',' lexical_var 
	(87) no_comma : . 

	','		shift 245
	no_comma	goto 616 and reduce (392)
	.		reduce (87)

state 497
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(106) group_use_declaration : T_USE namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_NS_SEPARATOR	shift 329
	.		reduce (84)

state 498
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF . ';' 

	';'		shift 551 and reduce (140)
	.		error

state 499
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 446
	namespace_name	goto 525
	unprefixed_use_declaration	goto 679 and reduce (120)
	.		error

state 500
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(104) group_use_declaration : T_USE use_type namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_NS_SEPARATOR	shift 310
	.		reduce (84)

state 501
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_NS_SEPARATOR	shift 311
	.		reduce (84)

state 502
	(114) inline_use_declarations : non_empty_inline_use_declarations . optional_comma 
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations . ',' inline_use_declaration 
	(89) optional_comma : . 

	','		shift 276
	optional_comma	goto 645 and reduce (114)
	.		reduce (89)

state 503
	(88) no_comma : ',' . 
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' . constant_declaration 

	T_STRING	shift 545
	constant_declaration	goto 809 and reduce (124)
	.		reduce (88)

state 504
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING . '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 

	'('		shift 239
	.		error

state 505
	(386) expr : T_STATIC T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	'('		shift 235
	.		error

state 506
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 626
	.		error

state 507
	(88) no_comma : ',' . 
	(258) non_empty_static_var_list : non_empty_static_var_list ',' . static_var 

	T_VARIABLE	shift 490
	static_var	goto 804 and reduce (258)
	.		reduce (88)

state 508
	(153) non_empty_statement : T_UNSET '(' variables_list . ')' semi 

	')'		shift 309
	.		error

state 509
	(171) variables_list : non_empty_variables_list . no_comma 
	(173) non_empty_variables_list : non_empty_variables_list . ',' variable 
	(87) no_comma : . 

	','		shift 219
	no_comma	goto 803 and reduce (171)
	.		reduce (87)

state 510
	(362) expr : T_ISSET '(' variables_list . ')' 

	')'		shift 802 and reduce (362)
	.		error

state 511
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list . '{' class_statement_list '}' 

	'{'		shift 798
	.		error

state 512
	(97) top_statement : T_NAMESPACE '{' top_statement_list . '}' 

	'}'		shift 851 and reduce (97)
	.		error

state 513
	(201) declare_list : non_empty_declare_list . no_comma 
	(203) non_empty_declare_list : non_empty_declare_list . ',' declare_list_element 
	(87) no_comma : . 

	','		shift 368
	no_comma	goto 817 and reduce (201)
	.		reduce (87)

state 514
	(156) non_empty_statement : T_DECLARE '(' declare_list . ')' declare_statement 

	')'		shift 11
	.		error

state 515
	(305) expr : list_expr . '=' expr 
	(478) list_expr_element : list_expr . 

	'='		shift 68
	.		reduce (478)

state 516
	(204) declare_list_element : T_STRING . '=' expr 

	'='		shift 99
	.		error

state 517
	(170) optional_finally : T_FINALLY '{' inner_statement_list . '}' 

	'}'		shift 620 and reduce (170)
	.		error

state 518
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list . ')' 

	')'		shift 824 and reduce (420)
	.		error

state 519
	(143) non_empty_statement : T_FOR '(' for_expr . ';' for_expr ';' for_expr ')' for_statement 

	';'		shift 97
	.		error

state 520
	(441) dereferencable : variable . 
	(502) encaps_var : T_CURLY_OPEN variable . '}' 

	'}'		shift 842 and reduce (502)
	.		reduce (441)

state 521
	(142) non_empty_statement : T_DO statement T_WHILE . '(' expr ')' ';' 

	'('		shift 32
	.		error

state 522
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH . ';' 

	';'		shift 624 and reduce (197)
	.		error

state 523
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR . T_STRING 

	T_STRING	shift 852 and reduce (498)
	.		error

state 524
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(403) name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts . 

	T_NS_SEPARATOR	shift 474
	.		reduce (403)

state 525
	(117) unprefixed_use_declaration : namespace_name . 
	(118) unprefixed_use_declaration : namespace_name . T_AS T_STRING 

	T_AS		shift 342
	.		reduce (117)

state 526
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 619 and reduce (178)
	.		error

state 527
	(107) group_use_declaration : T_USE T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 501
	namespace_name	goto 525
	unprefixed_use_declaration	goto 679 and reduce (120)
	.		error

state 528
	(247) argument_list : '(' non_empty_argument_list . no_comma ')' 
	(249) non_empty_argument_list : non_empty_argument_list . ',' argument 
	(87) no_comma : . 

	','		shift 21
	no_comma	goto 433
	.		reduce (87)

state 529
	(88) no_comma : ',' . 
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' . property_declaration 

	T_VARIABLE	shift 398
	property_declaration	goto 581 and reduce (296)
	.		reduce (88)

state 530
	(130) class_const : identifier . '=' expr 

	'='		shift 53
	.		error

state 531
	(265) class_statement : method_modifiers T_CONST class_const_list . ';' 

	';'		shift 580 and reduce (265)
	.		error

state 532
	(127) class_const_list : non_empty_class_const_list . no_comma 
	(128) non_empty_class_const_list : non_empty_class_const_list . ',' class_const 
	(87) no_comma : . 

	','		shift 9
	no_comma	goto 583 and reduce (127)
	.		reduce (87)

state 533
	(222) new_elseif : T_ELSEIF . '(' expr ')' ':' inner_statement_list 

	'('		shift 120
	.		error

state 534
	(226) new_else_single : T_ELSE . ':' inner_statement_list 

	':'		shift 599
	.		error

state 535
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single . T_ENDIF ';' 

	T_ENDIF		shift 498
	.		error

state 536
	(197) foreach_statement : ':' inner_statement_list . T_ENDFOREACH ';' 

	T_ENDFOREACH	shift 522
	.		error

state 537
	(179) class_declaration_statement : class_entry_type T_STRING extends_from . implements_list '{' class_statement_list '}' 
	(189) implements_list : . 

	T_IMPLEMENTS	shift 265
	implements_list	goto 407
	.		reduce (189)

state 538
	(195) for_statement : ':' inner_statement_list . T_ENDFOR ';' 

	T_ENDFOR	shift 367
	.		error

state 539
	(299) expr_list : non_empty_expr_list . no_comma 
	(300) non_empty_expr_list : non_empty_expr_list . ',' expr 
	(87) no_comma : . 

	','		shift 45
	no_comma	goto 689 and reduce (299)
	.		reduce (87)

state 540
	(388) new_expr : T_NEW class_name_reference . ctor_arguments 
	(414) ctor_arguments : . 

	'('		shift 20
	argument_list	goto 692 and reduce (415)
	ctor_arguments	goto 691 and reduce (388)
	.		reduce (414)

state 541
	(157) non_empty_statement : T_TRY '{' inner_statement_list . '}' catches optional_finally 

	'}'		shift 796
	.		error

state 542
	(142) non_empty_statement : T_DO statement . T_WHILE '(' expr ')' ';' 

	T_WHILE		shift 521
	.		error

state 543
	(123) constant_declaration_list : non_empty_constant_declaration_list . no_comma 
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list . ',' constant_declaration 
	(87) no_comma : . 

	','		shift 503
	no_comma	goto 669 and reduce (123)
	.		reduce (87)

state 544
	(156) non_empty_statement : T_DECLARE '(' . declare_list ')' declare_statement 

	T_STRING	shift 516
	declare_list	goto 514
	non_empty_declare_list	goto 513
	declare_list_element	goto 687 and reduce (202)
	.		error

state 545
	(126) constant_declaration : T_STRING . '=' expr 

	'='		shift 118
	.		error

state 546
	(129) non_empty_class_const_list : class_const . 

	.		reduce (129)

state 547
	(167) name_union : name_union '|' name . 

	.		reduce (167)

state 548
	(205) switch_case_list : '{' case_list '}' . 

	.		reduce (205)

state 549
	(191) class_name_list : non_empty_class_name_list no_comma . 

	.		reduce (191)

state 550
	(286) non_empty_member_modifiers : member_modifier . 

	.		reduce (286)

state 551
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' . 

	.		reduce (140)

state 552
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 

	.		reduce (106)

state 553
	(195) for_statement : ':' . inner_statement_list T_ENDFOR ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 538
	.		reduce (132)

state 554
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 

	.		reduce (105)

state 555
	(226) new_else_single : T_ELSE ':' inner_statement_list . 

	.		reduce (226)

state 556
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' lexical_var . 

	.		reduce (394)

state 557
	(210) case_list : case_list case . 

	.		reduce (210)

state 558
	(194) for_statement : statement . 

	.		reduce (194)

state 559
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' . 

	.		reduce (501)

state 560
	(166) name_union : name . 

	.		reduce (166)

state 561
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}' . 

	.		reduce (181)

state 562
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}' . 

	.		reduce (179)

state 563
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list '}' . 

	.		reduce (387)

state 564
	(122) inline_use_declaration : use_type unprefixed_use_declaration . 

	.		reduce (122)

state 565
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement . 

	.		reduce (143)

state 566
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 473
	.		reduce (132)

state 567
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' inner_statement_list . 

	.		reduce (222)

state 568
	(480) list_expr_element : expr T_DOUBLE_ARROW list_expr . 

	.		reduce (480)

state 569
	(393) non_empty_lexical_var_list : lexical_var . 

	.		reduce (393)

state 570
	(475) list_expr_elements : list_expr_elements ',' list_expr_element . 

	.		reduce (475)

state 571
	(110) non_empty_unprefixed_use_declarations : unprefixed_use_declaration . 

	.		reduce (110)

state 572
	(505) encaps_var_offset : '-' T_NUM_STRING . 

	.		reduce (505)

state 573
	(262) class_statement_list : class_statement_list class_statement . 

	.		reduce (262)

state 574
	(283) variable_modifiers : T_VAR . 

	.		reduce (283)

state 575
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' . 

	.		reduce (168)

state 576
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 

	.		reduce (107)

state 577
	(269) trait_adaptations : '{' . trait_adaptation_list '}' 
	(270) trait_adaptation_list : . 

	trait_adaptation_list	goto 4
	.		reduce (270)

state 578
	(268) trait_adaptations : ';' . 

	.		reduce (268)

state 579
	(264) class_statement : variable_modifiers property_declaration_list ';' . 

	.		reduce (264)

state 580
	(265) class_statement : method_modifiers T_CONST class_const_list ';' . 

	.		reduce (265)

state 581
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' property_declaration . 

	.		reduce (296)

state 582
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations optional_comma . 

	.		reduce (108)

state 583
	(127) class_const_list : non_empty_class_const_list no_comma . 

	.		reduce (127)

state 584
	(128) non_empty_class_const_list : non_empty_class_const_list ',' class_const . 

	.		reduce (128)

state 585
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 

	.		reduce (104)

state 586
	(294) property_declaration_list : non_empty_property_declaration_list no_comma . 

	.		reduce (294)

state 587
	(153) non_empty_statement : T_UNSET '(' variables_list ')' semi . 

	.		reduce (153)

state 588
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' inline_use_declaration . 

	.		reduce (115)

state 589
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' unprefixed_use_declaration . 

	.		reduce (109)

state 590
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}' . 

	.		reduce (96)

state 591
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body . 

	.		reduce (266)

state 592
	(291) member_modifier : T_STATIC . 

	.		reduce (291)

state 593
	(292) member_modifier : T_ABSTRACT . 

	.		reduce (292)

state 594
	(293) member_modifier : T_FINAL . 

	.		reduce (293)

state 595
	(281) method_body : '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 430
	.		reduce (132)

state 596
	(170) optional_finally : T_FINALLY '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 517
	.		reduce (132)

state 597
	(290) member_modifier : T_PRIVATE . 

	.		reduce (290)

state 598
	(280) method_body : ';' . 

	.		reduce (280)

state 599
	(226) new_else_single : T_ELSE ':' . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 555 and reduce (226)
	.		reduce (132)

state 600
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier ';' . 

	.		reduce (273)

state 601
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 

	.		reduce (385)

state 602
	(289) member_modifier : T_PROTECTED . 

	.		reduce (289)

state 603
	(288) member_modifier : T_PUBLIC . 

	.		reduce (288)

state 604
	(497) encaps_var : encaps_base_var '[' encaps_var_offset ']' . 

	.		reduce (497)

state 605
	(271) trait_adaptation_list : trait_adaptation_list trait_adaptation . 

	.		reduce (271)

state 606
	(221) new_elseif_list : new_elseif_list new_elseif . 

	.		reduce (221)

state 607
	(234) non_empty_parameter_list : non_empty_parameter_list ',' parameter . 

	.		reduce (234)

state 608
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM identifier . 

	.		reduce (277)

state 609
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 

	.		reduce (386)

state 610
	(206) switch_case_list : '{' ';' . case_list '}' 
	(209) case_list : . 

	case_list	goto 283
	.		reduce (209)

state 611
	(212) case : T_DEFAULT case_separator inner_statement_list . 

	.		reduce (212)

state 612
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list else_single . 

	.		reduce (139)

state 613
	(267) class_statement : T_USE class_name_list trait_adaptations . 

	.		reduce (267)

state 614
	(395) lexical_var : optional_ref T_VARIABLE . 

	.		reduce (395)

state 615
	(391) lexical_vars : T_USE '(' lexical_var_list ')' . 

	.		reduce (391)

state 616
	(392) lexical_var_list : non_empty_lexical_var_list no_comma . 

	.		reduce (392)

state 617
	(216) while_statement : ':' inner_statement_list T_ENDWHILE ';' . 

	.		reduce (216)

state 618
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 450
	.		reduce (132)

state 619
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' . 

	.		reduce (178)

state 620
	(170) optional_finally : T_FINALLY '{' inner_statement_list '}' . 

	.		reduce (170)

state 621
	(218) elseif_list : elseif_list elseif . 

	.		reduce (218)

state 622
	(211) case : T_CASE expr case_separator inner_statement_list . 

	.		reduce (211)

state 623
	(219) elseif : T_ELSEIF '(' expr ')' statement . 

	.		reduce (219)

state 624
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH ';' . 

	.		reduce (197)

state 625
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}' . 

	.		reduce (180)

state 626
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 347
	.		reduce (132)

state 627
	(193) non_empty_class_name_list : non_empty_class_name_list ',' class_name . 

	.		reduce (193)

state 628
	(287) non_empty_member_modifiers : non_empty_member_modifiers member_modifier . 

	.		reduce (287)

state 629
	(177) optional_ellipsis : T_ELLIPSIS . 

	.		reduce (177)

state 630
	(165) catches : catches catch . 

	.		reduce (165)

state 631
	(269) trait_adaptations : '{' trait_adaptation_list '}' . 

	.		reduce (269)

state 632
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE ';' . 

	.		reduce (200)

state 633
	(295) non_empty_property_declaration_list : property_declaration . 

	.		reduce (295)

state 634
	(279) trait_method_reference : identifier . 

	.		reduce (279)

state 635
	(208) switch_case_list : ':' ';' . case_list T_ENDSWITCH ';' 
	(209) case_list : . 

	case_list	goto 284
	.		reduce (209)

state 636
	(211) case : T_CASE expr case_separator . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 622 and reduce (211)
	.		reduce (132)

state 637
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches optional_finally . 

	.		reduce (157)

state 638
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list . new_elseif_list new_else_single T_ENDIF ';' 
	(220) new_elseif_list : . 

	new_elseif_list	goto 302
	.		reduce (220)

state 639
	(249) non_empty_argument_list : non_empty_argument_list ',' argument . 

	.		reduce (249)

state 640
	(247) argument_list : '(' non_empty_argument_list no_comma ')' . 

	.		reduce (247)

state 641
	(196) foreach_statement : statement . 

	.		reduce (196)

state 642
	(190) implements_list : T_IMPLEMENTS class_name_list . 

	.		reduce (190)

state 643
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 230
	.		reduce (263)

state 644
	(197) foreach_statement : ':' . inner_statement_list T_ENDFOREACH ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 536
	.		reduce (132)

state 645
	(114) inline_use_declarations : non_empty_inline_use_declarations optional_comma . 

	.		reduce (114)

state 646
	(468) member_name : '{' expr '}' . 

	.		reduce (468)

state 647
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 526
	.		reduce (132)

state 648
	(471) property_name : '{' expr '}' . 

	.		reduce (471)

state 649
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 229
	.		reduce (263)

state 650
	(274) trait_adaptation : trait_method_reference T_AS member_modifier ';' . 

	.		reduce (274)

state 651
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers ';' . 

	.		reduce (276)

state 652
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH ';' . 

	.		reduce (208)

state 653
	(245) optional_return_type : ':' type_expr . 

	.		reduce (245)

state 654
	(275) trait_adaptation : trait_method_reference T_AS T_STRING ';' . 

	.		reduce (275)

state 655
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list ';' . 

	.		reduce (272)

state 656
	(206) switch_case_list : '{' ';' case_list '}' . 

	.		reduce (206)

state 657
	(212) case : T_DEFAULT case_separator . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 611 and reduce (212)
	.		reduce (132)

state 658
	(195) for_statement : ':' inner_statement_list T_ENDFOR ';' . 

	.		reduce (195)

state 659
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 567 and reduce (222)
	.		reduce (132)

state 660
	(214) case_separator : ';' . 

	.		reduce (214)

state 661
	(224) else_single : T_ELSE statement . 

	.		reduce (224)

state 662
	(213) case_separator : ':' . 

	.		reduce (213)

state 663
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement . 

	.		reduce (155)

state 664
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' ';' . 

	.		reduce (142)

state 665
	(207) switch_case_list : ':' case_list T_ENDSWITCH ';' . 

	.		reduce (207)

state 666
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement . 

	.		reduce (154)

state 667
	(16) reserved_non_modifiers : T_EXIT . 

	.		reduce (16)

state 668
	(116) non_empty_inline_use_declarations : inline_use_declaration . 

	.		reduce (116)

state 669
	(123) constant_declaration_list : non_empty_constant_declaration_list no_comma . 

	.		reduce (123)

state 670
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC . 

	.		reduce (435)

state 671
	(476) list_expr_elements : list_expr_element . 

	.		reduce (476)

state 672
	(181) class_declaration_statement : T_TRAIT T_STRING '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 228
	.		reduce (263)

state 673
	(257) static_var_list : non_empty_static_var_list no_comma . 

	.		reduce (257)

state 674
	(149) non_empty_statement : T_STATIC static_var_list semi . 

	.		reduce (149)

state 675
	(253) global_var_list : non_empty_global_var_list no_comma . 

	.		reduce (253)

state 676
	(148) non_empty_statement : T_GLOBAL global_var_list semi . 

	.		reduce (148)

state 677
	(111) use_declarations : non_empty_use_declarations no_comma . 

	.		reduce (111)

state 678
	(98) top_statement : T_USE use_declarations semi . 

	.		reduce (98)

state 679
	(120) use_declaration : T_NS_SEPARATOR unprefixed_use_declaration . 

	.		reduce (120)

state 680
	(158) non_empty_statement : T_THROW expr semi . 

	.		reduce (158)

state 681
	(147) non_empty_statement : T_RETURN optional_expr semi . 

	.		reduce (147)

state 682
	(101) top_statement : T_CONST constant_declaration_list semi . 

	.		reduce (101)

state 683
	(490) encaps_list : encaps_list encaps_var . 

	.		reduce (490)

state 684
	(159) non_empty_statement : T_GOTO T_STRING semi . 

	.		reduce (159)

state 685
	(146) non_empty_statement : T_CONTINUE optional_expr semi . 

	.		reduce (146)

state 686
	(145) non_empty_statement : T_BREAK optional_expr semi . 

	.		reduce (145)

state 687
	(202) non_empty_declare_list : declare_list_element . 

	.		reduce (202)

state 688
	(303) for_expr : expr_list . 

	.		reduce (303)

state 689
	(299) expr_list : non_empty_expr_list no_comma . 

	.		reduce (299)

state 690
	(150) non_empty_statement : T_ECHO expr_list semi . 

	.		reduce (150)

state 691
	(388) new_expr : T_NEW class_name_reference ctor_arguments . 

	.		reduce (388)

state 692
	(415) ctor_arguments : argument_list . 

	.		reduce (415)

state 693
	(419) array_short_syntax : '[' array_pair_list ']' . 

	.		reduce (419)

state 694
	(397) function_call : callable_expr argument_list . 

	.		reduce (397)

state 695
	(396) function_call : name argument_list . 

	.		reduce (396)

state 696
	(325) expr : variable T_DEC . 

	.		reduce (325)

state 697
	(438) scalar : T_START_HEREDOC encaps_list T_END_HEREDOC . 

	.		reduce (438)

state 698
	(491) encaps_list : encaps_list encaps_string_part . 

	.		reduce (491)

state 699
	(152) non_empty_statement : expr semi . 

	.		reduce (152)

state 700
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM error . 

	.		reduce (418)

state 701
	(15) reserved_non_modifiers : T_CLONE . 

	.		reduce (15)

state 702
	(14) reserved_non_modifiers : T_NEW . 

	.		reduce (14)

state 703
	(13) reserved_non_modifiers : T_INSTANCEOF . 

	.		reduce (13)

state 704
	(49) reserved_non_modifiers : T_YIELD . 

	.		reduce (49)

state 705
	(48) reserved_non_modifiers : T_PRINT . 

	.		reduce (48)

state 706
	(12) reserved_non_modifiers : T_LOGICAL_AND . 

	.		reduce (12)

state 707
	(11) reserved_non_modifiers : T_LOGICAL_XOR . 

	.		reduce (11)

state 708
	(10) reserved_non_modifiers : T_LOGICAL_OR . 

	.		reduce (10)

state 709
	(9) reserved_non_modifiers : T_REQUIRE_ONCE . 

	.		reduce (9)

state 710
	(8) reserved_non_modifiers : T_REQUIRE . 

	.		reduce (8)

state 711
	(7) reserved_non_modifiers : T_EVAL . 

	.		reduce (7)

state 712
	(6) reserved_non_modifiers : T_INCLUDE_ONCE . 

	.		reduce (6)

state 713
	(5) reserved_non_modifiers : T_INCLUDE . 

	.		reduce (5)

state 714
	(248) non_empty_argument_list : argument . 

	.		reduce (248)

state 715
	(493) encaps_list : encaps_string_part encaps_var . 

	.		reduce (493)

state 716
	(246) argument_list : '(' ')' . 

	.		reduce (246)

state 717
	(357) expr : expr T_INSTANCEOF class_name_reference . 

	.		reduce (357)

state 718
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING . 

	.		reduce (83)

state 719
	(437) scalar : '"' encaps_list '"' . 

	.		reduce (437)

state 720
	(379) expr : '`' backticks_expr '`' . 

	.		reduce (379)

state 721
	(138) non_empty_statement : '{' inner_statement_list '}' . 

	.		reduce (138)

state 722
	(131) inner_statement_list_ex : inner_statement_list_ex inner_statement . 

	.		reduce (131)

state 723
	(136) inner_statement : class_declaration_statement . 

	.		reduce (136)

state 724
	(135) inner_statement : function_declaration_statement . 

	.		reduce (135)

state 725
	(134) inner_statement : statement . 

	.		reduce (134)

state 726
	(137) inner_statement : T_HALT_COMPILER . 

	.		reduce (137)

state 727
	(95) top_statement : T_NAMESPACE namespace_name semi . 

	.		reduce (95)

state 728
	(96) top_statement : T_NAMESPACE namespace_name '{' . top_statement_list '}' 
	(3) top_statement_list_ex : . 

	top_statement_list	goto 462
	top_statement_list_ex	goto 2
	.		reduce (3)

state 729
	(323) expr : variable T_INC . 

	.		reduce (323)

state 730
	(100) top_statement : group_use_declaration semi . 

	.		reduce (100)

state 731
	(17) reserved_non_modifiers : T_IF . 

	.		reduce (17)

state 732
	(432) scalar : T_NS_C . 

	.		reduce (432)

state 733
	(451) callable_variable : function_call . 

	.		reduce (451)

state 734
	(378) expr : scalar . 

	.		reduce (378)

state 735
	(309) expr : new_expr . 

	.		reduce (309)

state 736
	(447) callable_variable : simple_variable . 

	.		reduce (447)

state 737
	(407) class_name_or_var : class_name . 

	.		reduce (407)

state 738
	(162) statement : non_empty_statement . 

	.		reduce (162)

state 739
	(93) top_statement : class_declaration_statement . 

	.		reduce (93)

state 740
	(92) top_statement : function_declaration_statement . 

	.		reduce (92)

state 741
	(91) top_statement : statement . 

	.		reduce (91)

state 742
	(2) top_statement_list_ex : top_statement_list_ex top_statement . 

	.		reduce (2)

state 743
	(138) non_empty_statement : '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 477
	.		reduce (132)

state 744
	(163) statement : ';' . 

	.		reduce (163)

state 745
	(427) scalar : T_DIR . 

	.		reduce (427)

state 746
	(426) scalar : T_FILE . 

	.		reduce (426)

state 747
	(82) namespace_name_parts : T_STRING . 

	.		reduce (82)

state 748
	(425) scalar : T_LINE . 

	.		reduce (425)

state 749
	(431) scalar : T_FUNC_C . 

	.		reduce (431)

state 750
	(430) scalar : T_METHOD_C . 

	.		reduce (430)

state 751
	(429) scalar : T_TRAIT_C . 

	.		reduce (429)

state 752
	(428) scalar : T_CLASS_C . 

	.		reduce (428)

state 753
	(182) class_entry_type : T_CLASS . 

	.		reduce (182)

state 754
	(94) top_statement : T_HALT_COMPILER . 

	.		reduce (94)

state 755
	(422) dereferencable_scalar : T_CONSTANT_ENCAPSED_STRING . 

	.		reduce (422)

state 756
	(151) non_empty_statement : T_INLINE_HTML . 

	.		reduce (151)

state 757
	(456) simple_variable : T_VARIABLE . 

	.		reduce (456)

state 758
	(424) scalar : T_DNUMBER . 

	.		reduce (424)

state 759
	(423) scalar : T_LNUMBER . 

	.		reduce (423)

state 760
	(161) non_empty_statement : error . 

	.		reduce (161)

state 761
	(454) variable : static_member . 

	.		reduce (454)

state 762
	(399) class_name : T_STATIC . 

	.		reduce (399)

state 763
	(85) semi : ';' . 

	.		reduce (85)

state 764
	(113) non_empty_use_declarations : use_declaration . 

	.		reduce (113)

state 765
	(86) semi : error . 

	.		reduce (86)

state 766
	(458) simple_variable : '$' simple_variable . 

	.		reduce (458)

state 767
	(459) simple_variable : '$' error . 

	.		reduce (459)

state 768
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	.		reduce (494)

state 769
	(97) top_statement : T_NAMESPACE '{' . top_statement_list '}' 
	(3) top_statement_list_ex : . 

	top_statement_list	goto 512
	top_statement_list_ex	goto 2
	.		reduce (3)

state 770
	(492) encaps_list : encaps_var . 

	.		reduce (492)

state 771
	(436) scalar : T_START_HEREDOC T_END_HEREDOC . 

	.		reduce (436)

state 772
	(495) encaps_base_var : T_VARIABLE . 

	.		reduce (495)

state 773
	(184) class_entry_type : T_FINAL T_CLASS . 

	.		reduce (184)

state 774
	(183) class_entry_type : T_ABSTRACT T_CLASS . 

	.		reduce (183)

state 775
	(259) non_empty_static_var_list : static_var . 

	.		reduce (259)

state 776
	(256) global_var : simple_variable . 

	.		reduce (256)

state 777
	(255) non_empty_global_var_list : global_var . 

	.		reduce (255)

state 778
	(119) use_declaration : unprefixed_use_declaration . 

	.		reduce (119)

state 779
	(421) dereferencable_scalar : array_short_syntax . 

	.		reduce (421)

state 780
	(103) use_type : T_CONST . 

	.		reduce (103)

state 781
	(102) use_type : T_FUNCTION . 

	.		reduce (102)

state 782
	(157) non_empty_statement : T_TRY '{' . inner_statement_list '}' catches optional_finally 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 541
	.		reduce (132)

state 783
	(125) non_empty_constant_declaration_list : constant_declaration . 

	.		reduce (125)

state 784
	(175) optional_ref : '&' . 

	.		reduce (175)

state 785
	(160) non_empty_statement : T_STRING ':' . 

	.		reduce (160)

state 786
	(376) expr : T_EXIT exit_expr . 

	.		reduce (376)

state 787
	(310) expr : T_CLONE expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	.		reduce (310)

state 788
	(389) new_expr : T_NEW anonymous_class . 

	.		reduce (389)

state 789
	(461) new_variable : simple_variable . 

	.		reduce (461)

state 790
	(400) class_name : name . 

	.		reduce (400)

state 791
	(406) class_name_reference : error . 

	.		reduce (406)

state 792
	(484) inner_array_pair_list : array_pair . 

	.		reduce (484)

state 793
	(1) start : top_statement_list . 

	.		reduce (1)

state 794
	(18) reserved_non_modifiers : T_ELSEIF . 

	.		reduce (18)

state 795
	(121) inline_use_declaration : unprefixed_use_declaration . 

	.		reduce (121)

state 796
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' . catches optional_finally 
	(164) catches : . 

	catches		goto 303
	.		reduce (164)

state 797
	(474) list_expr : T_LIST '(' list_expr_elements ')' . 

	.		reduce (474)

state 798
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 231
	.		reduce (263)

state 799
	(188) interface_extends_list : T_EXTENDS class_name_list . 

	.		reduce (188)

state 800
	(192) non_empty_class_name_list : class_name . 

	.		reduce (192)

state 801
	(363) expr : T_EMPTY '(' expr ')' . 

	.		reduce (363)

state 802
	(362) expr : T_ISSET '(' variables_list ')' . 

	.		reduce (362)

state 803
	(171) variables_list : non_empty_variables_list no_comma . 

	.		reduce (171)

state 804
	(258) non_empty_static_var_list : non_empty_static_var_list ',' static_var . 

	.		reduce (258)

state 805
	(254) non_empty_global_var_list : non_empty_global_var_list ',' global_var . 

	.		reduce (254)

state 806
	(112) non_empty_use_declarations : non_empty_use_declarations ',' use_declaration . 

	.		reduce (112)

state 807
	(99) top_statement : T_USE use_type use_declarations semi . 

	.		reduce (99)

state 808
	(118) unprefixed_use_declaration : namespace_name T_AS T_STRING . 

	.		reduce (118)

state 809
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' constant_declaration . 

	.		reduce (124)

state 810
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' . 

	.		reduce (500)

state 811
	(237) type_expr : type . 

	.		reduce (237)

state 812
	(243) optional_param_type : type_expr . 

	.		reduce (243)

state 813
	(233) non_empty_parameter_list : parameter . 

	.		reduce (233)

state 814
	(239) type : name . 

	.		reduce (239)

state 815
	(241) type : T_CALLABLE . 

	.		reduce (241)

state 816
	(240) type : T_ARRAY . 

	.		reduce (240)

state 817
	(201) declare_list : non_empty_declare_list no_comma . 

	.		reduce (201)

state 818
	(410) exit_expr : '(' optional_expr ')' . 

	.		reduce (410)

state 819
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable . 

	.		reduce (466)

state 820
	(464) new_variable : new_variable T_OBJECT_OPERATOR property_name . 

	.		reduce (464)

state 821
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable . 

	.		reduce (465)

state 822
	(483) inner_array_pair_list : inner_array_pair_list ',' array_pair . 

	.		reduce (483)

state 823
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(383) expr : T_YIELD expr T_DOUBLE_ARROW expr . 

	.		reduce (383)

state 824
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list ')' . 

	.		reduce (420)

state 825
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}' . 

	.		reduce (499)

state 826
	(472) property_name : simple_variable . 

	.		reduce (472)

state 827
	(140) non_empty_statement : T_IF '(' expr ')' ':' . inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 638
	.		reduce (132)

state 828
	(231) parameter_list : non_empty_parameter_list no_comma . 

	.		reduce (231)

state 829
	(238) type_expr : '?' type . 

	.		reduce (238)

state 830
	(144) non_empty_statement : T_SWITCH '(' expr ')' switch_case_list . 

	.		reduce (144)

state 831
	(203) non_empty_declare_list : non_empty_declare_list ',' declare_list_element . 

	.		reduce (203)

state 832
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' declare_statement . 

	.		reduce (156)

state 833
	(198) declare_statement : non_empty_statement . 

	.		reduce (198)

state 834
	(199) declare_statement : ';' . 

	.		reduce (199)

state 835
	(200) declare_statement : ':' . inner_statement_list T_ENDDECLARE ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 442
	.		reduce (132)

state 836
	(229) foreach_variable : list_expr . 

	.		reduce (229)

state 837
	(141) non_empty_statement : T_WHILE '(' expr ')' while_statement . 

	.		reduce (141)

state 838
	(215) while_statement : statement . 

	.		reduce (215)

state 839
	(216) while_statement : ':' . inner_statement_list T_ENDWHILE ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 452
	.		reduce (132)

state 840
	(139) non_empty_statement : T_IF '(' expr ')' statement . elseif_list else_single 
	(217) elseif_list : . 

	elseif_list	goto 308
	.		reduce (217)

state 841
	(463) new_variable : new_variable '{' expr '}' . 

	.		reduce (463)

state 842
	(502) encaps_var : T_CURLY_OPEN variable '}' . 

	.		reduce (502)

state 843
	(462) new_variable : new_variable '[' optional_expr ']' . 

	.		reduce (462)

state 844
	(449) callable_variable : constant '[' optional_expr ']' . 

	.		reduce (449)

state 845
	(450) callable_variable : dereferencable '{' expr '}' . 

	.		reduce (450)

state 846
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name argument_list . 

	.		reduce (452)

state 847
	(448) callable_variable : dereferencable '[' optional_expr ']' . 

	.		reduce (448)

state 848
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name argument_list . 

	.		reduce (398)

state 849
	(186) extends_from : T_EXTENDS class_name . 

	.		reduce (186)

state 850
	(457) simple_variable : '$' '{' expr '}' . 

	.		reduce (457)

state 851
	(97) top_statement : T_NAMESPACE '{' top_statement_list '}' . 

	.		reduce (97)

state 852
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR T_STRING . 

	.		reduce (498)

state 853
	(504) encaps_var_offset : T_NUM_STRING . 

	.		reduce (504)

state 854
	(506) encaps_var_offset : T_VARIABLE . 

	.		reduce (506)

state 855
	(503) encaps_var_offset : T_STRING . 

	.		reduce (503)

state 856
	(366) expr : T_EVAL '(' expr ')' . 

	.		reduce (366)

state 857
	(470) property_name : T_STRING . 

	.		reduce (470)

state 858
	(19) reserved_non_modifiers : T_ELSE . 

	.		reduce (19)

state 859
	(52) reserved_non_modifiers : T_ENDSWITCH . 

	.		reduce (52)

state 860
	(36) reserved_non_modifiers : T_USE . 

	.		reduce (36)

state 861
	(35) reserved_non_modifiers : T_THROW . 

	.		reduce (35)

state 862
	(34) reserved_non_modifiers : T_FINALLY . 

	.		reduce (34)

state 863
	(33) reserved_non_modifiers : T_CATCH . 

	.		reduce (33)

state 864
	(32) reserved_non_modifiers : T_TRY . 

	.		reduce (32)

state 865
	(47) reserved_non_modifiers : T_RETURN . 

	.		reduce (47)

state 866
	(46) reserved_non_modifiers : T_CONST . 

	.		reduce (46)

state 867
	(45) reserved_non_modifiers : T_FUNCTION . 

	.		reduce (45)

state 868
	(44) reserved_non_modifiers : T_GOTO . 

	.		reduce (44)

state 869
	(43) reserved_non_modifiers : T_CONTINUE . 

	.		reduce (43)

state 870
	(55) reserved_non_modifiers : T_BREAK . 

	.		reduce (55)

state 871
	(54) reserved_non_modifiers : T_DEFAULT . 

	.		reduce (54)

state 872
	(53) reserved_non_modifiers : T_CASE . 

	.		reduce (53)

state 873
	(51) reserved_non_modifiers : T_SWITCH . 

	.		reduce (51)

state 874
	(38) reserved_non_modifiers : T_GLOBAL . 

	.		reduce (38)

state 875
	(31) reserved_non_modifiers : T_AS . 

	.		reduce (31)

state 876
	(30) reserved_non_modifiers : T_ENDDECLARE . 

	.		reduce (30)

state 877
	(29) reserved_non_modifiers : T_DECLARE . 

	.		reduce (29)

state 878
	(28) reserved_non_modifiers : T_ENDFOREACH . 

	.		reduce (28)

state 879
	(27) reserved_non_modifiers : T_FOREACH . 

	.		reduce (27)

state 880
	(26) reserved_non_modifiers : T_ENDFOR . 

	.		reduce (26)

state 881
	(25) reserved_non_modifiers : T_FOR . 

	.		reduce (25)

state 882
	(24) reserved_non_modifiers : T_ENDWHILE . 

	.		reduce (24)

state 883
	(23) reserved_non_modifiers : T_WHILE . 

	.		reduce (23)

state 884
	(22) reserved_non_modifiers : T_DO . 

	.		reduce (22)

state 885
	(21) reserved_non_modifiers : T_ECHO . 

	.		reduce (21)

state 886
	(80) identifier : T_STRING . 

	.		reduce (80)

state 887
	(20) reserved_non_modifiers : T_ENDIF . 

	.		reduce (20)

state 888
	(37) reserved_non_modifiers : T_INSTEADOF . 

	.		reduce (37)

state 889
	(74) semi_reserved : T_STATIC . 

	.		reduce (74)

state 890
	(473) property_name : error . 

	.		reduce (473)

state 891
	(50) reserved_non_modifiers : T_LIST . 

	.		reduce (50)

state 892
	(81) identifier : semi_reserved . 

	.		reduce (81)

state 893
	(73) semi_reserved : reserved_non_modifiers . 

	.		reduce (73)

state 894
	(70) reserved_non_modifiers : T_DIR . 

	.		reduce (70)

state 895
	(71) reserved_non_modifiers : T_NS_C . 

	.		reduce (71)

state 896
	(60) reserved_non_modifiers : T_NAMESPACE . 

	.		reduce (60)

state 897
	(69) reserved_non_modifiers : T_FILE . 

	.		reduce (69)

state 898
	(68) reserved_non_modifiers : T_LINE . 

	.		reduce (68)

state 899
	(66) reserved_non_modifiers : T_FUNC_C . 

	.		reduce (66)

state 900
	(67) reserved_non_modifiers : T_METHOD_C . 

	.		reduce (67)

state 901
	(65) reserved_non_modifiers : T_TRAIT_C . 

	.		reduce (65)

state 902
	(64) reserved_non_modifiers : T_CLASS_C . 

	.		reduce (64)

state 903
	(57) reserved_non_modifiers : T_CALLABLE . 

	.		reduce (57)

state 904
	(56) reserved_non_modifiers : T_ARRAY . 

	.		reduce (56)

state 905
	(59) reserved_non_modifiers : T_IMPLEMENTS . 

	.		reduce (59)

state 906
	(75) semi_reserved : T_ABSTRACT . 

	.		reduce (75)

state 907
	(58) reserved_non_modifiers : T_EXTENDS . 

	.		reduce (58)

state 908
	(62) reserved_non_modifiers : T_INTERFACE . 

	.		reduce (62)

state 909
	(61) reserved_non_modifiers : T_TRAIT . 

	.		reduce (61)

state 910
	(63) reserved_non_modifiers : T_CLASS . 

	.		reduce (63)

state 911
	(72) reserved_non_modifiers : T_HALT_COMPILER . 

	.		reduce (72)

state 912
	(42) reserved_non_modifiers : T_EMPTY . 

	.		reduce (42)

state 913
	(41) reserved_non_modifiers : T_ISSET . 

	.		reduce (41)

state 914
	(40) reserved_non_modifiers : T_UNSET . 

	.		reduce (40)

state 915
	(39) reserved_non_modifiers : T_VAR . 

	.		reduce (39)

state 916
	(79) semi_reserved : T_PUBLIC . 

	.		reduce (79)

state 917
	(78) semi_reserved : T_PROTECTED . 

	.		reduce (78)

state 918
	(77) semi_reserved : T_PRIVATE . 

	.		reduce (77)

state 919
	(76) semi_reserved : T_FINAL . 

	.		reduce (76)

state 920
	(281) method_body : '{' inner_statement_list '}' . 

	.		reduce (281)

/home/ircmaxell/Workspace/PhpYacc/examples/10-php7/grammar.y: there are  5 shift/reduce and 82 reduce/reduce conflicts

Statistics for /home/ircmaxell/Workspace/PhpYacc/examples/10-php7/grammar.y:
	165 terminal symbols
	143 nonterminal symbols
	507 productions
	921 states
	920 non leaf states
	5 shift/reduce, 82 reduce/reduce conflicts
	1277 lookahead sets used
	13816+1049=14865 action entries
State=>class:

  0=>0     1=>288   2=>301   3=>286   4=>281   5=>284   6=>282   7=>283   8=>283   9=>283 
 10=>283  11=>292  12=>291  13=>293  14=>289  15=>290  16=>290  17=>287  18=>287  19=>287 
 20=>278  21=>277  22=>275  23=>274  24=>280  25=>275  26=>276  27=>275  28=>279  29=>273 
 30=>273  31=>273  32=>273  33=>273  34=>273  35=>273  36=>273  37=>273  38=>273  39=>273 
 40=>273  41=>273  42=>273  43=>273  44=>273  45=>273  46=>273  47=>273  48=>273  49=>273 
 50=>273  51=>273  52=>273  53=>273  54=>273  55=>273  56=>273  57=>273  58=>273  59=>273 
 60=>273  61=>273  62=>273  63=>273  64=>273  65=>273  66=>273  67=>273  68=>273  69=>273 
 70=>273  71=>273  72=>273  73=>273  74=>273  75=>273  76=>273  77=>273  78=>273  79=>273 
 80=>273  81=>273  82=>273  83=>273  84=>273  85=>273  86=>273  87=>273  88=>273  89=>273 
 90=>273  91=>273  92=>273  93=>273  94=>273  95=>273  96=>273  97=>273  98=>273  99=>273 
100=>273 101=>273 102=>273 103=>273 104=>273 105=>273 106=>273 107=>273 108=>273 109=>273 
110=>273 111=>273 112=>273 113=>273 114=>273 115=>273 116=>273 117=>273 118=>273 119=>273 
120=>273 121=>273 122=>273 123=>273 124=>273 125=>273 126=>273 127=>273 128=>273 129=>273 
130=>273 131=>273 132=>273 133=>247 134=>296 135=>296 136=>242 137=>246 138=>235 139=>231 
140=>234 141=>237 142=>244 143=>238 144=>228 145=>230 146=>233 147=>232 148=>229 149=>249 
150=>241 151=>245 152=>243 153=>236 154=>240 155=>248 156=>239 157=>227 158=>227 159=>227 
160=>227 161=>227 162=>227 163=>227 164=>227 165=>227 166=>227 167=>227 168=>227 169=>227 
170=>227 171=>227 172=>227 173=>226 174=>225 175=>223 176=>210 177=>210 178=>210 179=>210 
180=>210 181=>210 182=>210 183=>210 184=>210 185=>210 186=>210 187=>210 188=>210 189=>210 
190=>210 191=>210 192=>210 193=>210 194=>203 195=>203 196=>203 197=>202 198=>200 199=>199 
200=>196 201=>194 202=>194 203=>194 204=>194 205=>194 206=>214 207=>214 208=>195 209=>193 
210=>193 211=>193 212=>193 213=>197 214=>197 215=>182 216=>181 217=>181 218=>181 219=>181 
220=>181 221=>181 222=>181 223=>181 224=>181 225=>181 226=>181 227=>213 228=>117 229=>119 
230=>118 231=>120 232=>192 233=>192 234=>299 235=>212 236=>137 237=>212 238=>212 239=>212 
240=>298 241=>138 242=>211 243=>178 244=>177 245=>285 246=>150 247=>190 248=>300 249=>190 
250=>147 251=>190 252=>300 253=>149 254=>168 255=>179 256=>179 257=>179 258=>148 259=>183 
260=>146 261=>169 262=>169 263=>169 264=>169 265=>169 266=>171 267=>297 268=>169 269=>148 
270=>191 271=>250 272=>251 273=>127 274=>170 275=>125 276=>170 277=>145 278=>170 279=>295 
280=>165 281=>184 282=>167 283=>126 284=>128 285=>167 286=>253 287=>255 288=>254 289=>252 
290=>180 291=>224 292=>260 293=>294 294=>186 295=>164 296=>144 297=>201 298=>144 299=>144 
300=>161 301=>187 302=>176 303=>122 304=>123 305=>144 306=>142 307=>86  308=>175 309=>294 
310=>162 311=>159 312=>294 313=>205 314=>189 315=>189 316=>83  317=>294 318=>208 319=>189 
320=>189 321=>294 322=>294 323=>166 324=>294 325=>294 326=>294 327=>155 328=>294 329=>160 
330=>294 331=>294 332=>9   333=>29  334=>26  335=>27  336=>8   337=>10  338=>302 339=>28  
340=>6   341=>30  342=>172 343=>124 344=>185 345=>31  346=>5   347=>62  348=>188 349=>31  
350=>188 351=>4   352=>58  353=>188 354=>106 355=>71  356=>111 357=>188 358=>3   359=>51  
360=>139 361=>198 362=>185 363=>107 364=>31  365=>20  366=>207 367=>97  368=>156 369=>163 
370=>59  371=>218 372=>12  373=>55  374=>216 375=>70  376=>198 377=>75  378=>31  379=>72  
380=>258 381=>99  382=>2   383=>91  384=>188 385=>14  386=>89  387=>269 388=>49  389=>43  
390=>188 391=>188 392=>188 393=>56  394=>188 395=>198 396=>272 397=>84  398=>215 399=>188 
400=>121 401=>219 402=>204 403=>204 404=>13  405=>78  406=>157 407=>74  408=>198 409=>151 
410=>38  411=>53  412=>39  413=>40  414=>76  415=>41  416=>140 417=>81  418=>209 419=>115 
420=>42  421=>92  422=>88  423=>19  424=>17  425=>121 426=>37  427=>163 428=>100 429=>35  
430=>69  431=>163 432=>54  433=>22  434=>114 435=>52  436=>163 437=>204 438=>18  439=>262 
440=>152 441=>198 442=>131 443=>96  444=>95  445=>105 446=>101 447=>93  448=>204 449=>163 
450=>57  451=>45  452=>134 453=>98  454=>264 455=>87  456=>32  457=>36  458=>153 459=>136 
460=>1   461=>154 462=>60  463=>33  464=>46  465=>163 466=>188 467=>109 468=>106 469=>24  
470=>112 471=>48  472=>112 473=>61  474=>158 475=>16  476=>7   477=>65  478=>105 479=>105 
480=>163 481=>110 482=>21  483=>113 484=>77  485=>108 486=>94  487=>188 488=>271 489=>198 
490=>221 491=>116 492=>129 493=>267 494=>266 495=>143 496=>263 497=>104 498=>82  499=>163 
500=>102 501=>103 502=>265 503=>157 504=>50  505=>47  506=>73  507=>141 508=>15  509=>261 
510=>23  511=>79  512=>68  513=>268 514=>11  515=>218 516=>220 517=>64  518=>25  519=>80  
520=>67  521=>34  522=>90  523=>173 524=>105 525=>130 526=>63  527=>163 528=>257 529=>140 
530=>217 531=>85  532=>256 533=>44  534=>206 535=>174 536=>132 537=>111 538=>133 539=>259 
540=>31  541=>66  542=>135 543=>270 544=>156 545=>222 546=>0   547=>0   548=>0   549=>0   
550=>0   551=>0   552=>0   553=>0   554=>0   555=>0   556=>0   557=>0   558=>0   559=>0   
560=>0   561=>0   562=>0   563=>0   564=>0   565=>0   566=>0   567=>0   568=>0   569=>0   
570=>0   571=>0   572=>0   573=>0   574=>0   575=>0   576=>0   577=>0   578=>0   579=>0   
580=>0   581=>0   582=>0   583=>0   584=>0   585=>0   586=>0   587=>0   588=>0   589=>0   
590=>0   591=>0   592=>0   593=>0   594=>0   595=>0   596=>0   597=>0   598=>0   599=>0   
600=>0   601=>0   602=>0   603=>0   604=>0   605=>0   606=>0   607=>0   608=>0   609=>0   
610=>0   611=>0   612=>0   613=>0   614=>0   615=>0   616=>0   617=>0   618=>0   619=>0   
620=>0   621=>0   622=>0   623=>0   624=>0   625=>0   626=>0   627=>0   628=>0   629=>0   
630=>0   631=>0   632=>0   633=>0   634=>0   635=>0   636=>0   637=>0   638=>0   639=>0   
640=>0   641=>0   642=>0   643=>0   644=>0   645=>0   646=>0   647=>0   648=>0   649=>0   
650=>0   651=>0   652=>0   653=>0   654=>0   655=>0   656=>0   657=>0   658=>0   659=>0   
660=>0   661=>0   662=>0   663=>0   664=>0   665=>0   666=>0   667=>0   668=>0   669=>0   
670=>0   671=>0   672=>0   673=>0   674=>0   675=>0   676=>0   677=>0   678=>0   679=>0   
680=>0   681=>0   682=>0   683=>0   684=>0   685=>0   686=>0   687=>0   688=>0   689=>0   
690=>0   691=>0   692=>0   693=>0   694=>0   695=>0   696=>0   697=>0   698=>0   699=>0   
700=>0   701=>0   702=>0   703=>0   704=>0   705=>0   706=>0   707=>0   708=>0   709=>0   
710=>0   711=>0   712=>0   713=>0   714=>0   715=>0   716=>0   717=>0   718=>0   719=>0   
720=>0   721=>0   722=>0   723=>0   724=>0   725=>0   726=>0   727=>0   728=>0   729=>0   
730=>0   731=>0   732=>0   733=>0   734=>0   735=>0   736=>0   737=>0   738=>0   739=>0   
740=>0   741=>0   742=>0   743=>0   744=>0   745=>0   746=>0   747=>0   748=>0   749=>0   
750=>0   751=>0   752=>0   753=>0   754=>0   755=>0   756=>0   757=>0   758=>0   759=>0   
760=>0   761=>0   762=>0   763=>0   764=>0   765=>0   766=>0   767=>0   768=>0   769=>0   
770=>0   771=>0   772=>0   773=>0   774=>0   775=>0   776=>0   777=>0   778=>0   779=>0   
780=>0   781=>0   782=>0   783=>0   784=>0   785=>0   786=>0   787=>0   788=>0   789=>0   
790=>0   791=>0   792=>0   793=>0   794=>0   795=>0   796=>0   797=>0   798=>0   799=>0   
800=>0   801=>0   802=>0   803=>0   804=>0   805=>0   806=>0   807=>0   808=>0   809=>0   
810=>0   811=>0   812=>0   813=>0   814=>0   815=>0   816=>0   817=>0   818=>0   819=>0   
820=>0   821=>0   822=>0   823=>0   824=>0   825=>0   826=>0   827=>0   828=>0   829=>0   
830=>0   831=>0   832=>0   833=>0   834=>0   835=>0   836=>0   837=>0   838=>0   839=>0   
840=>0   841=>0   842=>0   843=>0   844=>0   845=>0   846=>0   847=>0   848=>0   849=>0   
850=>0   851=>0   852=>0   853=>0   854=>0   855=>0   856=>0   857=>0   858=>0   859=>0   
860=>0   861=>0   862=>0   863=>0   864=>0   865=>0   866=>0   867=>0   868=>0   869=>0   
870=>0   871=>0   872=>0   873=>0   874=>0   875=>0   876=>0   877=>0   878=>0   879=>0   
880=>0   881=>0   882=>0   883=>0   884=>0   885=>0   886=>0   887=>0   888=>0   889=>0   
890=>0   891=>0   892=>0   893=>0   894=>0   895=>0   896=>0   897=>0   898=>0   899=>0   
900=>0   901=>0   902=>0   903=>0   904=>0   905=>0   906=>0   907=>0   908=>0   909=>0   
910=>0   911=>0   912=>0   913=>0   914=>0   915=>0   916=>0   917=>0   918=>0   919=>0   

Terminal action:
     T\S   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302

   error
T_INCLUD  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  125 125 125 125 125 125 125 125 713 713 713 713  .  713 125 125 125 125 125 125 125  .   .   .   .   .   .   .  125  . 

  T_EVAL  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  429 429 429 429 429 429 429 429 711 711 711 711  .  711 429 429 429 429 429 429 429  .   .   .   .   .   .   .  429  . 








T_DOUBLE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   74 214  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   28 215  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 








T_AND_EQ  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   62  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 







T_COALES  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   55  .   .   .   .   .   .   55  .   .   .   .   .   .   .   .   .   .   .   .   55  .   55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  55  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   55  .   .   .   .   .   . 

T_BOOLEA  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   79  79  .   .   .   .   .   .   79  .   .   .   .   .   .   .   .   .   .   .   .   79  .   79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  79  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   79  .   .   .   .   .   . 
     '|





















     '~




T_STRING  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  102 102 102 102 102 102 102 102  .   .   .   .   .   .  102 102 102 102 102 102 102  .   .   .   .   .   .   .  102  . 
T_ARRAY_  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  103 103 103 103 103 103 103 103  .   .   .   .   .   .  103 103 103 103 103 103 103  .   .   .   .   .   .   .  103  . 







 T_CLONE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  107 107 107 107 107 107 107 107 701 701 701 701  .  701 107 107 107 107 107 107 107  .   .   .   .   .   .   .  107  . 







T_STRING  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  328 472 483 484 504 516 545 718 718 718 718 718 747 747 747 747 747 747 747 747 747 808 852  .   .   .   .   .   .   .  747 747  .   .   .   .   .   .   .   .  855  .   .   .   .   .  747  .   .   .   .   .   .   .   .   .   .   .   .   .  747 747 747  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  747 747 747 747 747 747 747 747 241 444 886 886  .  886 418 418 418 418 418 418 418  .   .   .   .  747 747 857 418  . 





























T_FINALL  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  355  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  862 862 862 862  .  862  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 

   T_USE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  268 268 268 268 435  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  860 860 860 860  .  860  .   .   .   .   .   .   .   .   .   .   .   .   .   .  266  . 






T_PROTEC  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  602 602 602 602  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  602  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  917 602 917 917  .  917  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 


















T_FUNC_C  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  749 749 749 749 749 749 749 749 899 899 899 899  .  899 749 749 749 749 749 749 749  .   .   .   .   .   .   .  749  . 










T_NS_SEP  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  300 310 311 329 474 480  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  -82  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  449 480 499 436 436 436  .  527  .   .   .   .   .   .   .   .   .  436 436  .   .   .   .   .   .   .   .   .   .   .   .   .   .  436  .   .   .   .   .   .   .   .   .   .   .   .   .  436 436 436  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  436 436 436 436 436 436 436 436 436  .   .   .   .   .  436 436 436 436 436 436 436  .   .   .   .  436 436  .  436  . 

     ';'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   97 116 551 578 579 580 598 600 610 617 624 632 635 651 652 654 655 658 664 665  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  660  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  660  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  650 -88  .  744 744 744 744 744 834 744 763 763 763  .   .   .   .  744  . 
     '{'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  566 596 618 626 643 647 649 672 782 798  .   .   .  577  .   .  595  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  -82  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  274 278 369 427  .   .  769  .   .   .   .   .   .   .   .   .   .   . -443-442-441  .   .   .   43  72  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  422  .   .   .   .   .   .   .   . -441  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  -88  38 743 743 743 743 743 743 743  .  728  .   34  .   .   36 743  . 
     '}'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  552 554 559 575 576 585 590 601 609 619 620 721 796 842 851 920  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  561 562 563 625  .   .   .   .  548 656  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  810  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  646 648 825 841 845 850  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  631  .   .   .   .   .   . -133  .   .   .   .   .   .   .   .   .   .   .   .   -4  . 
     '('  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -469-467-446-445-444  20  22  29  32  35  39  41  47  49  50  51  52  98 120 220 221 235 237 238 239 282 376 544  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  237  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -446-445  .   20  37  37  .   .   .   .   .   .   .   .   .   .   .   .   .   .   37  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  114 114 114 114 114 114 114 114  .   .   .   .   .   .  114 114 114 114 114 114 114  .   .   .   .   .   .   .  114  . 
     ')'  .   .   .   .   .   .   .   . -230-228-227  11  14  15  16 309 379 400 425 437 448 615 640 802 818 824  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -232  .   .   .   .   .   .   .   .   .   .   . -227  .   .   .   .   12  13  19 243 313 333 366 453 801 856  .   .   .   .   .   .   .   .   .   .   . -488-487-479-251-173-172  .   .   .   .  797  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  716  .   .   .   .   .   .  -88  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
     '`'  .   .   .   .   .   . -412 720  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  260 260 260 260 260 260 260 260  .   .   .   .   .   .  260 260 260 260 260 260 260  .   .   .   .   .   .   .  260  . 




Nonterminal GOTO table:
     T\S   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919
   start
top_stat
top_stat
top_stat
reserved
semi_res
identifi
namespac
namespac
    semi  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  680 699  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  727  .   .   .   .   .   .   .   .   .   .   .   .   .  807  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  587  .   .  730  .   .   .   .  685  .   .   .  674 676  .  678 681 682  .  684  .  686 690  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
no_comma
optional
statemen
function
class_de
use_decl
use_type
group_us
constant
unprefix
inline_u
non_empt
unprefix  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  778  .   .   .   .   .   .   .  795  .  795  .  795  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  778  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  778  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  571  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  571  .   .   .  564  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  679  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  589  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  679  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  679  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
use_decl
non_empt
inline_u
non_empt
constant
    expr  .  135 135  .   .   .   .   .   .   .   .  135 135 135 135 135 135 135 135 135 165 165 155 150 137 155 180 155 169 141 185 174 153 173 142 143 154 140 156 149 161 161 133 136 164 166 170 146 171 151 167 145 148 158 199 195 190 182 183 184 177 191 192 193 188 186 487 176 178 179 194 161 152 161 823 181 320 197 209 198 200 208 205 201 202 203 204 210 319 212 211 233 232 249 251 247 315 167 139 160 161 399 394 392 391 390 466 787 167 161 163 348 161 134 147 196 167 144 157 149 138 357 384 314 187 162 159 350 172 353 168 189 175  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_co  .   .   .   .   .   .   .   .   .   .  531  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
class_co
inner_st
inner_st
inner_st
non_empt
elseif_l
else_sin
new_else
new_else
while_st
for_expr
for_stat
switch_c
optional  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  358 469  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  346  .  351  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  317  .   .   .   .   .   .   .   .  330  .   .  325  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
global_v
static_v  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  321  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
expr_lis
variable
foreach
foreach
variable
declare
declare
 catches
optional
   catch
name_uni
    name
non_empt
optional
optional
paramete  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  424  .  438 365 423  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional
class_en
extends
implemen
class_st
interfac
class_na
class_na  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  443  .   .  799 642  .   .  316  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  454  .   .  454 454  .   .  454  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
declare
case_lis
    case
case_sep
  elseif
new_else
list_exp
array_sh
non_empt
paramete  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  607  .   .   .   .   .   .   .  813  .  813 813 813  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional
type_exp
    type  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  811  .   .   .   .   .   .   .  811  .  811 811 811  .   .  811  .   .   .   .   .   .   .   .   .   .   .  829  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
argument
non_empt
argument  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  714 639  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
global_v
simple_v
non_empt
static_v
class_st
variable
property
method_m
method_b
trait_ad
trait_ad
trait_ad
trait_me
trait_me
member_m
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  236 236 236 236  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
property
non_empt
new_expr  .  735 735  .   .   .   .   .   .   .   .  735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735 735  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_na
exit_exp
  scalar
backtick
lexical
anonymou
ctor_arg
lexical_  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  482  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
lexical_  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  556  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  569  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
function
callable
class_na
member_n
new_vari
derefere
encaps_l
constant
array_pa
derefere
callable
property
static_m
list_exp
list_exp
inner_ar
array_pa
encaps_v
encaps_s
encaps_b
encaps_v  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  460  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 

Nonterminal GOTO table:
     T\S default
   start
top_stat
top_stat       2  =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
top_stat     742  .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
reserved
semi_res
identifi     530  .   .   .  335 634 455  .  388 608  =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
namespac
namespac
    semi
no_comma
optional     582  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  645  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
statemen
function
class_de
use_decl     324  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  293  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
use_type     431  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  323  .   .   .   .   .   .   .   =   .   =   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
group_us
constant
unprefix
inline_u
non_empt
unprefix
non_empt
use_decl
non_empt
inline_u
non_empt
constant
    expr     135  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =  165 165 155 150 137 155 180 155 169 141 185 174 153 173 142 143 154 140 156 149 161 161 133 136 164 166 170 146 171 151 167 145 148 158 199 195 190 182 183 184 177 191 192 193 188 186 487 176 178 179 194 161 152 161 823 181 320 197 209 198 200 208 205 201 202 203 204 210 319 212 211 233 232 249 251 247 315 167 139 160 161 399 394 392 391 390 466 787 167 161 163 348 161 134 147 196 167 144 157 149 138 357 384 314 187 162 159 350 172 353 168 189 175  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_co
non_empt
class_co
inner_st
inner_st
inner_st     538  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .  473  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  430 517  .   .  555  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  450  .   .   .   .   .   .   .  347  .   .   .   .   .   .   .   .   .  622  .   .   .   .   .   .   .  536  .   .  526  .   .   .   .   .   .   .   .   .  611  .  567  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  477  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  541  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  638  .   .   .   .   .   .   .  442  .   .   .  452  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt     738  .   =   =   .   .   .   .   .   .   .   .  833  =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
elseif_l
else_sin     612  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
new_else
new_else
while_st     837  .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
for_expr     519  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  417  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  372  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
for_stat
switch_c     830  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional
global_v
static_v     321  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
expr_lis
variable
foreach
foreach
variable
declare
declare
 catches
optional
   catch
name_uni
    name
non_empt     509  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional
optional
paramete
optional
class_en
extends
implemen
class_st
interfac
class_na
class_na
non_empt     454  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   =   =   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
declare
case_lis
    case
case_sep
  elseif
new_else
list_exp
array_sh
non_empt
paramete
optional
type_exp
    type
argument
non_empt
argument
non_empt
global_v
simple_v
non_empt
static_v
class_st
variable
property
method_m
method_b
trait_ad
trait_ad
trait_ad
trait_me
trait_me     492  .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
member_m
non_empt
non_empt     396  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
property
non_empt
new_expr
class_na
exit_exp     786  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
  scalar
backtick
lexical
anonymou
ctor_arg
lexical
non_empt     496  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
lexical
function
callable     364  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_na
member_n
new_vari     259  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
derefere
encaps_l
constant     362  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  344 344 344 344 344 344 344 344 344 344 344 344 344 344  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
array_pa
derefere
callable
property
static_m     761  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =   =   =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
list_exp
list_exp
inner_ar
array_pa
encaps_v
encaps_s
encaps_b
encaps_v

Candidates of aux table:
Used aux table:
state 0 (class 0)
state 1 (class 288)
state 2 (class 301)
state 3 (class 286)
state 4 (class 281)
state 5 (class 284)
state 6 (class 282)
state 7 (class 283)
state 8 (class 283)
state 9 (class 283)
state 10 (class 283)
state 11 (class 292)
state 12 (class 291)
state 13 (class 293)
state 14 (class 289)
state 15 (class 290)
state 16 (class 290)
state 17 (class 287)
state 18 (class 287)
state 19 (class 287)
state 20 (class 278)
state 21 (class 277)
state 22 (class 275)
state 23 (class 274)
state 24 (class 280)
state 25 (class 275)
state 26 (class 276)
state 27 (class 275)
state 28 (class 279)
state 29 (class 273)
state 30 (class 273)
state 31 (class 273)
state 32 (class 273)
state 33 (class 273)
state 34 (class 273)
state 35 (class 273)
state 36 (class 273)
state 37 (class 273)
state 38 (class 273)
state 39 (class 273)
state 40 (class 273)
state 41 (class 273)
state 42 (class 273)
state 43 (class 273)
state 44 (class 273)
state 45 (class 273)
state 46 (class 273)
state 47 (class 273)
state 48 (class 273)
state 49 (class 273)
state 50 (class 273)
state 51 (class 273)
state 52 (class 273)
state 53 (class 273)
state 54 (class 273)
state 55 (class 273)
state 56 (class 273)
state 57 (class 273)
state 58 (class 273)
state 59 (class 273)
state 60 (class 273)
state 61 (class 273)
state 62 (class 273)
state 63 (class 273)
state 64 (class 273)
state 65 (class 273)
state 66 (class 273)
state 67 (class 273)
state 68 (class 273)
state 69 (class 273)
state 70 (class 273)
state 71 (class 273)
state 72 (class 273)
state 73 (class 273)
state 74 (class 273)
state 75 (class 273)
state 76 (class 273)
state 77 (class 273)
state 78 (class 273)
state 79 (class 273)
state 80 (class 273)
state 81 (class 273)
state 82 (class 273)
state 83 (class 273)
state 84 (class 273)
state 85 (class 273)
state 86 (class 273)
state 87 (class 273)
state 88 (class 273)
state 89 (class 273)
state 90 (class 273)
state 91 (class 273)
state 92 (class 273)
state 93 (class 273)
state 94 (class 273)
state 95 (class 273)
state 96 (class 273)
state 97 (class 273)
state 98 (class 273)
state 99 (class 273)
state 100 (class 273)
state 101 (class 273)
state 102 (class 273)
state 103 (class 273)
state 104 (class 273)
state 105 (class 273)
state 106 (class 273)
state 107 (class 273)
state 108 (class 273)
state 109 (class 273)
state 110 (class 273)
state 111 (class 273)
state 112 (class 273)
state 113 (class 273)
state 114 (class 273)
state 115 (class 273)
state 116 (class 273)
state 117 (class 273)
state 118 (class 273)
state 119 (class 273)
state 120 (class 273)
state 121 (class 273)
state 122 (class 273)
state 123 (class 273)
state 124 (class 273)
state 125 (class 273)
state 126 (class 273)
state 127 (class 273)
state 128 (class 273)
state 129 (class 273)
state 130 (class 273)
state 131 (class 273)
state 132 (class 273)
state 133 (class 247)
state 134 (class 296)
state 135 (class 296)
state 136 (class 242)
state 137 (class 246)
state 138 (class 235)
state 139 (class 231)
state 140 (class 234)
state 141 (class 237)
state 142 (class 244)
state 143 (class 238)
state 144 (class 228)
state 145 (class 230)
state 146 (class 233)
state 147 (class 232)
state 148 (class 229)
state 149 (class 249)
state 150 (class 241)
state 151 (class 245)
state 152 (class 243)
state 153 (class 236)
state 154 (class 240)
state 155 (class 248)
state 156 (class 239)
state 157 (class 227)
state 158 (class 227)
state 159 (class 227)
state 160 (class 227)
state 161 (class 227)
state 162 (class 227)
state 163 (class 227)
state 164 (class 227)
state 165 (class 227)
state 166 (class 227)
state 167 (class 227)
state 168 (class 227)
state 169 (class 227)
state 170 (class 227)
state 171 (class 227)
state 172 (class 227)
state 173 (class 226)
state 174 (class 225)
state 175 (class 223)
state 176 (class 210)
state 177 (class 210)
state 178 (class 210)
state 179 (class 210)
state 180 (class 210)
state 181 (class 210)
state 182 (class 210)
state 183 (class 210)
state 184 (class 210)
state 185 (class 210)
state 186 (class 210)
state 187 (class 210)
state 188 (class 210)
state 189 (class 210)
state 190 (class 210)
state 191 (class 210)
state 192 (class 210)
state 193 (class 210)
state 194 (class 203)
state 195 (class 203)
state 196 (class 203)
state 197 (class 202)
state 198 (class 200)
state 199 (class 199)
state 200 (class 196)
state 201 (class 194)
state 202 (class 194)
state 203 (class 194)
state 204 (class 194)
state 205 (class 194)
state 206 (class 214)
state 207 (class 214)
state 208 (class 195)
state 209 (class 193)
state 210 (class 193)
state 211 (class 193)
state 212 (class 193)
state 213 (class 197)
state 214 (class 197)
state 215 (class 182)
state 216 (class 181)
state 217 (class 181)
state 218 (class 181)
state 219 (class 181)
state 220 (class 181)
state 221 (class 181)
state 222 (class 181)
state 223 (class 181)
state 224 (class 181)
state 225 (class 181)
state 226 (class 181)
state 227 (class 213)
state 228 (class 117)
state 229 (class 119)
state 230 (class 118)
state 231 (class 120)
state 232 (class 192)
state 233 (class 192)
state 234 (class 299)
state 235 (class 212)
state 236 (class 137)
state 237 (class 212)
state 238 (class 212)
state 239 (class 212)
state 240 (class 298)
state 241 (class 138)
state 242 (class 211)
state 243 (class 178)
state 244 (class 177)
state 245 (class 285)
state 246 (class 150)
state 247 (class 190)
state 248 (class 300)
state 249 (class 190)
state 250 (class 147)
state 251 (class 190)
state 252 (class 300)
state 253 (class 149)
state 254 (class 168)
state 255 (class 179)
state 256 (class 179)
state 257 (class 179)
state 258 (class 148)
state 259 (class 183)
state 260 (class 146)
state 261 (class 169)
state 262 (class 169)
state 263 (class 169)
state 264 (class 169)
state 265 (class 169)
state 266 (class 171)
state 267 (class 297)
state 268 (class 169)
state 269 (class 148)
state 270 (class 191)
state 271 (class 250)
state 272 (class 251)
state 273 (class 127)
state 274 (class 170)
state 275 (class 125)
state 276 (class 170)
state 277 (class 145)
state 278 (class 170)
state 279 (class 295)
state 280 (class 165)
state 281 (class 184)
state 282 (class 167)
state 283 (class 126)
state 284 (class 128)
state 285 (class 167)
state 286 (class 253)
state 287 (class 255)
state 288 (class 254)
state 289 (class 252)
state 290 (class 180)
state 291 (class 224)
state 292 (class 260)
state 293 (class 294)
state 294 (class 186)
state 295 (class 164)
state 296 (class 144)
state 297 (class 201)
state 298 (class 144)
state 299 (class 144)
state 300 (class 161)
state 301 (class 187)
state 302 (class 176)
state 303 (class 122)
state 304 (class 123)
state 305 (class 144)
state 306 (class 142)
state 307 (class 86)
state 308 (class 175)
state 309 (class 294)
state 310 (class 162)
state 311 (class 159)
state 312 (class 294)
state 313 (class 205)
state 314 (class 189)
state 315 (class 189)
state 316 (class 83)
state 317 (class 294)
state 318 (class 208)
state 319 (class 189)
state 320 (class 189)
state 321 (class 294)
state 322 (class 294)
state 323 (class 166)
state 324 (class 294)
state 325 (class 294)
state 326 (class 294)
state 327 (class 155)
state 328 (class 294)
state 329 (class 160)
state 330 (class 294)
state 331 (class 294)
state 332 (class 9)
state 333 (class 29)
state 334 (class 26)
state 335 (class 27)
state 336 (class 8)
state 337 (class 10)
state 338 (class 302)
state 339 (class 28)
state 340 (class 6)
state 341 (class 30)
state 342 (class 172)
state 343 (class 124)
state 344 (class 185)
state 345 (class 31)
state 346 (class 5)
state 347 (class 62)
state 348 (class 188)
state 349 (class 31)
state 350 (class 188)
state 351 (class 4)
state 352 (class 58)
state 353 (class 188)
state 354 (class 106)
state 355 (class 71)
state 356 (class 111)
state 357 (class 188)
state 358 (class 3)
state 359 (class 51)
state 360 (class 139)
state 361 (class 198)
state 362 (class 185)
state 363 (class 107)
state 364 (class 31)
state 365 (class 20)
state 366 (class 207)
state 367 (class 97)
state 368 (class 156)
state 369 (class 163)
state 370 (class 59)
state 371 (class 218)
state 372 (class 12)
state 373 (class 55)
state 374 (class 216)
state 375 (class 70)
state 376 (class 198)
state 377 (class 75)
state 378 (class 31)
state 379 (class 72)
state 380 (class 258)
state 381 (class 99)
state 382 (class 2)
state 383 (class 91)
state 384 (class 188)
state 385 (class 14)
state 386 (class 89)
state 387 (class 269)
state 388 (class 49)
state 389 (class 43)
state 390 (class 188)
state 391 (class 188)
state 392 (class 188)
state 393 (class 56)
state 394 (class 188)
state 395 (class 198)
state 396 (class 272)
state 397 (class 84)
state 398 (class 215)
state 399 (class 188)
state 400 (class 121)
state 401 (class 219)
state 402 (class 204)
state 403 (class 204)
state 404 (class 13)
state 405 (class 78)
state 406 (class 157)
state 407 (class 74)
state 408 (class 198)
state 409 (class 151)
state 410 (class 38)
state 411 (class 53)
state 412 (class 39)
state 413 (class 40)
state 414 (class 76)
state 415 (class 41)
state 416 (class 140)
state 417 (class 81)
state 418 (class 209)
state 419 (class 115)
state 420 (class 42)
state 421 (class 92)
state 422 (class 88)
state 423 (class 19)
state 424 (class 17)
state 425 (class 121)
state 426 (class 37)
state 427 (class 163)
state 428 (class 100)
state 429 (class 35)
state 430 (class 69)
state 431 (class 163)
state 432 (class 54)
state 433 (class 22)
state 434 (class 114)
state 435 (class 52)
state 436 (class 163)
state 437 (class 204)
state 438 (class 18)
state 439 (class 262)
state 440 (class 152)
state 441 (class 198)
state 442 (class 131)
state 443 (class 96)
state 444 (class 95)
state 445 (class 105)
state 446 (class 101)
state 447 (class 93)
state 448 (class 204)
state 449 (class 163)
state 450 (class 57)
state 451 (class 45)
state 452 (class 134)
state 453 (class 98)
state 454 (class 264)
state 455 (class 87)
state 456 (class 32)
state 457 (class 36)
state 458 (class 153)
state 459 (class 136)
state 460 (class 1)
state 461 (class 154)
state 462 (class 60)
state 463 (class 33)
state 464 (class 46)
state 465 (class 163)
state 466 (class 188)
state 467 (class 109)
state 468 (class 106)
state 469 (class 24)
state 470 (class 112)
state 471 (class 48)
state 472 (class 112)
state 473 (class 61)
state 474 (class 158)
state 475 (class 16)
state 476 (class 7)
state 477 (class 65)
state 478 (class 105)
state 479 (class 105)
state 480 (class 163)
state 481 (class 110)
state 482 (class 21)
state 483 (class 113)
state 484 (class 77)
state 485 (class 108)
state 486 (class 94)
state 487 (class 188)
state 488 (class 271)
state 489 (class 198)
state 490 (class 221)
state 491 (class 116)
state 492 (class 129)
state 493 (class 267)
state 494 (class 266)
state 495 (class 143)
state 496 (class 263)
state 497 (class 104)
state 498 (class 82)
state 499 (class 163)
state 500 (class 102)
state 501 (class 103)
state 502 (class 265)
state 503 (class 157)
state 504 (class 50)
state 505 (class 47)
state 506 (class 73)
state 507 (class 141)
state 508 (class 15)
state 509 (class 261)
state 510 (class 23)
state 511 (class 79)
state 512 (class 68)
state 513 (class 268)
state 514 (class 11)
state 515 (class 218)
state 516 (class 220)
state 517 (class 64)
state 518 (class 25)
state 519 (class 80)
state 520 (class 67)
state 521 (class 34)
state 522 (class 90)
state 523 (class 173)
state 524 (class 105)
state 525 (class 130)
state 526 (class 63)
state 527 (class 163)
state 528 (class 257)
state 529 (class 140)
state 530 (class 217)
state 531 (class 85)
state 532 (class 256)
state 533 (class 44)
state 534 (class 206)
state 535 (class 174)
state 536 (class 132)
state 537 (class 111)
state 538 (class 133)
state 539 (class 259)
state 540 (class 31)
state 541 (class 66)
state 542 (class 135)
state 543 (class 270)
state 544 (class 156)
state 545 (class 222)
state 546 (class 0)
state 547 (class 0)
state 548 (class 0)
state 549 (class 0)
state 550 (class 0)
state 551 (class 0)
state 552 (class 0)
state 553 (class 0)
state 554 (class 0)
state 555 (class 0)
state 556 (class 0)
state 557 (class 0)
state 558 (class 0)
state 559 (class 0)
state 560 (class 0)
state 561 (class 0)
state 562 (class 0)
state 563 (class 0)
state 564 (class 0)
state 565 (class 0)
state 566 (class 0)
state 567 (class 0)
state 568 (class 0)
state 569 (class 0)
state 570 (class 0)
state 571 (class 0)
state 572 (class 0)
state 573 (class 0)
state 574 (class 0)
state 575 (class 0)
state 576 (class 0)
state 577 (class 0)
state 578 (class 0)
state 579 (class 0)
state 580 (class 0)
state 581 (class 0)
state 582 (class 0)
state 583 (class 0)
state 584 (class 0)
state 585 (class 0)
state 586 (class 0)
state 587 (class 0)
state 588 (class 0)
state 589 (class 0)
state 590 (class 0)
state 591 (class 0)
state 592 (class 0)
state 593 (class 0)
state 594 (class 0)
state 595 (class 0)
state 596 (class 0)
state 597 (class 0)
state 598 (class 0)
state 599 (class 0)
state 600 (class 0)
state 601 (class 0)
state 602 (class 0)
state 603 (class 0)
state 604 (class 0)
state 605 (class 0)
state 606 (class 0)
state 607 (class 0)
state 608 (class 0)
state 609 (class 0)
state 610 (class 0)
state 611 (class 0)
state 612 (class 0)
state 613 (class 0)
state 614 (class 0)
state 615 (class 0)
state 616 (class 0)
state 617 (class 0)
state 618 (class 0)
state 619 (class 0)
state 620 (class 0)
state 621 (class 0)
state 622 (class 0)
state 623 (class 0)
state 624 (class 0)
state 625 (class 0)
state 626 (class 0)
state 627 (class 0)
state 628 (class 0)
state 629 (class 0)
state 630 (class 0)
state 631 (class 0)
state 632 (class 0)
state 633 (class 0)
state 634 (class 0)
state 635 (class 0)
state 636 (class 0)
state 637 (class 0)
state 638 (class 0)
state 639 (class 0)
state 640 (class 0)
state 641 (class 0)
state 642 (class 0)
state 643 (class 0)
state 644 (class 0)
state 645 (class 0)
state 646 (class 0)
state 647 (class 0)
state 648 (class 0)
state 649 (class 0)
state 650 (class 0)
state 651 (class 0)
state 652 (class 0)
state 653 (class 0)
state 654 (class 0)
state 655 (class 0)
state 656 (class 0)
state 657 (class 0)
state 658 (class 0)
state 659 (class 0)
state 660 (class 0)
state 661 (class 0)
state 662 (class 0)
state 663 (class 0)
state 664 (class 0)
state 665 (class 0)
state 666 (class 0)
state 667 (class 0)
state 668 (class 0)
state 669 (class 0)
state 670 (class 0)
state 671 (class 0)
state 672 (class 0)
state 673 (class 0)
state 674 (class 0)
state 675 (class 0)
state 676 (class 0)
state 677 (class 0)
state 678 (class 0)
state 679 (class 0)
state 680 (class 0)
state 681 (class 0)
state 682 (class 0)
state 683 (class 0)
state 684 (class 0)
state 685 (class 0)
state 686 (class 0)
state 687 (class 0)
state 688 (class 0)
state 689 (class 0)
state 690 (class 0)
state 691 (class 0)
state 692 (class 0)
state 693 (class 0)
state 694 (class 0)
state 695 (class 0)
state 696 (class 0)
state 697 (class 0)
state 698 (class 0)
state 699 (class 0)
state 700 (class 0)
state 701 (class 0)
state 702 (class 0)
state 703 (class 0)
state 704 (class 0)
state 705 (class 0)
state 706 (class 0)
state 707 (class 0)
state 708 (class 0)
state 709 (class 0)
state 710 (class 0)
state 711 (class 0)
state 712 (class 0)
state 713 (class 0)
state 714 (class 0)
state 715 (class 0)
state 716 (class 0)
state 717 (class 0)
state 718 (class 0)
state 719 (class 0)
state 720 (class 0)
state 721 (class 0)
state 722 (class 0)
state 723 (class 0)
state 724 (class 0)
state 725 (class 0)
state 726 (class 0)
state 727 (class 0)
state 728 (class 0)
state 729 (class 0)
state 730 (class 0)
state 731 (class 0)
state 732 (class 0)
state 733 (class 0)
state 734 (class 0)
state 735 (class 0)
state 736 (class 0)
state 737 (class 0)
state 738 (class 0)
state 739 (class 0)
state 740 (class 0)
state 741 (class 0)
state 742 (class 0)
state 743 (class 0)
state 744 (class 0)
state 745 (class 0)
state 746 (class 0)
state 747 (class 0)
state 748 (class 0)
state 749 (class 0)
state 750 (class 0)
state 751 (class 0)
state 752 (class 0)
state 753 (class 0)
state 754 (class 0)
state 755 (class 0)
state 756 (class 0)
state 757 (class 0)
state 758 (class 0)
state 759 (class 0)
state 760 (class 0)
state 761 (class 0)
state 762 (class 0)
state 763 (class 0)
state 764 (class 0)
state 765 (class 0)
state 766 (class 0)
state 767 (class 0)
state 768 (class 0)
state 769 (class 0)
state 770 (class 0)
state 771 (class 0)
state 772 (class 0)
state 773 (class 0)
state 774 (class 0)
state 775 (class 0)
state 776 (class 0)
state 777 (class 0)
state 778 (class 0)
state 779 (class 0)
state 780 (class 0)
state 781 (class 0)
state 782 (class 0)
state 783 (class 0)
state 784 (class 0)
state 785 (class 0)
state 786 (class 0)
state 787 (class 0)
state 788 (class 0)
state 789 (class 0)
state 790 (class 0)
state 791 (class 0)
state 792 (class 0)
state 793 (class 0)
state 794 (class 0)
state 795 (class 0)
state 796 (class 0)
state 797 (class 0)
state 798 (class 0)
state 799 (class 0)
state 800 (class 0)
state 801 (class 0)
state 802 (class 0)
state 803 (class 0)
state 804 (class 0)
state 805 (class 0)
state 806 (class 0)
state 807 (class 0)
state 808 (class 0)
state 809 (class 0)
state 810 (class 0)
state 811 (class 0)
state 812 (class 0)
state 813 (class 0)
state 814 (class 0)
state 815 (class 0)
state 816 (class 0)
state 817 (class 0)
state 818 (class 0)
state 819 (class 0)
state 820 (class 0)
state 821 (class 0)
state 822 (class 0)
state 823 (class 0)
state 824 (class 0)
state 825 (class 0)
state 826 (class 0)
state 827 (class 0)
state 828 (class 0)
state 829 (class 0)
state 830 (class 0)
state 831 (class 0)
state 832 (class 0)
state 833 (class 0)
state 834 (class 0)
state 835 (class 0)
state 836 (class 0)
state 837 (class 0)
state 838 (class 0)
state 839 (class 0)
state 840 (class 0)
state 841 (class 0)
state 842 (class 0)
state 843 (class 0)
state 844 (class 0)
state 845 (class 0)
state 846 (class 0)
state 847 (class 0)
state 848 (class 0)
state 849 (class 0)
state 850 (class 0)
state 851 (class 0)
state 852 (class 0)
state 853 (class 0)
state 854 (class 0)
state 855 (class 0)
state 856 (class 0)
state 857 (class 0)
state 858 (class 0)
state 859 (class 0)
state 860 (class 0)
state 861 (class 0)
state 862 (class 0)
state 863 (class 0)
state 864 (class 0)
state 865 (class 0)
state 866 (class 0)
state 867 (class 0)
state 868 (class 0)
state 869 (class 0)
state 870 (class 0)
state 871 (class 0)
state 872 (class 0)
state 873 (class 0)
state 874 (class 0)
state 875 (class 0)
state 876 (class 0)
state 877 (class 0)
state 878 (class 0)
state 879 (class 0)
state 880 (class 0)
state 881 (class 0)
state 882 (class 0)
state 883 (class 0)
state 884 (class 0)
state 885 (class 0)
state 886 (class 0)
state 887 (class 0)
state 888 (class 0)
state 889 (class 0)
state 890 (class 0)
state 891 (class 0)
state 892 (class 0)
state 893 (class 0)
state 894 (class 0)
state 895 (class 0)
state 896 (class 0)
state 897 (class 0)
state 898 (class 0)
state 899 (class 0)
state 900 (class 0)
state 901 (class 0)
state 902 (class 0)
state 903 (class 0)
state 904 (class 0)
state 905 (class 0)
state 906 (class 0)
state 907 (class 0)
state 908 (class 0)
state 909 (class 0)
state 910 (class 0)
state 911 (class 0)
state 912 (class 0)
state 913 (class 0)
state 914 (class 0)
state 915 (class 0)
state 916 (class 0)
state 917 (class 0)
state 918 (class 0)
state 919 (class 0)
Order:
288,301,286,281,284,282,283,292,290,291,289,293,287,278,277,280,276,279,275,274,273,296,247,228,231,230,234,233,232,235,237,238,236,229,243,244,242,241,240,239,245,246,248,249,227,226,225,223,210,203,202,200,199,196,214,194,195,193,197,182,181,213,119,120,118,117,299,192,298,212,137,211,138,300,285,178,177,149,168,147,150,190,297,183,179,169,171,146,148,191,295,251,250,184,165,167,145,125,126,170,127,128,294,252,253,254,255,260,224,205,208,180,186,144,155,160,161,162,159,164,166,187,201,142,189,175,176,123,122,83,86,302,257,272,271,270,269,268,267,266,265,264,263,262,261,259,258,256,220,215,216,217,219,218,221,222,209,207,206,204,198,188,185,174,172,173,151,163,157,156,154,153,152,158,143,141,140,139,136,135,134,133,132,131,130,129,124,121,116,114,115,113,112,111,110,107,109,108,103,102,101,104,106,105,100,90,80,81,84,85,87,88,89,82,91,93,94,95,96,97,98,99,92,74,70,71,72,73,76,75,77,78,79,61,55,54,56,57,58,59,60,68,62,63,64,65,66,67,69,37,36,35,34,33,29,32,30,39,28,27,26,38,31,40,48,41,53,52,50,49,51,47,46,45,44,43,42,16,8,9,10,11,12,13,14,15,20,17,18,19,21,22,23,24,25,7,6,1,5,4,3,2,0,
Order:
30,60,36,8,53,10,131,129,82,11,93,23,71,13,46,81,62,7,88,139,76,69,65,140,72,64,106,2,43,128,15,14,5,33,37,52,90,130,138,49,136,51,50,84,112,86,133,87,17,27,21,9,25,92,78,16,121,116,20,67,12,29,95,109,68,118,75,113,134,126,102,127,132,135,101,125,100,137,141,99,103,105,124,104,114,123,122,98,107,108,119,110,117,111,115,120,0,97,32,44,42,41,40,39,38,35,34,31,47,28,26,24,22,19,18,6,4,3,45,48,96,73,94,91,89,85,83,80,79,77,74,1,54,70,66,63,61,59,58,57,56,55,142,
