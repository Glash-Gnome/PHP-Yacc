EMPTY nonterminals: 
  $start
  start
  top_statement_list
  top_statement_list_ex
  no_comma
  optional_comma
  inner_statement_list_ex
  inner_statement_list
  elseif_list
  else_single
  new_elseif_list
  new_else_single
  for_expr
  optional_expr
  catches
  optional_finally
  optional_ref
  optional_ellipsis
  parameter_list
  optional_return_type
  extends_from
  implements_list
  class_statement_list
  interface_extends_list
  case_list
  non_empty_parameter_list
  parameter
  optional_param_type
  class_statement
  method_modifiers
  trait_adaptation_list
  exit_expr
  backticks_expr
  lexical_vars
  ctor_arguments
  lexical_var_list
  non_empty_lexical_var_list
  lexical_var
  array_pair_list
  list_expr_elements
  list_expr_element
  inner_array_pair_list
  array_pair
First:
$start	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
start	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement_list	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement_list_ex	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
top_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
reserved_non_modifiers	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
semi_reserved	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
identifier	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
namespace_name_parts	[ T_STRING ]
namespace_name	[ T_STRING ]
semi	[ error ';' ]
no_comma	[ ',' @ ]
optional_comma	[ ',' @ ]
statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
function_declaration_statement	[ T_FUNCTION ]
class_declaration_statement	[ T_ABSTRACT T_FINAL T_CLASS T_TRAIT T_INTERFACE ]
use_declarations	[ T_STRING T_NS_SEPARATOR ]
use_type	[ T_FUNCTION T_CONST ]
group_use_declaration	[ T_USE ]
constant_declaration_list	[ T_STRING ]
unprefixed_use_declarations	[ T_STRING ]
inline_use_declarations	[ T_STRING T_FUNCTION T_CONST ]
non_empty_unprefixed_use_declarations	[ T_STRING ]
unprefixed_use_declaration	[ T_STRING ]
non_empty_use_declarations	[ T_STRING T_NS_SEPARATOR ]
use_declaration	[ T_STRING T_NS_SEPARATOR ]
non_empty_inline_use_declarations	[ T_STRING T_FUNCTION T_CONST ]
inline_use_declaration	[ T_STRING T_FUNCTION T_CONST ]
non_empty_constant_declaration_list	[ T_STRING ]
constant_declaration	[ T_STRING ]
expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
class_const_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
non_empty_class_const_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
class_const	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
inner_statement_list_ex	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
inner_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
inner_statement_list	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' @ ]
non_empty_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '{' '(' '`' '"' '$' ]
elseif_list	[ T_ELSEIF @ ]
else_single	[ T_ELSE @ ]
new_elseif_list	[ T_ELSEIF @ ]
new_else_single	[ T_ELSE @ ]
while_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
for_expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
for_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
switch_case_list	[ ':' '{' ]
optional_expr	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
global_var_list	[ T_VARIABLE '$' ]
static_var_list	[ T_VARIABLE ]
expr_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
variables_list	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
foreach_variable	[ '&' '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_LIST T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
foreach_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
variable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
declare_list	[ T_STRING ]
declare_statement	[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM ':' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_UNSET T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
catches	[ T_CATCH @ ]
optional_finally	[ T_FINALLY @ ]
catch	[ T_CATCH ]
name_union	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
name	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
non_empty_variables_list	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
optional_ref	[ '&' @ ]
optional_ellipsis	[ T_ELLIPSIS @ ]
parameter_list	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS @ ]
optional_return_type	[ ':' @ ]
class_entry_type	[ T_ABSTRACT T_FINAL T_CLASS ]
extends_from	[ T_EXTENDS @ ]
implements_list	[ T_IMPLEMENTS @ ]
class_statement_list	[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR @ ]
interface_extends_list	[ T_EXTENDS @ ]
class_name	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
class_name_list	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
non_empty_class_name_list	[ T_STRING T_STATIC T_NAMESPACE T_NS_SEPARATOR ]
non_empty_declare_list	[ T_STRING ]
declare_list_element	[ T_STRING ]
case_list	[ T_CASE T_DEFAULT @ ]
case	[ T_CASE T_DEFAULT ]
case_separator	[ ':' ';' ]
elseif	[ T_ELSEIF ]
new_elseif	[ T_ELSEIF ]
list_expr	[ T_LIST ]
array_short_syntax	[ '[' ]
non_empty_parameter_list	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS ]
parameter	[ '?' '&' T_STRING T_VARIABLE T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR T_ELLIPSIS ]
optional_param_type	[ '?' T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR @ ]
type_expr	[ '?' T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR ]
type	[ T_STRING T_ARRAY T_CALLABLE T_NAMESPACE T_NS_SEPARATOR ]
argument_list	[ '(' ]
non_empty_argument_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR T_ELLIPSIS '(' '`' '"' '$' ]
argument	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR T_ELLIPSIS '(' '`' '"' '$' ]
non_empty_global_var_list	[ T_VARIABLE '$' ]
global_var	[ T_VARIABLE '$' ]
simple_variable	[ T_VARIABLE '$' ]
non_empty_static_var_list	[ T_VARIABLE ]
static_var	[ T_VARIABLE ]
class_statement	[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR ]
variable_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR ]
property_declaration_list	[ T_VARIABLE ]
method_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC @ ]
method_body	[ ';' '{' ]
trait_adaptations	[ ';' '{' ]
trait_adaptation_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR @ ]
trait_adaptation	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ]
trait_method_reference_fully_qualified	[ T_STRING T_NAMESPACE T_NS_SEPARATOR ]
trait_method_reference	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ]
member_modifier	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
non_empty_member_modifiers	[ T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
non_empty_property_declaration_list	[ T_VARIABLE ]
property_declaration	[ T_VARIABLE ]
non_empty_expr_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' ]
new_expr	[ T_NEW ]
class_name_reference	[ error T_STRING T_VARIABLE T_STATIC T_NAMESPACE T_NS_SEPARATOR '$' ]
exit_expr	[ '(' @ ]
scalar	[ '[' T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '"' '$' ]
backticks_expr	[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN @ ]
lexical_vars	[ T_USE @ ]
anonymous_class	[ T_CLASS ]
ctor_arguments	[ '(' @ ]
lexical_var_list	[ '&' T_VARIABLE ]
non_empty_lexical_var_list	[ '&' T_VARIABLE ]
lexical_var	[ '&' T_VARIABLE ]
function_call	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
callable_expr	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
class_name_or_var	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
member_name	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR '{' '$' ]
new_variable	[ T_STRING T_VARIABLE T_STATIC T_NAMESPACE T_NS_SEPARATOR '$' ]
dereferencable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
encaps_list	[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
constant	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
array_pair_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
dereferencable_scalar	[ '[' T_CONSTANT_ENCAPSED_STRING T_ARRAY ]
callable_variable	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
property_name	[ error T_STRING T_VARIABLE '{' '$' ]
static_member	[ '[' T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_STATIC T_ARRAY T_NAMESPACE T_NS_SEPARATOR '(' '$' ]
list_expr_elements	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
list_expr_element	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
inner_array_pair_list	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE ',' T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
array_pair	[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '&' '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_CONSTANT_ENCAPSED_STRING T_FUNCTION T_STATIC T_ISSET T_EMPTY T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '(' '`' '"' '$' @ ]
encaps_var	[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
encaps_string_part	[ T_ENCAPSED_AND_WHITESPACE ]
encaps_base_var	[ T_VARIABLE ]
encaps_var_offset	[ '-' T_STRING T_VARIABLE T_NUM_STRING ]
state unknown:
	(0) $start : . start 
		[ $EOF ]
	(3) top_statement_list_ex : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(0) $start : start . 
		[ $EOF ]
state unknown:
	(1) start : top_statement_list . 
		[ $EOF ]
state unknown:
	(2) top_statement_list_ex : top_statement_list_ex . top_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(4) top_statement_list : top_statement_list_ex . 
		[ $EOF '}' ]
state unknown:
	(161) non_empty_statement : error . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(364) expr : T_INCLUDE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(365) expr : T_INCLUDE_ONCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(366) expr : T_EVAL . '(' expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(367) expr : T_REQUIRE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(368) expr : T_REQUIRE_ONCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(380) expr : T_PRINT . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(381) expr : T_YIELD . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(382) expr : T_YIELD . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD . expr T_DOUBLE_ARROW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(384) expr : T_YIELD_FROM . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(344) expr : '+' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(345) expr : '-' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(346) expr : '!' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(347) expr : '~' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(324) expr : T_INC . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(326) expr : T_DEC . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(369) expr : T_INT_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(370) expr : T_DOUBLE_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(371) expr : T_STRING_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(372) expr : T_ARRAY_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(373) expr : T_OBJECT_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(374) expr : T_BOOL_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(375) expr : T_UNSET_CAST . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(377) expr : '@' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' . array_pair_list ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(489) array_pair : . 
		[ ',' ']' ]
state unknown:
	(388) new_expr : T_NEW . class_name_reference ctor_arguments 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(389) new_expr : T_NEW . anonymous_class 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(310) expr : T_CLONE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(376) expr : T_EXIT . exit_expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(409) exit_expr : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF . '(' expr ')' statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF . '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(423) scalar : T_LNUMBER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(424) scalar : T_DNUMBER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(82) namespace_name_parts : T_STRING . 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR ';' '(' ]
	(160) non_empty_statement : T_STRING . ':' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(456) simple_variable : T_VARIABLE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(151) non_empty_statement : T_INLINE_HTML . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(422) dereferencable_scalar : T_CONSTANT_ENCAPSED_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(150) non_empty_statement : T_ECHO . expr_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO . statement T_WHILE '(' expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE . '(' expr ')' while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR . '(' for_expr ';' for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(154) non_empty_statement : T_FOREACH . '(' expr T_AS foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH . '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE . '(' declare_list ')' declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(144) non_empty_statement : T_SWITCH . '(' expr ')' switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(145) non_empty_statement : T_BREAK . optional_expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE . optional_expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ]
state unknown:
	(159) non_empty_statement : T_GOTO . T_STRING semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION . optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(174) optional_ref : . 
		[ T_STRING '(' ]
state unknown:
	(101) top_statement : T_CONST . constant_declaration_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(147) non_empty_statement : T_RETURN . optional_expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(439) optional_expr : . 
		[ error ';' ]
state unknown:
	(157) non_empty_statement : T_TRY . '{' inner_statement_list '}' catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW . expr semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(98) top_statement : T_USE . use_declarations semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(99) top_statement : T_USE . use_type use_declarations semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(104) group_use_declaration : T_USE . use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(105) group_use_declaration : T_USE . use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(106) group_use_declaration : T_USE . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
	(107) group_use_declaration : T_USE . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL . global_var_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(149) non_empty_statement : T_STATIC . static_var_list semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(399) class_name : T_STATIC . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(183) class_entry_type : T_ABSTRACT . T_CLASS 
		[ T_STRING ]
state unknown:
	(184) class_entry_type : T_FINAL . T_CLASS 
		[ T_STRING ]
state unknown:
	(153) non_empty_statement : T_UNSET . '(' variables_list ')' semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(362) expr : T_ISSET . '(' variables_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY . '(' expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(94) top_statement : T_HALT_COMPILER . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(182) class_entry_type : T_CLASS . 
		[ T_STRING ]
state unknown:
	(181) class_declaration_statement : T_TRAIT . T_STRING '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE . T_STRING interface_extends_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(474) list_expr : T_LIST . '(' list_expr_elements ')' 
		[ ',' '=' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY . '(' array_pair_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(428) scalar : T_CLASS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(429) scalar : T_TRAIT_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(430) scalar : T_METHOD_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(431) scalar : T_FUNC_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(425) scalar : T_LINE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(426) scalar : T_FILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(435) scalar : T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(436) scalar : T_START_HEREDOC . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(438) scalar : T_START_HEREDOC . encaps_list T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(95) top_statement : T_NAMESPACE . namespace_name semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(96) top_statement : T_NAMESPACE . namespace_name '{' top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(97) top_statement : T_NAMESPACE . '{' top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_PAAMAYIM_NEKUDOTAYIM ';' '(' ]
state unknown:
	(432) scalar : T_NS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(427) scalar : T_DIR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(402) name : T_NS_SEPARATOR . namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(163) statement : ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(138) non_empty_statement : '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(358) expr : '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' . expr ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' . expr ')' 
		[ '(' ]
state unknown:
	(379) expr : '`' . backticks_expr '`' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(411) backticks_expr : . 
		[ '`' ]
state unknown:
	(437) scalar : '"' . encaps_list '"' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(457) simple_variable : '$' . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(458) simple_variable : '$' . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(459) simple_variable : '$' . error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(2) top_statement_list_ex : top_statement_list_ex top_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(401) name : namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(91) top_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(92) top_statement : function_declaration_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(93) top_statement : class_declaration_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(100) top_statement : group_use_declaration . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(152) non_empty_statement : expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(162) statement : non_empty_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(304) expr : variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(307) expr : variable . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable . '=' '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(311) expr : variable . T_PLUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(312) expr : variable . T_MINUS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(313) expr : variable . T_MUL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(314) expr : variable . T_DIV_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(315) expr : variable . T_CONCAT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(316) expr : variable . T_MOD_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(317) expr : variable . T_AND_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(318) expr : variable . T_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(319) expr : variable . T_XOR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(320) expr : variable . T_SL_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(321) expr : variable . T_SR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(322) expr : variable . T_POW_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(323) expr : variable . T_INC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(325) expr : variable . T_DEC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(396) function_call : name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(400) class_name : name . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
	(416) constant : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
state unknown:
	(179) class_declaration_statement : class_entry_type . T_STRING extends_from implements_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(407) class_name_or_var : class_name . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(305) expr : list_expr . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax . '=' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(421) dereferencable_scalar : array_short_syntax . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(447) callable_variable : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(309) expr : new_expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(378) expr : scalar . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(451) callable_variable : function_call . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(397) function_call : callable_expr . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(398) function_call : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM member_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(417) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM identifier 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(418) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(460) static_member : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(408) class_name_or_var : dereferencable . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
	(448) callable_variable : dereferencable . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(450) callable_variable : dereferencable . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(452) callable_variable : dereferencable . T_OBJECT_OPERATOR property_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable . T_OBJECT_OPERATOR property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(434) scalar : constant . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(449) callable_variable : constant . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(433) scalar : dereferencable_scalar . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(443) dereferencable : dereferencable_scalar . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(446) callable_expr : dereferencable_scalar . 
		[ '(' ]
state unknown:
	(444) callable_expr : callable_variable . 
		[ '(' ]
	(453) variable : callable_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(454) variable : static_member . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(82) namespace_name_parts : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ '(' ]
state unknown:
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(399) class_name : T_STATIC . 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(364) expr : T_INCLUDE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(365) expr : T_INCLUDE_ONCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(366) expr : T_EVAL '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(367) expr : T_REQUIRE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(368) expr : T_REQUIRE_ONCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(380) expr : T_PRINT expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(382) expr : T_YIELD expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD expr . T_DOUBLE_ARROW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(384) expr : T_YIELD_FROM expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(344) expr : '+' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(345) expr : '-' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(346) expr : '!' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(347) expr : '~' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(399) class_name : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(442) dereferencable : '(' . expr ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' . expr ')' 
		[ '(' ]
state unknown:
	(324) expr : T_INC variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(421) dereferencable_scalar : array_short_syntax . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' '(' ]
state unknown:
	(449) callable_variable : constant . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(443) dereferencable : dereferencable_scalar . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(446) callable_expr : dereferencable_scalar . 
		[ '(' ]
state unknown:
	(326) expr : T_DEC variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(369) expr : T_INT_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(370) expr : T_DOUBLE_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(371) expr : T_STRING_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(372) expr : T_ARRAY_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(373) expr : T_OBJECT_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(374) expr : T_BOOL_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(375) expr : T_UNSET_CAST expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(377) expr : '@' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(488) array_pair : '&' . variable 
		[ ',' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(485) array_pair : expr . T_DOUBLE_ARROW expr 
		[ ',' ')' ']' ]
	(486) array_pair : expr . 
		[ ',' ')' ']' ]
	(487) array_pair : expr . T_DOUBLE_ARROW '&' variable 
		[ ',' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' array_pair_list . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(482) array_pair_list : inner_array_pair_list . 
		[ ')' ']' ]
	(483) inner_array_pair_list : inner_array_pair_list . ',' array_pair 
		[ ',' ')' ']' ]
state unknown:
	(484) inner_array_pair_list : array_pair . 
		[ ',' ')' ']' ]
state unknown:
	(406) class_name_reference : error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS . ctor_arguments extends_from implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(414) ctor_arguments : . 
		[ T_EXTENDS T_IMPLEMENTS '{' ]
state unknown:
	(400) class_name : name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(404) class_name_reference : class_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
	(465) new_variable : class_name . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(461) new_variable : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW class_name_reference . ctor_arguments 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(414) ctor_arguments : . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(389) new_expr : T_NEW anonymous_class . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(405) class_name_reference : new_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' '(' ')' ']' ]
	(462) new_variable : new_variable . '[' optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(463) new_variable : new_variable . '{' expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(464) new_variable : new_variable . T_OBJECT_OPERATOR property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(466) new_variable : new_variable . T_PAAMAYIM_NEKUDOTAYIM simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(310) expr : T_CLONE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(410) exit_expr : '(' . optional_expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(439) optional_expr : . 
		[ ')' ]
state unknown:
	(376) expr : T_EXIT exit_expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' . expr ')' statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' . expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(160) non_empty_statement : T_STRING ':' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(301) non_empty_expr_list : expr . 
		[ error ',' ';' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
state unknown:
	(150) non_empty_statement : T_ECHO expr_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(299) expr_list : non_empty_expr_list . no_comma 
		[ error ';' ')' ]
	(300) non_empty_expr_list : non_empty_expr_list . ',' expr 
		[ error ',' ';' ')' ]
	(87) no_comma : . 
		[ error ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement . T_WHILE '(' expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' . expr ')' while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' . for_expr ';' for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' . expr T_AS foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' . expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' . declare_list ')' declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' . expr ')' switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ']' ]
	(440) optional_expr : expr . 
		[ error ';' ')' ']' ]
state unknown:
	(145) non_empty_statement : T_BREAK optional_expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE optional_expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(159) non_empty_statement : T_GOTO T_STRING . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(175) optional_ref : '&' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_ELLIPSIS '(' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref . T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(126) constant_declaration : T_STRING . '=' expr 
		[ error ',' ';' ]
state unknown:
	(101) top_statement : T_CONST constant_declaration_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(123) constant_declaration_list : non_empty_constant_declaration_list . no_comma 
		[ error ';' ]
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list . ',' constant_declaration 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(125) non_empty_constant_declaration_list : constant_declaration . 
		[ error ',' ';' ]
state unknown:
	(147) non_empty_statement : T_RETURN optional_expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' . inner_statement_list '}' catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW expr . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(102) use_type : T_FUNCTION . 
		[ T_STRING T_NS_SEPARATOR ]
state unknown:
	(103) use_type : T_CONST . 
		[ T_STRING T_NS_SEPARATOR ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(106) group_use_declaration : T_USE namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(117) unprefixed_use_declaration : namespace_name . 
		[ error ',' ';' '}' ]
	(118) unprefixed_use_declaration : namespace_name . T_AS T_STRING 
		[ error ',' ';' '}' ]
state unknown:
	(98) top_statement : T_USE use_declarations . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(99) top_statement : T_USE use_type . use_declarations semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(104) group_use_declaration : T_USE use_type . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(105) group_use_declaration : T_USE use_type . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(119) use_declaration : unprefixed_use_declaration . 
		[ error ',' ';' ]
state unknown:
	(111) use_declarations : non_empty_use_declarations . no_comma 
		[ error ';' ]
	(112) non_empty_use_declarations : non_empty_use_declarations . ',' use_declaration 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(113) non_empty_use_declarations : use_declaration . 
		[ error ',' ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL global_var_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(253) global_var_list : non_empty_global_var_list . no_comma 
		[ error ';' ]
	(254) non_empty_global_var_list : non_empty_global_var_list . ',' global_var 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(255) non_empty_global_var_list : global_var . 
		[ error ',' ';' ]
state unknown:
	(256) global_var : simple_variable . 
		[ error ',' ';' ]
state unknown:
	(260) static_var : T_VARIABLE . 
		[ error ',' ';' ]
	(261) static_var : T_VARIABLE . '=' expr 
		[ error ',' ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(174) optional_ref : . 
		[ '(' ]
state unknown:
	(149) non_empty_statement : T_STATIC static_var_list . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(257) static_var_list : non_empty_static_var_list . no_comma 
		[ error ';' ]
	(258) non_empty_static_var_list : non_empty_static_var_list . ',' static_var 
		[ error ',' ';' ]
	(87) no_comma : . 
		[ error ';' ]
state unknown:
	(259) non_empty_static_var_list : static_var . 
		[ error ',' ';' ]
state unknown:
	(183) class_entry_type : T_ABSTRACT T_CLASS . 
		[ T_STRING ]
state unknown:
	(184) class_entry_type : T_FINAL T_CLASS . 
		[ T_STRING ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' . variables_list ')' semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(362) expr : T_ISSET '(' . variables_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY '(' . expr ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING . '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING . interface_extends_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(187) interface_extends_list : . 
		[ '{' ]
state unknown:
	(474) list_expr : T_LIST '(' . list_expr_elements ')' 
		[ ',' '=' ')' ]
	(481) list_expr_element : . 
		[ ',' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' . array_pair_list ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ]
state unknown:
	(495) encaps_base_var : T_VARIABLE . 
		[ '[' T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_OBJECT_OPERATOR T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
state unknown:
	(436) scalar : T_START_HEREDOC T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . expr '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(502) encaps_var : T_CURLY_OPEN . variable '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(438) scalar : T_START_HEREDOC encaps_list . T_END_HEREDOC 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
state unknown:
	(492) encaps_list : encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(493) encaps_list : encaps_string_part . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(496) encaps_var : encaps_base_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(497) encaps_var : encaps_base_var . '[' encaps_var_offset ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(498) encaps_var : encaps_base_var . T_OBJECT_OPERATOR T_STRING 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(403) name : T_NAMESPACE T_NS_SEPARATOR . namespace_name_parts 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' . top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(3) top_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' '{' '}' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' '{' '}' ]
state unknown:
	(95) top_statement : T_NAMESPACE namespace_name . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(96) top_statement : T_NAMESPACE namespace_name . '{' top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(402) name : T_NS_SEPARATOR namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(131) inner_statement_list_ex : inner_statement_list_ex . inner_statement 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(133) inner_statement_list : inner_statement_list_ex . 
		[ T_ELSEIF T_ELSE T_ENDIF T_ENDWHILE T_ENDFOR T_ENDFOREACH T_ENDDECLARE T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(138) non_empty_statement : '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(358) expr : '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(442) dereferencable : '(' expr . ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr . ')' 
		[ '(' ]
state unknown:
	(412) backticks_expr : T_ENCAPSED_AND_WHITESPACE . 
		[ '`' ]
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN ]
state unknown:
	(379) expr : '`' backticks_expr . '`' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(413) backticks_expr : encaps_list . 
		[ '`' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' ]
state unknown:
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(437) scalar : '"' encaps_list . '"' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(490) encaps_list : encaps_list . encaps_var 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '"' ]
	(491) encaps_list : encaps_list . encaps_string_part 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '"' ]
state unknown:
	(459) simple_variable : '$' error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(457) simple_variable : '$' '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(458) simple_variable : '$' simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(86) semi : error . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(85) semi : ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(100) top_statement : group_use_declaration semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(329) expr : expr T_LOGICAL_OR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(331) expr : expr T_LOGICAL_XOR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(330) expr : expr T_LOGICAL_AND . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(359) expr : expr '?' . expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr '?' . ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(361) expr : expr T_COALESCE . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr T_BOOLEAN_OR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(328) expr : expr T_BOOLEAN_AND . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(332) expr : expr '|' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(334) expr : expr '^' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(333) expr : expr '&' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(350) expr : expr T_IS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(351) expr : expr T_IS_NOT_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(348) expr : expr T_IS_IDENTICAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(349) expr : expr T_IS_NOT_IDENTICAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(352) expr : expr T_SPACESHIP . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(353) expr : expr '<' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(354) expr : expr T_IS_SMALLER_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(355) expr : expr '>' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(356) expr : expr T_IS_GREATER_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(341) expr : expr T_SL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(342) expr : expr T_SR . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(336) expr : expr '+' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(337) expr : expr '-' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(335) expr : expr '.' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(338) expr : expr '*' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(339) expr : expr '/' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(340) expr : expr '%' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(357) expr : expr T_INSTANCEOF . class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(343) expr : expr T_POW . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(152) non_empty_statement : expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(307) expr : variable '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(308) expr : variable '=' . '&' variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(311) expr : variable T_PLUS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(312) expr : variable T_MINUS_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(313) expr : variable T_MUL_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(314) expr : variable T_DIV_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(315) expr : variable T_CONCAT_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(316) expr : variable T_MOD_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(317) expr : variable T_AND_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(318) expr : variable T_OR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(319) expr : variable T_XOR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(320) expr : variable T_SL_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(321) expr : variable T_SR_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(322) expr : variable T_POW_EQUAL . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(323) expr : variable T_INC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(325) expr : variable T_DEC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(246) argument_list : '(' . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(247) argument_list : '(' . non_empty_argument_list no_comma ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(396) function_call : name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING . extends_from implements_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(185) extends_from : . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(305) expr : list_expr '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax '=' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(397) function_call : callable_expr argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . member_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . identifier 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . error 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR . property_name argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable T_OBJECT_OPERATOR . property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(450) callable_variable : dereferencable '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ ']' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(366) expr : T_EVAL '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(383) expr : T_YIELD expr T_DOUBLE_ARROW . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(442) dereferencable : '(' expr . ')' 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr . ')' 
		[ '(' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(488) array_pair : '&' variable . 
		[ ',' ')' ']' ]
state unknown:
	(485) array_pair : expr T_DOUBLE_ARROW . expr 
		[ ',' ')' ']' ]
	(487) array_pair : expr T_DOUBLE_ARROW . '&' variable 
		[ ',' ')' ']' ]
state unknown:
	(419) array_short_syntax : '[' array_pair_list ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(483) inner_array_pair_list : inner_array_pair_list ',' . array_pair 
		[ ',' ')' ']' ]
	(489) array_pair : . 
		[ ',' ')' ']' ]
state unknown:
	(415) ctor_arguments : argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS T_EXTENDS T_IMPLEMENTS ';' '{' '}' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments . extends_from implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(185) extends_from : . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(388) new_expr : T_NEW class_name_reference ctor_arguments . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' . optional_expr ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(439) optional_expr : . 
		[ ']' ]
state unknown:
	(464) new_variable : new_variable T_OBJECT_OPERATOR . property_name 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM . simple_variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(463) new_variable : new_variable '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(410) exit_expr : '(' optional_expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr . ')' statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' expr . ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(150) non_empty_statement : T_ECHO expr_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ')' ]
	(300) non_empty_expr_list : non_empty_expr_list ',' . expr 
		[ error ',' ';' ')' ]
state unknown:
	(299) expr_list : non_empty_expr_list no_comma . 
		[ error ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE . '(' expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr . ')' while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr . ';' for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(303) for_expr : expr_list . 
		[ ';' ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr . T_AS foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' expr . T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ]
state unknown:
	(204) declare_list_element : T_STRING . '=' expr 
		[ ',' ')' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list . ')' declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(201) declare_list : non_empty_declare_list . no_comma 
		[ ')' ]
	(203) non_empty_declare_list : non_empty_declare_list . ',' declare_list_element 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(202) non_empty_declare_list : declare_list_element . 
		[ ',' ')' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr . ')' switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(145) non_empty_statement : T_BREAK optional_expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(146) non_empty_statement : T_CONTINUE optional_expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(159) non_empty_statement : T_GOTO T_STRING semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING . '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(126) constant_declaration : T_STRING '=' . expr 
		[ error ',' ';' ]
state unknown:
	(101) top_statement : T_CONST constant_declaration_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' . constant_declaration 
		[ error ',' ';' ]
state unknown:
	(123) constant_declaration_list : non_empty_constant_declaration_list no_comma . 
		[ error ';' ]
state unknown:
	(147) non_empty_statement : T_RETURN optional_expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list . '}' catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(158) non_empty_statement : T_THROW expr semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(120) use_declaration : T_NS_SEPARATOR unprefixed_use_declaration . 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(118) unprefixed_use_declaration : namespace_name T_AS . T_STRING 
		[ error ',' ';' '}' ]
state unknown:
	(98) top_statement : T_USE use_declarations semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(104) group_use_declaration : T_USE use_type namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(99) top_statement : T_USE use_type use_declarations . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(112) non_empty_use_declarations : non_empty_use_declarations ',' . use_declaration 
		[ error ',' ';' ]
state unknown:
	(111) use_declarations : non_empty_use_declarations no_comma . 
		[ error ';' ]
state unknown:
	(148) non_empty_statement : T_GLOBAL global_var_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(254) non_empty_global_var_list : non_empty_global_var_list ',' . global_var 
		[ error ',' ';' ]
state unknown:
	(253) global_var_list : non_empty_global_var_list no_comma . 
		[ error ';' ]
state unknown:
	(261) static_var : T_VARIABLE '=' . expr 
		[ error ',' ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(149) non_empty_statement : T_STATIC static_var_list semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ error ';' ]
	(258) non_empty_static_var_list : non_empty_static_var_list ',' . static_var 
		[ error ',' ';' ]
state unknown:
	(257) static_var_list : non_empty_static_var_list no_comma . 
		[ error ';' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list . ')' semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(172) non_empty_variables_list : variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(171) variables_list : non_empty_variables_list . no_comma 
		[ ')' ]
	(173) non_empty_variables_list : non_empty_variables_list . ',' variable 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(362) expr : T_ISSET '(' variables_list . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(363) expr : T_EMPTY '(' expr . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' . class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(188) interface_extends_list : T_EXTENDS . class_name_list 
		[ '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list . '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(479) list_expr_element : expr . T_DOUBLE_ARROW variable 
		[ ',' ')' ]
	(480) list_expr_element : expr . T_DOUBLE_ARROW list_expr 
		[ ',' ')' ]
state unknown:
	(304) expr : variable . 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(307) expr : variable . '=' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(308) expr : variable . '=' '&' variable 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(311) expr : variable . T_PLUS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(312) expr : variable . T_MINUS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(313) expr : variable . T_MUL_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(314) expr : variable . T_DIV_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(315) expr : variable . T_CONCAT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(316) expr : variable . T_MOD_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(317) expr : variable . T_AND_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(318) expr : variable . T_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(319) expr : variable . T_XOR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(320) expr : variable . T_SL_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(321) expr : variable . T_SR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(322) expr : variable . T_POW_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(323) expr : variable . T_INC 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(325) expr : variable . T_DEC 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(477) list_expr_element : variable . 
		[ ',' ')' ]
state unknown:
	(305) expr : list_expr . '=' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(478) list_expr_element : list_expr . 
		[ ',' ')' ]
state unknown:
	(474) list_expr : T_LIST '(' list_expr_elements . ')' 
		[ ',' '=' ')' ]
	(475) list_expr_elements : list_expr_elements . ',' list_expr_element 
		[ ',' ')' ]
state unknown:
	(476) list_expr_elements : list_expr_element . 
		[ ',' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(502) encaps_var : T_CURLY_OPEN variable . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(438) scalar : T_START_HEREDOC encaps_list T_END_HEREDOC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(490) encaps_list : encaps_list encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(491) encaps_list : encaps_list encaps_string_part . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(493) encaps_list : encaps_string_part encaps_var . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' . encaps_var_offset ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR . T_STRING 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
	(403) name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' top_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' . top_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(3) top_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(95) top_statement : T_NAMESPACE namespace_name semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(137) inner_statement : T_HALT_COMPILER . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(134) inner_statement : statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(135) inner_statement : function_declaration_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(136) inner_statement : class_declaration_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(131) inner_statement_list_ex : inner_statement_list_ex inner_statement . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(138) non_empty_statement : '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(358) expr : '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(442) dereferencable : '(' expr ')' . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr ')' . 
		[ '(' ]
state unknown:
	(379) expr : '`' backticks_expr '`' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(437) scalar : '"' encaps_list '"' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(457) simple_variable : '$' '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_VARIABLE T_AS T_IMPLEMENTS T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR T_ELLIPSIS ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr T_LOGICAL_OR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr T_LOGICAL_XOR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr T_LOGICAL_AND expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(360) expr : expr '?' ':' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(359) expr : expr '?' expr . ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr T_COALESCE expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr T_BOOLEAN_OR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr T_BOOLEAN_AND expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr '|' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr '^' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr '&' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr T_IS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr T_IS_NOT_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr T_IS_IDENTICAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr T_IS_NOT_IDENTICAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr T_SPACESHIP expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr '<' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr T_IS_SMALLER_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr '>' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr T_IS_GREATER_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr T_SL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr T_SR expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr '+' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr '-' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr '.' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr '*' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr '/' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr '%' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(357) expr : expr T_INSTANCEOF class_name_reference . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr T_POW expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(308) expr : variable '=' '&' . variable 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(307) expr : variable '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(311) expr : variable T_PLUS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(312) expr : variable T_MINUS_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(313) expr : variable T_MUL_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(314) expr : variable T_DIV_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(315) expr : variable T_CONCAT_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(316) expr : variable T_MOD_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(317) expr : variable T_AND_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(318) expr : variable T_OR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(319) expr : variable T_XOR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(320) expr : variable T_SL_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(321) expr : variable T_SR_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(322) expr : variable T_POW_EQUAL expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(251) argument : '&' . variable 
		[ ',' ')' ]
state unknown:
	(252) argument : T_ELLIPSIS . expr 
		[ ',' ')' ]
state unknown:
	(246) argument_list : '(' ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(250) argument : expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list . no_comma ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(249) non_empty_argument_list : non_empty_argument_list . ',' argument 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(248) non_empty_argument_list : argument . 
		[ ',' ')' ]
state unknown:
	(186) extends_from : T_EXTENDS . class_name 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from . implements_list '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(189) implements_list : . 
		[ '{' ]
state unknown:
	(305) expr : list_expr '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(306) expr : array_short_syntax '=' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
state unknown:
	(5) reserved_non_modifiers : T_INCLUDE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(6) reserved_non_modifiers : T_INCLUDE_ONCE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(7) reserved_non_modifiers : T_EVAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(8) reserved_non_modifiers : T_REQUIRE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(9) reserved_non_modifiers : T_REQUIRE_ONCE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(10) reserved_non_modifiers : T_LOGICAL_OR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(11) reserved_non_modifiers : T_LOGICAL_XOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(12) reserved_non_modifiers : T_LOGICAL_AND . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(48) reserved_non_modifiers : T_PRINT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(49) reserved_non_modifiers : T_YIELD . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(13) reserved_non_modifiers : T_INSTANCEOF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(14) reserved_non_modifiers : T_NEW . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(15) reserved_non_modifiers : T_CLONE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(16) reserved_non_modifiers : T_EXIT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(17) reserved_non_modifiers : T_IF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(18) reserved_non_modifiers : T_ELSEIF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(19) reserved_non_modifiers : T_ELSE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(20) reserved_non_modifiers : T_ENDIF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(80) identifier : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(21) reserved_non_modifiers : T_ECHO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(22) reserved_non_modifiers : T_DO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(23) reserved_non_modifiers : T_WHILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(24) reserved_non_modifiers : T_ENDWHILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(25) reserved_non_modifiers : T_FOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(26) reserved_non_modifiers : T_ENDFOR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(27) reserved_non_modifiers : T_FOREACH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(28) reserved_non_modifiers : T_ENDFOREACH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(29) reserved_non_modifiers : T_DECLARE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(30) reserved_non_modifiers : T_ENDDECLARE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(31) reserved_non_modifiers : T_AS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(51) reserved_non_modifiers : T_SWITCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(52) reserved_non_modifiers : T_ENDSWITCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(53) reserved_non_modifiers : T_CASE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(54) reserved_non_modifiers : T_DEFAULT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(55) reserved_non_modifiers : T_BREAK . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(43) reserved_non_modifiers : T_CONTINUE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(44) reserved_non_modifiers : T_GOTO . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(45) reserved_non_modifiers : T_FUNCTION . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(46) reserved_non_modifiers : T_CONST . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(47) reserved_non_modifiers : T_RETURN . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(32) reserved_non_modifiers : T_TRY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(33) reserved_non_modifiers : T_CATCH . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(34) reserved_non_modifiers : T_FINALLY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(35) reserved_non_modifiers : T_THROW . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(36) reserved_non_modifiers : T_USE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(37) reserved_non_modifiers : T_INSTEADOF . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(38) reserved_non_modifiers : T_GLOBAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(74) semi_reserved : T_STATIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(75) semi_reserved : T_ABSTRACT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(76) semi_reserved : T_FINAL . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(77) semi_reserved : T_PRIVATE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(78) semi_reserved : T_PROTECTED . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(79) semi_reserved : T_PUBLIC . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(39) reserved_non_modifiers : T_VAR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(40) reserved_non_modifiers : T_UNSET . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(41) reserved_non_modifiers : T_ISSET . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(42) reserved_non_modifiers : T_EMPTY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(72) reserved_non_modifiers : T_HALT_COMPILER . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(63) reserved_non_modifiers : T_CLASS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(61) reserved_non_modifiers : T_TRAIT . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(62) reserved_non_modifiers : T_INTERFACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(58) reserved_non_modifiers : T_EXTENDS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(59) reserved_non_modifiers : T_IMPLEMENTS . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(50) reserved_non_modifiers : T_LIST . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(56) reserved_non_modifiers : T_ARRAY . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(57) reserved_non_modifiers : T_CALLABLE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(64) reserved_non_modifiers : T_CLASS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(65) reserved_non_modifiers : T_TRAIT_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(67) reserved_non_modifiers : T_METHOD_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(66) reserved_non_modifiers : T_FUNC_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(68) reserved_non_modifiers : T_LINE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(69) reserved_non_modifiers : T_FILE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(60) reserved_non_modifiers : T_NAMESPACE . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(71) reserved_non_modifiers : T_NS_C . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(70) reserved_non_modifiers : T_DIR . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(468) member_name : '{' . expr '}' 
		[ '(' ]
state unknown:
	(73) semi_reserved : reserved_non_modifiers . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(81) identifier : semi_reserved . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_INSTEADOF ';' '}' '(' ')' ']' ]
state unknown:
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM identifier . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS ';' '}' ')' ']' ]
	(467) member_name : identifier . 
		[ '(' ]
state unknown:
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
	(469) member_name : simple_variable . 
		[ '(' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(473) property_name : error . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(470) property_name : T_STRING . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(471) property_name : '{' . expr '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(472) property_name : simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name . argument_list 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
	(455) variable : dereferencable T_OBJECT_OPERATOR property_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(450) callable_variable : dereferencable '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(366) expr : T_EVAL '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(383) expr : T_YIELD expr T_DOUBLE_ARROW expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(442) dereferencable : '(' expr ')' . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(445) callable_expr : '(' expr ')' . 
		[ '(' ]
state unknown:
	(487) array_pair : expr T_DOUBLE_ARROW '&' . variable 
		[ ',' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ']' ]
	(485) array_pair : expr T_DOUBLE_ARROW expr . 
		[ ',' ')' ']' ]
state unknown:
	(483) inner_array_pair_list : inner_array_pair_list ',' array_pair . 
		[ ',' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from . implements_list '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(189) implements_list : . 
		[ '{' ]
state unknown:
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' optional_expr . ']' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(464) new_variable : new_variable T_OBJECT_OPERATOR property_name . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(463) new_variable : new_variable '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(410) exit_expr : '(' optional_expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' . statement elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(140) non_empty_statement : T_IF '(' expr ')' . ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(300) non_empty_expr_list : non_empty_expr_list ',' expr . 
		[ error ',' ';' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ')' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' . expr ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr ')' . while_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' . for_expr ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ';' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS . foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(155) non_empty_statement : T_FOREACH '(' expr T_AS . variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(204) declare_list_element : T_STRING '=' . expr 
		[ ',' ')' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' . declare_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(203) non_empty_declare_list : non_empty_declare_list ',' . declare_list_element 
		[ ',' ')' ]
state unknown:
	(201) declare_list : non_empty_declare_list no_comma . 
		[ ')' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr ')' . switch_case_list 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' . parameter_list ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(238) type_expr : '?' . type 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(240) type : T_ARRAY . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(241) type : T_CALLABLE . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(239) type : name . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(231) parameter_list : non_empty_parameter_list . no_comma 
		[ ')' ]
	(234) non_empty_parameter_list : non_empty_parameter_list . ',' parameter 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(233) non_empty_parameter_list : parameter . 
		[ ',' ')' ]
state unknown:
	(235) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE '=' expr 
		[ ',' ')' ]
	(174) optional_ref : . 
		[ T_VARIABLE T_ELLIPSIS ]
state unknown:
	(243) optional_param_type : type_expr . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
state unknown:
	(237) type_expr : type . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(126) constant_declaration : T_STRING '=' expr . 
		[ error ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' constant_declaration . 
		[ error ',' ';' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' . catches optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(164) catches : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(118) unprefixed_use_declaration : namespace_name T_AS T_STRING . 
		[ error ',' ';' '}' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(84) namespace_name : namespace_name_parts . 
		[ error ',' T_AS ';' ]
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(99) top_statement : T_USE use_type use_declarations semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 
		[ error ',' ';' ]
state unknown:
	(112) non_empty_use_declarations : non_empty_use_declarations ',' use_declaration . 
		[ error ',' ';' ]
state unknown:
	(254) non_empty_global_var_list : non_empty_global_var_list ',' global_var . 
		[ error ',' ';' ]
state unknown:
	(261) static_var : T_VARIABLE '=' expr . 
		[ error ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(258) non_empty_static_var_list : non_empty_static_var_list ',' static_var . 
		[ error ',' ';' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list ')' . semi 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(173) non_empty_variables_list : non_empty_variables_list ',' . variable 
		[ ',' ')' ]
state unknown:
	(171) variables_list : non_empty_variables_list no_comma . 
		[ ')' ]
state unknown:
	(362) expr : T_ISSET '(' variables_list ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(363) expr : T_EMPTY '(' expr ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(192) non_empty_class_name_list : class_name . 
		[ ',' ';' '{' ]
state unknown:
	(188) interface_extends_list : T_EXTENDS class_name_list . 
		[ '{' ]
state unknown:
	(191) class_name_list : non_empty_class_name_list . no_comma 
		[ ';' '{' ]
	(193) non_empty_class_name_list : non_empty_class_name_list . ',' class_name 
		[ ',' ';' '{' ]
	(87) no_comma : . 
		[ ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' . class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(479) list_expr_element : expr T_DOUBLE_ARROW . variable 
		[ ',' ')' ]
	(480) list_expr_element : expr T_DOUBLE_ARROW . list_expr 
		[ ',' ')' ]
state unknown:
	(475) list_expr_elements : list_expr_elements ',' . list_expr_element 
		[ ',' ')' ]
	(481) list_expr_element : . 
		[ ',' ')' ]
state unknown:
	(474) list_expr : T_LIST '(' list_expr_elements ')' . 
		[ ',' '=' ')' ]
state unknown:
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(502) encaps_var : T_CURLY_OPEN variable '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(505) encaps_var_offset : '-' . T_NUM_STRING 
		[ ']' ]
state unknown:
	(503) encaps_var_offset : T_STRING . 
		[ ']' ]
state unknown:
	(506) encaps_var_offset : T_VARIABLE . 
		[ ']' ]
state unknown:
	(504) encaps_var_offset : T_NUM_STRING . 
		[ ']' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' encaps_var_offset . ']' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR T_STRING . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(97) top_statement : T_NAMESPACE '{' top_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(457) simple_variable : '$' '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr '?' ':' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(359) expr : expr '?' expr ':' . expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(308) expr : variable '=' '&' variable . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(251) argument : '&' variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(252) argument : T_ELLIPSIS expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(249) non_empty_argument_list : non_empty_argument_list ',' . argument 
		[ ',' ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list no_comma . ')' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(186) extends_from : T_EXTENDS class_name . 
		[ T_IMPLEMENTS '{' ]
state unknown:
	(190) implements_list : T_IMPLEMENTS . class_name_list 
		[ '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list . '{' class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(468) member_name : '{' expr . '}' 
		[ '(' ]
state unknown:
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(448) callable_variable : dereferencable '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '}' ]
	(471) property_name : '{' expr . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name argument_list . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(450) callable_variable : dereferencable '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(449) callable_variable : constant '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(487) array_pair : expr T_DOUBLE_ARROW '&' variable . 
		[ ',' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list . '{' class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(462) new_variable : new_variable '[' optional_expr ']' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(463) new_variable : new_variable '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' . inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement . elseif_list else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(217) elseif_list : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr . ')' ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(216) while_statement : ':' . inner_statement_list T_ENDWHILE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(215) while_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(141) non_empty_statement : T_WHILE '(' expr ')' while_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr . ';' for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(228) foreach_variable : '&' . variable 
		[ ')' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable . ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable . T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(227) foreach_variable : variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(229) foreach_variable : list_expr . 
		[ ')' ]
state unknown:
	(230) foreach_variable : array_short_syntax . 
		[ ')' ]
	(421) dereferencable_scalar : array_short_syntax . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' '(' ]
state unknown:
	(204) declare_list_element : T_STRING '=' expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(200) declare_statement : ':' . inner_statement_list T_ENDDECLARE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(199) declare_statement : ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(198) declare_statement : non_empty_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' declare_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(203) non_empty_declare_list : non_empty_declare_list ',' declare_list_element . 
		[ ',' ')' ]
state unknown:
	(207) switch_case_list : ':' . case_list T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(208) switch_case_list : ':' . ';' case_list T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(205) switch_case_list : '{' . case_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(206) switch_case_list : '{' . ';' case_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(144) non_empty_statement : T_SWITCH '(' expr ')' switch_case_list . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list . ')' optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(238) type_expr : '?' type . 
		[ '&' T_VARIABLE T_ELLIPSIS ';' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(390) lexical_vars : . 
		[ ':' '{' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(234) non_empty_parameter_list : non_empty_parameter_list ',' . parameter 
		[ ',' ')' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
state unknown:
	(231) parameter_list : non_empty_parameter_list no_comma . 
		[ ')' ]
state unknown:
	(235) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE '=' expr 
		[ ',' ')' ]
	(176) optional_ellipsis : . 
		[ T_VARIABLE ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches . optional_finally 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(165) catches : catches . catch 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(169) optional_finally : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 
		[ error ';' ]
state unknown:
	(122) inline_use_declaration : use_type . unprefixed_use_declaration 
		[ ',' '}' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(121) inline_use_declaration : unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(114) inline_use_declarations : non_empty_inline_use_declarations . optional_comma 
		[ '}' ]
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations . ',' inline_use_declaration 
		[ ',' '}' ]
	(89) optional_comma : . 
		[ '}' ]
state unknown:
	(116) non_empty_inline_use_declarations : inline_use_declaration . 
		[ ',' '}' ]
state unknown:
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
		[ error ',' T_AS T_NS_SEPARATOR ';' ]
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(153) non_empty_statement : T_UNSET '(' variables_list ')' semi . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(173) non_empty_variables_list : non_empty_variables_list ',' variable . 
		[ ',' ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(267) class_statement : T_USE . class_name_list trait_adaptations 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(291) member_modifier : T_STATIC . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(292) member_modifier : T_ABSTRACT . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(293) member_modifier : T_FINAL . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(290) member_modifier : T_PRIVATE . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(289) member_modifier : T_PROTECTED . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(288) member_modifier : T_PUBLIC . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_VARIABLE T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ';' ]
state unknown:
	(283) variable_modifiers : T_VAR . 
		[ T_VARIABLE ]
state unknown:
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(262) class_statement_list : class_statement_list class_statement . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(264) class_statement : variable_modifiers . property_declaration_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(265) class_statement : method_modifiers . T_CONST class_const_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(266) class_statement : method_modifiers . T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(286) non_empty_member_modifiers : member_modifier . 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(282) variable_modifiers : non_empty_member_modifiers . 
		[ T_VARIABLE ]
	(285) method_modifiers : non_empty_member_modifiers . 
		[ T_FUNCTION T_CONST ]
	(287) non_empty_member_modifiers : non_empty_member_modifiers . member_modifier 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(88) no_comma : ',' . 
		[ ';' '{' ]
	(193) non_empty_class_name_list : non_empty_class_name_list ',' . class_name 
		[ ',' ';' '{' ]
state unknown:
	(191) class_name_list : non_empty_class_name_list no_comma . 
		[ ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
	(479) list_expr_element : expr T_DOUBLE_ARROW variable . 
		[ ',' ')' ]
state unknown:
	(480) list_expr_element : expr T_DOUBLE_ARROW list_expr . 
		[ ',' ')' ]
state unknown:
	(475) list_expr_elements : list_expr_elements ',' list_expr_element . 
		[ ',' ')' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ']' ]
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(505) encaps_var_offset : '-' T_NUM_STRING . 
		[ ']' ]
state unknown:
	(497) encaps_var : encaps_base_var '[' encaps_var_offset ']' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(332) expr : expr . '|' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(333) expr : expr . '&' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(334) expr : expr . '^' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(335) expr : expr . '.' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(336) expr : expr . '+' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(337) expr : expr . '-' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(338) expr : expr . '*' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(339) expr : expr . '/' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(340) expr : expr . '%' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(341) expr : expr . T_SL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(342) expr : expr . T_SR expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(343) expr : expr . T_POW expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(353) expr : expr . '<' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(355) expr : expr . '>' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr . '?' expr ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(359) expr : expr '?' expr ':' expr . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(360) expr : expr . '?' ':' expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(361) expr : expr . T_COALESCE expr 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(249) non_empty_argument_list : non_empty_argument_list ',' argument . 
		[ ',' ')' ]
state unknown:
	(247) argument_list : '(' non_empty_argument_list no_comma ')' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_EXTENDS T_IMPLEMENTS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(190) implements_list : T_IMPLEMENTS class_name_list . 
		[ '{' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' . class_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(468) member_name : '{' expr '}' . 
		[ '(' ]
state unknown:
	(471) property_name : '{' expr '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '=' T_PLUS_EQUAL T_MINUS_EQUAL T_MUL_EQUAL T_DIV_EQUAL T_CONCAT_EQUAL T_MOD_EQUAL T_AND_EQUAL T_OR_EQUAL T_XOR_EQUAL T_SL_EQUAL T_SR_EQUAL T_POW_EQUAL '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_INC T_DEC T_POW '[' T_AS T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM ';' '{' '}' '(' ')' ']' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' . class_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(263) class_statement_list : . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list . new_elseif_list new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(220) new_elseif_list : . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list . else_single 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(218) elseif_list : elseif_list . elseif 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(223) else_single : . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list . T_ENDWHILE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' . for_expr ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(302) for_expr : . 
		[ ')' ]
state unknown:
	(228) foreach_variable : '&' variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' . foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW . foreach_variable ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list . T_ENDDECLARE ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' . case_list T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(207) switch_case_list : ':' case_list . T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(206) switch_case_list : '{' ';' . case_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(209) case_list : . 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' case_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' . optional_return_type '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(244) optional_return_type : . 
		[ '{' ]
state unknown:
	(391) lexical_vars : T_USE . '(' lexical_var_list ')' 
		[ ':' '{' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(244) optional_return_type : . 
		[ '{' ]
state unknown:
	(234) non_empty_parameter_list : non_empty_parameter_list ',' parameter . 
		[ ',' ')' ]
state unknown:
	(177) optional_ellipsis : T_ELLIPSIS . 
		[ T_VARIABLE ]
state unknown:
	(235) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE '=' expr 
		[ ',' ')' ]
state unknown:
	(168) catch : T_CATCH . '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY . '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches optional_finally . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(165) catches : catches catch . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(122) inline_use_declaration : use_type unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(90) optional_comma : ',' . 
		[ '}' ]
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' . inline_use_declaration 
		[ ',' '}' ]
state unknown:
	(114) inline_use_declarations : non_empty_inline_use_declarations optional_comma . 
		[ '}' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations . optional_comma 
		[ '}' ]
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations . ',' unprefixed_use_declaration 
		[ ',' '}' ]
	(89) optional_comma : . 
		[ '}' ]
state unknown:
	(110) non_empty_unprefixed_use_declarations : unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(390) lexical_vars : . 
		[ ':' '{' ]
state unknown:
	(267) class_statement : T_USE class_name_list . trait_adaptations 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(297) property_declaration : T_VARIABLE . 
		[ ',' ';' ]
	(298) property_declaration : T_VARIABLE . '=' expr 
		[ ',' ';' ]
state unknown:
	(264) class_statement : variable_modifiers property_declaration_list . ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(294) property_declaration_list : non_empty_property_declaration_list . no_comma 
		[ ';' ]
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list . ',' property_declaration 
		[ ',' ';' ]
	(87) no_comma : . 
		[ ';' ]
state unknown:
	(295) non_empty_property_declaration_list : property_declaration . 
		[ ',' ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION . optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(174) optional_ref : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR ]
state unknown:
	(265) class_statement : method_modifiers T_CONST . class_const_list ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(287) non_empty_member_modifiers : non_empty_member_modifiers member_modifier . 
		[ T_VARIABLE T_FUNCTION T_CONST T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC ]
state unknown:
	(193) non_empty_class_name_list : non_empty_class_name_list ',' class_name . 
		[ ',' ';' '{' ]
state unknown:
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}' 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(262) class_statement_list : class_statement_list . class_statement 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(284) method_modifiers : . 
		[ T_FUNCTION T_CONST ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list . new_else_single T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(221) new_elseif_list : new_elseif_list . new_elseif 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(225) new_else_single : . 
		[ T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF . '(' expr ')' statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(224) else_single : T_ELSE . statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list else_single . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(218) elseif_list : elseif_list elseif . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list T_ENDWHILE . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr . ')' for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' . inner_statement_list T_ENDFOREACH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_ENDFOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(196) foreach_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable . ')' foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(227) foreach_variable : variable . 
		[ ')' ]
	(441) dereferencable : variable . 
		[ '[' T_OBJECT_OPERATOR T_PAAMAYIM_NEKUDOTAYIM '{' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list . T_ENDSWITCH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_ENDSWITCH T_CASE T_DEFAULT ]
state unknown:
	(207) switch_case_list : ':' case_list T_ENDSWITCH . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE . expr case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(212) case : T_DEFAULT . case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(210) case_list : case_list case . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(206) switch_case_list : '{' ';' case_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(210) case_list : case_list . case 
		[ T_CASE T_DEFAULT '}' ]
state unknown:
	(205) switch_case_list : '{' case_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(245) optional_return_type : ':' . type_expr 
		[ ';' '{' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type . '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(391) lexical_vars : T_USE '(' . lexical_var_list ')' 
		[ ':' '{' ]
	(174) optional_ref : . 
		[ T_VARIABLE ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(235) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . 
		[ ',' ')' ]
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . '=' expr 
		[ ',' ')' ]
state unknown:
	(168) catch : T_CATCH '(' . name_union T_VARIABLE ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' inline_use_declaration . 
		[ ',' '}' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 
		[ error ';' ]
state unknown:
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(90) optional_comma : ',' . 
		[ '}' ]
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' . unprefixed_use_declaration 
		[ ',' '}' ]
state unknown:
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations optional_comma . 
		[ '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(244) optional_return_type : . 
		[ '{' ]
state unknown:
	(268) trait_adaptations : ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(269) trait_adaptations : '{' . trait_adaptation_list '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(270) trait_adaptation_list : . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(267) class_statement : T_USE class_name_list trait_adaptations . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(298) property_declaration : T_VARIABLE '=' . expr 
		[ ',' ';' ]
state unknown:
	(264) class_statement : variable_modifiers property_declaration_list ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(88) no_comma : ',' . 
		[ ';' ]
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' . property_declaration 
		[ ',' ';' ]
state unknown:
	(294) property_declaration_list : non_empty_property_declaration_list no_comma . 
		[ ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref . identifier '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(130) class_const : identifier . '=' expr 
		[ ',' ';' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST class_const_list . ';' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(127) class_const_list : non_empty_class_const_list . no_comma 
		[ ';' ]
	(128) non_empty_class_const_list : non_empty_class_const_list . ',' class_const 
		[ ',' ';' ]
	(87) no_comma : . 
		[ ';' ]
state unknown:
	(129) non_empty_class_const_list : class_const . 
		[ ',' ';' ]
state unknown:
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' . 
		[ T_VARIABLE T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN '`' '"' ]
state unknown:
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(222) new_elseif : T_ELSEIF . '(' expr ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(226) new_else_single : T_ELSE . ':' inner_statement_list 
		[ T_ENDIF ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single . T_ENDIF ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(221) new_elseif_list : new_elseif_list new_elseif . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF '(' . expr ')' statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(224) else_single : T_ELSE statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(216) while_statement : ':' inner_statement_list T_ENDWHILE ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' . for_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list . T_ENDFOREACH ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' . foreach_statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(207) switch_case_list : ':' case_list T_ENDSWITCH ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr . case_separator inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(213) case_separator : ':' . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(214) case_separator : ';' . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(212) case : T_DEFAULT case_separator . inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(206) switch_case_list : '{' ';' case_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(245) optional_return_type : ':' type_expr . 
		[ ';' '{' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(395) lexical_var : optional_ref . T_VARIABLE 
		[ ',' ')' ]
state unknown:
	(391) lexical_vars : T_USE '(' lexical_var_list . ')' 
		[ ':' '{' ]
state unknown:
	(392) lexical_var_list : non_empty_lexical_var_list . no_comma 
		[ ')' ]
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list . ',' lexical_var 
		[ ',' ')' ]
	(87) no_comma : . 
		[ ')' ]
state unknown:
	(393) non_empty_lexical_var_list : lexical_var . 
		[ ',' ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' . expr 
		[ ',' ')' ]
state unknown:
	(167) name_union : name_union . '|' name 
		[ '|' T_VARIABLE ]
	(168) catch : T_CATCH '(' name_union . T_VARIABLE ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(166) name_union : name . 
		[ '|' T_VARIABLE ]
state unknown:
	(170) optional_finally : T_FINALLY '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 
		[ error ';' ]
state unknown:
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' unprefixed_use_declaration . 
		[ ',' '}' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(269) trait_adaptations : '{' trait_adaptation_list . '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(271) trait_adaptation_list : trait_adaptation_list . trait_adaptation 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(298) property_declaration : T_VARIABLE '=' expr . 
		[ ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' property_declaration . 
		[ ',' ';' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier . '(' parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(130) class_const : identifier '=' . expr 
		[ ',' ';' ]
state unknown:
	(265) class_statement : method_modifiers T_CONST class_const_list ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(88) no_comma : ',' . 
		[ ';' ]
	(128) non_empty_class_const_list : non_empty_class_const_list ',' . class_const 
		[ ',' ';' ]
state unknown:
	(127) class_const_list : non_empty_class_const_list no_comma . 
		[ ';' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' . expr ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(226) new_else_single : T_ELSE ':' . inner_statement_list 
		[ T_ENDIF ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr . ')' statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(195) for_statement : ':' . inner_statement_list T_ENDFOR ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_ENDFOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(194) for_statement : statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr case_separator . inner_statement_list 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(212) case : T_DEFAULT case_separator inner_statement_list . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(395) lexical_var : optional_ref T_VARIABLE . 
		[ ',' ')' ]
state unknown:
	(391) lexical_vars : T_USE '(' lexical_var_list ')' . 
		[ ':' '{' ]
state unknown:
	(88) no_comma : ',' . 
		[ ')' ]
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' . lexical_var 
		[ ',' ')' ]
	(174) optional_ref : . 
		[ T_VARIABLE ]
state unknown:
	(392) lexical_var_list : non_empty_lexical_var_list no_comma . 
		[ ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' expr . 
		[ ',' ')' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(167) name_union : name_union '|' . name 
		[ '|' T_VARIABLE ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE . ')' '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(170) optional_finally : T_FINALLY '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(80) identifier : T_STRING . 
		[ T_AS ]
	(82) namespace_name_parts : T_STRING . 
		[ T_PAAMAYIM_NEKUDOTAYIM T_NS_SEPARATOR ]
state unknown:
	(60) reserved_non_modifiers : T_NAMESPACE . 
		[ T_AS ]
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 
		[ T_PAAMAYIM_NEKUDOTAYIM ]
state unknown:
	(269) trait_adaptations : '{' trait_adaptation_list '}' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(279) trait_method_reference : identifier . 
		[ T_AS ]
state unknown:
	(277) trait_method_reference_fully_qualified : name . T_PAAMAYIM_NEKUDOTAYIM identifier 
		[ T_AS T_INSTEADOF ]
state unknown:
	(271) trait_adaptation_list : trait_adaptation_list trait_adaptation . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified . T_INSTEADOF class_name_list ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(278) trait_method_reference : trait_method_reference_fully_qualified . 
		[ T_AS ]
state unknown:
	(273) trait_adaptation : trait_method_reference . T_AS member_modifier identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference . T_AS member_modifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(275) trait_adaptation : trait_method_reference . T_AS T_STRING ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(276) trait_adaptation : trait_method_reference . T_AS reserved_non_modifiers ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' . parameter_list ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(242) optional_param_type : . 
		[ '&' T_VARIABLE T_ELLIPSIS ]
	(232) parameter_list : . 
		[ ')' ]
state unknown:
	(130) class_const : identifier '=' expr . 
		[ ',' ';' ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(332) expr : expr . '|' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(333) expr : expr . '&' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(334) expr : expr . '^' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(335) expr : expr . '.' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(336) expr : expr . '+' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(337) expr : expr . '-' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(338) expr : expr . '*' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(339) expr : expr . '/' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(340) expr : expr . '%' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(341) expr : expr . T_SL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(342) expr : expr . T_SR expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(343) expr : expr . T_POW expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(353) expr : expr . '<' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(355) expr : expr . '>' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(359) expr : expr . '?' expr ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(360) expr : expr . '?' ':' expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
	(361) expr : expr . T_COALESCE expr 
		[ ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ';' ]
state unknown:
	(128) non_empty_class_const_list : non_empty_class_const_list ',' class_const . 
		[ ',' ';' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr . ')' ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(327) expr : expr . T_BOOLEAN_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(328) expr : expr . T_BOOLEAN_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(329) expr : expr . T_LOGICAL_OR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(330) expr : expr . T_LOGICAL_AND expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(331) expr : expr . T_LOGICAL_XOR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(332) expr : expr . '|' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(333) expr : expr . '&' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(334) expr : expr . '^' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(335) expr : expr . '.' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(336) expr : expr . '+' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(337) expr : expr . '-' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(338) expr : expr . '*' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(339) expr : expr . '/' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(340) expr : expr . '%' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(341) expr : expr . T_SL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(342) expr : expr . T_SR expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(343) expr : expr . T_POW expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(348) expr : expr . T_IS_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(350) expr : expr . T_IS_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(351) expr : expr . T_IS_NOT_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(352) expr : expr . T_SPACESHIP expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(353) expr : expr . '<' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(355) expr : expr . '>' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(357) expr : expr . T_INSTANCEOF class_name_reference 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(359) expr : expr . '?' expr ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(360) expr : expr . '?' ':' expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
	(361) expr : expr . T_COALESCE expr 
		[ T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND '?' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW ')' ]
state unknown:
	(226) new_else_single : T_ELSE ':' inner_statement_list . 
		[ T_ENDIF ]
state unknown:
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr ')' . statement 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list . T_ENDFOR ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(211) case : T_CASE expr case_separator inner_statement_list . 
		[ T_ENDSWITCH T_CASE T_DEFAULT '}' ]
state unknown:
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' lexical_var . 
		[ ',' ')' ]
state unknown:
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(167) name_union : name_union '|' name . 
		[ '|' T_VARIABLE ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' . '{' inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM . identifier 
		[ T_AS T_INSTEADOF ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF . class_name_list ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS . member_modifier identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference T_AS . member_modifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(275) trait_adaptation : trait_method_reference T_AS . T_STRING ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(276) trait_adaptation : trait_method_reference T_AS . reserved_non_modifiers ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list . ')' optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' . ':' inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(219) elseif : T_ELSEIF '(' expr ')' statement . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list T_ENDFOR . ';' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' . inner_statement_list '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 
		[ error ',' T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_DOUBLE_ARROW '?' ':' T_COALESCE T_BOOLEAN_OR T_BOOLEAN_AND '|' '^' '&' T_IS_EQUAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_NOT_IDENTICAL T_SPACESHIP '<' T_IS_SMALLER_OR_EQUAL '>' T_IS_GREATER_OR_EQUAL T_SL T_SR '+' '-' '.' '*' '/' '%' T_INSTANCEOF T_POW T_AS ';' '}' ')' ']' ]
state unknown:
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM identifier . 
		[ T_AS T_INSTEADOF ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(275) trait_adaptation : trait_method_reference T_AS T_STRING . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier . identifier ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
	(274) trait_adaptation : trait_method_reference T_AS member_modifier . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' . optional_return_type method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(244) optional_return_type : . 
		[ ';' '{' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' . inner_statement_list 
		[ T_ELSEIF T_ELSE T_ENDIF ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '(' '`' '"' '$' ]
state unknown:
	(195) for_statement : ':' inner_statement_list T_ENDFOR ';' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list . '}' 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(275) trait_adaptation : trait_method_reference T_AS T_STRING ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(274) trait_adaptation : trait_method_reference T_AS member_modifier ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier . ';' 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type . method_body 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' inner_statement_list . 
		[ T_ELSEIF T_ELSE T_ENDIF ]
state unknown:
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' . 
		[ $EOF error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier ';' . 
		[ T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_LOGICAL_OR T_LOGICAL_XOR T_LOGICAL_AND T_PRINT T_YIELD T_INSTANCEOF T_NEW T_CLONE T_EXIT T_IF T_ELSEIF T_ELSE T_ENDIF T_STRING T_ECHO T_DO T_WHILE T_ENDWHILE T_FOR T_ENDFOR T_FOREACH T_ENDFOREACH T_DECLARE T_ENDDECLARE T_AS T_SWITCH T_ENDSWITCH T_CASE T_DEFAULT T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_CONST T_RETURN T_TRY T_CATCH T_FINALLY T_THROW T_USE T_INSTEADOF T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_EXTENDS T_IMPLEMENTS T_LIST T_ARRAY T_CALLABLE T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR '}' ]
state unknown:
	(280) method_body : ';' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' . inner_statement_list '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
	(132) inner_statement_list_ex : . 
		[ error T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE T_PRINT T_YIELD T_YIELD_FROM '+' '-' '!' '~' T_INC T_DEC T_INT_CAST T_DOUBLE_CAST T_STRING_CAST T_ARRAY_CAST T_OBJECT_CAST T_BOOL_CAST T_UNSET_CAST '@' '[' T_NEW T_CLONE T_EXIT T_IF T_LNUMBER T_DNUMBER T_STRING T_VARIABLE T_INLINE_HTML T_CONSTANT_ENCAPSED_STRING T_ECHO T_DO T_WHILE T_FOR T_FOREACH T_DECLARE T_SWITCH T_BREAK T_CONTINUE T_GOTO T_FUNCTION T_RETURN T_TRY T_THROW T_GLOBAL T_STATIC T_ABSTRACT T_FINAL T_UNSET T_ISSET T_EMPTY T_HALT_COMPILER T_CLASS T_TRAIT T_INTERFACE T_LIST T_ARRAY T_CLASS_C T_TRAIT_C T_METHOD_C T_FUNC_C T_LINE T_FILE T_START_HEREDOC T_NAMESPACE T_NS_C T_DIR T_NS_SEPARATOR ';' '{' '}' '(' '`' '"' '$' ]
state unknown:
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' inner_statement_list . '}' 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state unknown:
	(281) method_body : '{' inner_statement_list '}' . 
		[ T_FUNCTION T_CONST T_USE T_STATIC T_ABSTRACT T_FINAL T_PRIVATE T_PROTECTED T_PUBLIC T_VAR '}' ]
state 0
	(0) $start : . start 
	(3) top_statement_list_ex : . 

	start		goto 337
	top_statement_list	goto 793 and reduce (1)
	top_statement_list_ex	goto 2
	.		reduce (3)

state 1
	(131) inner_statement_list_ex : inner_statement_list_ex . inner_statement 
	(133) inner_statement_list : inner_statement_list_ex . 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_ELSEIF	reduce (133)
	T_ELSE		reduce (133)
	T_ENDIF		reduce (133)
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_ENDWHILE	reduce (133)
	T_FOR		shift 413
	T_ENDFOR	reduce (133)
	T_FOREACH	shift 412
	T_ENDFOREACH	reduce (133)
	T_DECLARE	shift 411
	T_ENDDECLARE	reduce (133)
	T_SWITCH	shift 410
	T_ENDSWITCH	reduce (133)
	T_CASE		reduce (133)
	T_DEFAULT	reduce (133)
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 408
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_ABSTRACT	shift 419
	T_FINAL		shift 434
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_HALT_COMPILER	shift 726 and reduce (137)
	T_CLASS		shift 753 and reduce (182)
	T_TRAIT		shift 462
	T_INTERFACE	shift 459
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'}'		reduce (133)
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 725 and reduce (134)
	function_declaration_statement	goto 724 and reduce (135)
	class_declaration_statement	goto 723 and reduce (136)
	expr		goto 133
	inner_statement	goto 722 and reduce (131)
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 207
	name		goto 290
	class_entry_type	goto 441
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 2
	(2) top_statement_list_ex : top_statement_list_ex . top_statement 
	(4) top_statement_list : top_statement_list_ex . 

	$EOF		reduce (4)
	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 408
	T_CONST		shift 406
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_USE		shift 257
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_ABSTRACT	shift 419
	T_FINAL		shift 434
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_HALT_COMPILER	shift 754 and reduce (94)
	T_CLASS		shift 753 and reduce (182)
	T_TRAIT		shift 462
	T_INTERFACE	shift 459
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 274
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'}'		reduce (4)
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	top_statement	goto 742 and reduce (2)
	namespace_name_parts	goto 446
	statement	goto 741 and reduce (91)
	function_declaration_statement	goto 740 and reduce (92)
	class_declaration_statement	goto 739 and reduce (93)
	group_use_declaration	goto 312
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 207
	name		goto 290
	class_entry_type	goto 441
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 3
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . member_name argument_list 
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . identifier 
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . error 
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	error		shift 700 and reduce (418)
	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_VARIABLE	shift 757 and reduce (456)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	'{'		shift 62
	'$'		shift 266
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 336
	simple_variable	goto 335
	member_name	goto 345
	.		error

state 4
	(269) trait_adaptations : '{' trait_adaptation_list . '}' 
	(271) trait_adaptation_list : trait_adaptation_list . trait_adaptation 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 340
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 492
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	T_NS_SEPARATOR	shift 450
	'}'		shift 656 and reduce (269)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 655 and reduce (279)
	namespace_name_parts	goto 446
	name		goto 473
	trait_adaptation	goto 653 and reduce (271)
	trait_method_reference_fully_qualified	goto 481
	trait_method_reference	goto 482
	.		error

state 5
	(273) trait_adaptation : trait_method_reference T_AS member_modifier . identifier ';' 
	(274) trait_adaptation : trait_method_reference T_AS member_modifier . ';' 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	';'		shift 589 and reduce (274)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 456
	.		error

state 6
	(266) class_statement : method_modifiers T_FUNCTION optional_ref . identifier '(' parameter_list ')' optional_return_type method_body 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 536
	.		error

state 7
	(265) class_statement : method_modifiers T_CONST . class_const_list ';' 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 527
	class_const_list	goto 519
	non_empty_class_const_list	goto 526
	class_const	goto 625 and reduce (129)
	.		error

state 8
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM . identifier 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 631 and reduce (277)
	.		error

state 9
	(88) no_comma : ',' . 
	(128) non_empty_class_const_list : non_empty_class_const_list ',' . class_const 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 886 and reduce (80)
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 889 and reduce (74)
	T_ABSTRACT	shift 906 and reduce (75)
	T_FINAL		shift 919 and reduce (76)
	T_PRIVATE	shift 918 and reduce (77)
	T_PROTECTED	shift 917 and reduce (78)
	T_PUBLIC	shift 916 and reduce (79)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 893 and reduce (73)
	semi_reserved	goto 892 and reduce (81)
	identifier	goto 527
	class_const	goto 628 and reduce (128)
	.		reduce (88)

state 10
	(273) trait_adaptation : trait_method_reference T_AS . member_modifier identifier ';' 
	(274) trait_adaptation : trait_method_reference T_AS . member_modifier ';' 
	(275) trait_adaptation : trait_method_reference T_AS . T_STRING ';' 
	(276) trait_adaptation : trait_method_reference T_AS . reserved_non_modifiers ';' 

	T_INCLUDE	shift 713 and reduce (5)
	T_INCLUDE_ONCE	shift 712 and reduce (6)
	T_EVAL		shift 711 and reduce (7)
	T_REQUIRE	shift 710 and reduce (8)
	T_REQUIRE_ONCE	shift 709 and reduce (9)
	T_LOGICAL_OR	shift 708 and reduce (10)
	T_LOGICAL_XOR	shift 707 and reduce (11)
	T_LOGICAL_AND	shift 706 and reduce (12)
	T_PRINT		shift 705 and reduce (48)
	T_YIELD		shift 704 and reduce (49)
	T_INSTANCEOF	shift 703 and reduce (13)
	T_NEW		shift 702 and reduce (14)
	T_CLONE		shift 701 and reduce (15)
	T_EXIT		shift 667 and reduce (16)
	T_IF		shift 731 and reduce (17)
	T_ELSEIF	shift 794 and reduce (18)
	T_ELSE		shift 858 and reduce (19)
	T_ENDIF		shift 887 and reduce (20)
	T_STRING	shift 445
	T_ECHO		shift 885 and reduce (21)
	T_DO		shift 884 and reduce (22)
	T_WHILE		shift 883 and reduce (23)
	T_ENDWHILE	shift 882 and reduce (24)
	T_FOR		shift 881 and reduce (25)
	T_ENDFOR	shift 880 and reduce (26)
	T_FOREACH	shift 879 and reduce (27)
	T_ENDFOREACH	shift 878 and reduce (28)
	T_DECLARE	shift 877 and reduce (29)
	T_ENDDECLARE	shift 876 and reduce (30)
	T_AS		shift 875 and reduce (31)
	T_SWITCH	shift 873 and reduce (51)
	T_ENDSWITCH	shift 859 and reduce (52)
	T_CASE		shift 872 and reduce (53)
	T_DEFAULT	shift 871 and reduce (54)
	T_BREAK		shift 870 and reduce (55)
	T_CONTINUE	shift 869 and reduce (43)
	T_GOTO		shift 868 and reduce (44)
	T_FUNCTION	shift 867 and reduce (45)
	T_CONST		shift 866 and reduce (46)
	T_RETURN	shift 865 and reduce (47)
	T_TRY		shift 864 and reduce (32)
	T_CATCH		shift 863 and reduce (33)
	T_FINALLY	shift 862 and reduce (34)
	T_THROW		shift 861 and reduce (35)
	T_USE		shift 860 and reduce (36)
	T_INSTEADOF	shift 888 and reduce (37)
	T_GLOBAL	shift 874 and reduce (38)
	T_STATIC	shift 567 and reduce (291)
	T_ABSTRACT	shift 576 and reduce (292)
	T_FINAL		shift 572 and reduce (293)
	T_PRIVATE	shift 569 and reduce (290)
	T_PROTECTED	shift 573 and reduce (289)
	T_PUBLIC	shift 575 and reduce (288)
	T_VAR		shift 915 and reduce (39)
	T_UNSET		shift 914 and reduce (40)
	T_ISSET		shift 913 and reduce (41)
	T_EMPTY		shift 912 and reduce (42)
	T_HALT_COMPILER	shift 911 and reduce (72)
	T_CLASS		shift 910 and reduce (63)
	T_TRAIT		shift 909 and reduce (61)
	T_INTERFACE	shift 908 and reduce (62)
	T_EXTENDS	shift 907 and reduce (58)
	T_IMPLEMENTS	shift 905 and reduce (59)
	T_LIST		shift 891 and reduce (50)
	T_ARRAY		shift 904 and reduce (56)
	T_CALLABLE	shift 903 and reduce (57)
	T_CLASS_C	shift 902 and reduce (64)
	T_TRAIT_C	shift 901 and reduce (65)
	T_METHOD_C	shift 900 and reduce (67)
	T_FUNC_C	shift 899 and reduce (66)
	T_LINE		shift 898 and reduce (68)
	T_FILE		shift 897 and reduce (69)
	T_NAMESPACE	shift 896 and reduce (60)
	T_NS_C		shift 895 and reduce (71)
	T_DIR		shift 894 and reduce (70)
	reserved_non_modifiers	goto 448
	member_modifier	goto 5
	.		error

state 11
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' . for_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 561
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 568 and reduce (194)
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	for_statement	goto 583 and reduce (143)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 12
	(139) non_empty_statement : T_IF '(' expr ')' . statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' expr ')' . ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 827
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 840
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 13
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' . foreach_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 593
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 608 and reduce (196)
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	foreach_statement	goto 630 and reduce (155)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 14
	(141) non_empty_statement : T_WHILE '(' expr ')' . while_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 839
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 838 and reduce (215)
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	while_statement	goto 837 and reduce (141)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 15
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' . declare_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 835
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 834 and reduce (199)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 133
	non_empty_statement	goto 833 and reduce (198)
	variable	goto 207
	declare_statement	goto 832 and reduce (156)
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 16
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' . foreach_statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 593
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 608 and reduce (196)
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	foreach_statement	goto 600 and reduce (154)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 17
	(224) else_single : T_ELSE . statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 597 and reduce (224)
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 18
	(142) non_empty_statement : T_DO . statement T_WHILE '(' expr ')' ';' 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 523
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 19
	(219) elseif : T_ELSEIF '(' expr ')' . statement 

	error		shift 760 and reduce (161)
	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_IF		shift 420
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 418
	T_VARIABLE	shift 757 and reduce (456)
	T_INLINE_HTML	shift 756 and reduce (151)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_ECHO		shift 110
	T_DO		shift 18
	T_WHILE		shift 415
	T_FOR		shift 413
	T_FOREACH	shift 412
	T_DECLARE	shift 411
	T_SWITCH	shift 410
	T_BREAK		shift 80
	T_CONTINUE	shift 109
	T_GOTO		shift 409
	T_FUNCTION	shift 361
	T_RETURN	shift 132
	T_TRY		shift 405
	T_THROW		shift 131
	T_GLOBAL	shift 305
	T_STATIC	shift 306
	T_UNSET		shift 451
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	';'		shift 744 and reduce (163)
	'{'		shift 743
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	statement	goto 659 and reduce (219)
	expr		goto 133
	non_empty_statement	goto 738 and reduce (162)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 20
	(246) argument_list : '(' . ')' 
	(247) argument_list : '(' . non_empty_argument_list no_comma ')' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 221
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	T_ELLIPSIS	shift 69
	'('		shift 48
	')'		shift 716 and reduce (246)
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 166
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	non_empty_argument_list	goto 541
	argument	goto 714 and reduce (248)
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 21
	(88) no_comma : ',' . 
	(249) non_empty_argument_list : non_empty_argument_list ',' . argument 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 221
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	T_ELLIPSIS	shift 69
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 166
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	argument	goto 546 and reduce (249)
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (88)

state 22
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . expr '}' 
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '}' 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_STRING_VARNAME	shift 298
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 146
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 23
	(359) expr : expr '?' . expr ':' expr 
	(360) expr : expr '?' . ':' expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	':'		shift 82
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 148
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 24
	(307) expr : variable '=' . expr 
	(308) expr : variable '=' . '&' variable 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 224
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 180
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 25
	(483) inner_array_pair_list : inner_array_pair_list ',' . array_pair 
	(489) array_pair : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 223
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 151
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	array_pair	goto 822 and reduce (483)
	.		reduce (489)

state 26
	(485) array_pair : expr T_DOUBLE_ARROW . expr 
	(487) array_pair : expr T_DOUBLE_ARROW . '&' variable 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 219
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 172
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 27
	(420) dereferencable_scalar : T_ARRAY '(' . array_pair_list ')' 
	(489) array_pair : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 223
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 151
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	array_pair_list	goto 491
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	inner_array_pair_list	goto 379
	array_pair	goto 792 and reduce (484)
	.		reduce (489)

state 28
	(419) array_short_syntax : '[' . array_pair_list ']' 
	(489) array_pair : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'&'		shift 223
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 151
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	array_pair_list	goto 381
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	inner_array_pair_list	goto 379
	array_pair	goto 792 and reduce (484)
	.		reduce (489)

state 29
	(348) expr : expr T_IS_IDENTICAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 202
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 30
	(88) no_comma : ',' . 
	(300) non_empty_expr_list : non_empty_expr_list ',' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 171
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (88)

state 31
	(142) non_empty_statement : T_DO statement T_WHILE '(' . expr ')' ';' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 153
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 32
	(143) non_empty_statement : T_FOR '(' for_expr ';' . for_expr ';' for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 167
	for_expr	goto 417
	expr_list	goto 688 and reduce (303)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 543
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (302)

state 33
	(350) expr : expr T_IS_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 204
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 34
	(351) expr : expr T_IS_NOT_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 203
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 35
	(204) declare_list_element : T_STRING '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 161
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 36
	(354) expr : expr T_IS_SMALLER_OR_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 211
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 37
	(349) expr : expr T_IS_NOT_IDENTICAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 205
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 38
	(352) expr : expr T_SPACESHIP . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 206
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 39
	(353) expr : expr '<' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 212
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 40
	(130) class_const : identifier '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 170
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 41
	(355) expr : expr '>' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 210
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 42
	(341) expr : expr T_SL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 232
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 43
	(342) expr : expr T_SR . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 231
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 44
	(261) static_var : T_VARIABLE '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 169
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 45
	(336) expr : expr '+' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 250
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 46
	(337) expr : expr '-' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 247
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 47
	(335) expr : expr '.' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 245
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 48
	(358) expr : '(' . expr ')' 
	(442) dereferencable : '(' . expr ')' 
	(445) callable_expr : '(' . expr ')' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 156
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 49
	(333) expr : expr '&' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 208
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 50
	(332) expr : expr '|' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 200
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 51
	(144) non_empty_statement : T_SWITCH '(' . expr ')' switch_case_list 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 149
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 52
	(329) expr : expr T_LOGICAL_OR . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 173
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 53
	(298) property_declaration : T_VARIABLE '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 165
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 54
	(363) expr : T_EMPTY '(' . expr ')' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 138
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 55
	(474) list_expr : T_LIST '(' . list_expr_elements ')' 
	(481) list_expr_element : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 140
	variable	goto 199
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 474
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	list_expr_elements	goto 293
	list_expr_element	goto 671 and reduce (476)
	.		reduce (481)

state 56
	(211) case : T_CASE . expr case_separator inner_statement_list 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 135
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 57
	(410) exit_expr : '(' . optional_expr ')' 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 503
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 58
	(463) new_variable : new_variable '{' . expr '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 144
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 59
	(457) simple_variable : '$' '{' . expr '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 152
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 60
	(139) non_empty_statement : T_IF '(' . expr ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' . expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 143
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 61
	(141) non_empty_statement : T_WHILE '(' . expr ')' while_statement 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 154
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 62
	(468) member_name : '{' . expr '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 150
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 63
	(331) expr : expr T_LOGICAL_XOR . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 174
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 64
	(334) expr : expr '^' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 201
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 65
	(330) expr : expr T_LOGICAL_AND . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 176
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 66
	(442) dereferencable : '(' . expr ')' 
	(445) callable_expr : '(' . expr ')' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 145
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 67
	(143) non_empty_statement : T_FOR '(' . for_expr ';' for_expr ';' for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 167
	for_expr	goto 515
	expr_list	goto 688 and reduce (303)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 543
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (302)

state 68
	(154) non_empty_statement : T_FOREACH '(' . expr T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' . expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 155
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 69
	(252) argument : T_ELLIPSIS . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 163
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 70
	(471) property_name : '{' . expr '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 139
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 71
	(361) expr : expr T_COALESCE . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 195
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 72
	(327) expr : expr T_BOOLEAN_OR . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 197
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 73
	(328) expr : expr T_BOOLEAN_AND . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 198
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 74
	(366) expr : T_EVAL '(' . expr ')' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 147
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 75
	(462) new_variable : new_variable '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 358
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 76
	(219) elseif : T_ELSEIF '(' . expr ')' statement 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 141
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 77
	(356) expr : expr T_IS_GREATER_OR_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 209
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 78
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' . for_expr ')' for_statement 
	(302) for_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 167
	for_expr	goto 371
	expr_list	goto 688 and reduce (303)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 543
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (302)

state 79
	(372) expr : T_ARRAY_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 392
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 80
	(145) non_empty_statement : T_BREAK . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 322
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 81
	(322) expr : variable T_POW_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 190
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 82
	(360) expr : expr '?' ':' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 194
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 83
	(305) expr : list_expr '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 185
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 84
	(306) expr : array_short_syntax '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 183
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 85
	(448) callable_variable : dereferencable '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 346
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 86
	(450) callable_variable : dereferencable '{' . expr '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 137
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 87
	(310) expr : T_CLONE . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 787 and reduce (310)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 88
	(449) callable_variable : constant '[' . optional_expr ']' 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 351
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 89
	(377) expr : '@' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 383
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 90
	(375) expr : T_UNSET_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 388
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 91
	(374) expr : T_BOOL_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 390
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 92
	(373) expr : T_OBJECT_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 391
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 93
	(371) expr : T_STRING_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 394
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 94
	(321) expr : variable T_SR_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 192
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 95
	(370) expr : T_DOUBLE_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 399
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 96
	(369) expr : T_INT_CAST . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 357
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 97
	(383) expr : T_YIELD expr T_DOUBLE_ARROW . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 823 and reduce (383)
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 98
	(347) expr : '~' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 348
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 99
	(346) expr : '!' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 314
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 100
	(345) expr : '-' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 350
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 101
	(344) expr : '+' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 353
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 102
	(384) expr : T_YIELD_FROM . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 181
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 103
	(381) expr : T_YIELD . 
	(382) expr : T_YIELD . expr 
	(383) expr : T_YIELD . expr T_DOUBLE_ARROW expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 175
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (381)

state 104
	(380) expr : T_PRINT . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 177
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 105
	(368) expr : T_REQUIRE_ONCE . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 164
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 106
	(367) expr : T_REQUIRE . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 157
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 107
	(365) expr : T_INCLUDE_ONCE . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 159
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 108
	(364) expr : T_INCLUDE . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 158
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 109
	(146) non_empty_statement : T_CONTINUE . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 300
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 110
	(150) non_empty_statement : T_ECHO . expr_list semi 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 167
	expr_list	goto 321
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	non_empty_expr_list	goto 543
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 111
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 160
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 112
	(475) list_expr_elements : list_expr_elements ',' . list_expr_element 
	(481) list_expr_element : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 140
	variable	goto 199
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 474
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	list_expr_element	goto 555 and reduce (475)
	.		reduce (481)

state 113
	(316) expr : variable T_MOD_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 184
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 114
	(315) expr : variable T_CONCAT_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 182
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 115
	(314) expr : variable T_DIV_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 179
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 116
	(222) new_elseif : T_ELSEIF '(' . expr ')' ':' inner_statement_list 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 142
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 117
	(313) expr : variable T_MUL_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 178
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 118
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}' 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 136
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 119
	(312) expr : variable T_MINUS_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 193
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 120
	(318) expr : variable T_OR_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 188
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 121
	(311) expr : variable T_PLUS_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 186
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 122
	(126) constant_declaration : T_STRING '=' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 168
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 123
	(343) expr : expr T_POW . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 476
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 124
	(340) expr : expr '%' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 326
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 125
	(339) expr : expr '/' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 320
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 126
	(338) expr : expr '*' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 315
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 127
	(317) expr : variable T_AND_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 187
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 128
	(359) expr : expr '?' expr ':' . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 196
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 129
	(319) expr : variable T_XOR_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 189
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 130
	(320) expr : variable T_SL_EQUAL . expr 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 191
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 131
	(158) non_empty_statement : T_THROW . expr semi 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 134
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 132
	(147) non_empty_statement : T_RETURN . optional_expr semi 
	(439) optional_expr : . 

	T_INCLUDE	shift 108
	T_INCLUDE_ONCE	shift 107
	T_EVAL		shift 429
	T_REQUIRE	shift 106
	T_REQUIRE_ONCE	shift 105
	T_PRINT		shift 104
	T_YIELD		shift 103
	T_YIELD_FROM	shift 102
	'+'		shift 101
	'-'		shift 100
	'!'		shift 99
	'~'		shift 98
	T_INC		shift 218
	T_DEC		shift 217
	T_INT_CAST	shift 96
	T_DOUBLE_CAST	shift 95
	T_STRING_CAST	shift 93
	T_ARRAY_CAST	shift 79
	T_OBJECT_CAST	shift 92
	T_BOOL_CAST	shift 91
	T_UNSET_CAST	shift 90
	'@'		shift 89
	'['		shift 28
	T_NEW		shift 233
	T_CLONE		shift 87
	T_EXIT		shift 426
	T_LNUMBER	shift 759 and reduce (423)
	T_DNUMBER	shift 758 and reduce (424)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_FUNCTION	shift 361
	T_STATIC	shift 355
	T_ISSET		shift 465
	T_EMPTY		shift 464
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_CLASS_C	shift 752 and reduce (428)
	T_TRAIT_C	shift 751 and reduce (429)
	T_METHOD_C	shift 750 and reduce (430)
	T_FUNC_C	shift 749 and reduce (431)
	T_LINE		shift 748 and reduce (425)
	T_FILE		shift 746 and reduce (426)
	T_START_HEREDOC	shift 246
	T_NAMESPACE	shift 343
	T_NS_C		shift 732 and reduce (432)
	T_DIR		shift 745 and reduce (427)
	T_NS_SEPARATOR	shift 450
	'('		shift 48
	'`'		shift 265
	'"'		shift 264
	'$'		shift 266
	namespace_name_parts	goto 446
	expr		goto 162
	optional_expr	goto 327
	variable	goto 207
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 402
	array_short_syntax	goto 370
	simple_variable	goto 736 and reduce (447)
	new_expr	goto 735 and reduce (309)
	scalar		goto 734 and reduce (378)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 362
	dereferencable_scalar	goto 242
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (439)

state 133
	(152) non_empty_statement : expr . semi 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	error		shift 765 and reduce (86)
	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	';'		shift 763 and reduce (85)
	semi		goto 699 and reduce (152)
	.		error

state 134
	(158) non_empty_statement : T_THROW expr . semi 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	error		shift 765 and reduce (86)
	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	';'		shift 763 and reduce (85)
	semi		goto 680 and reduce (158)
	.		error

state 135
	(211) case : T_CASE expr . case_separator inner_statement_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	':'		shift 636 and reduce (213)
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	';'		shift 637 and reduce (214)
	case_separator	goto 633
	.		error

state 136
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	']'		shift 393
	.		error

state 137
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(450) callable_variable : dereferencable '{' expr . '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	'}'		shift 845 and reduce (450)
	.		error

state 138
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(363) expr : T_EMPTY '(' expr . ')' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 801 and reduce (363)
	.		error

state 139
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(471) property_name : '{' expr . '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	'}'		shift 562 and reduce (471)
	.		error

state 140
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(479) list_expr_element : expr . T_DOUBLE_ARROW variable 
	(480) list_expr_element : expr . T_DOUBLE_ARROW list_expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	T_DOUBLE_ARROW	shift 215
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		error

state 141
	(219) elseif : T_ELSEIF '(' expr . ')' statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 19
	.		error

state 142
	(222) new_elseif : T_ELSEIF '(' expr . ')' ':' inner_statement_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 366
	.		error

state 143
	(139) non_empty_statement : T_IF '(' expr . ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF '(' expr . ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 12
	.		error

state 144
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(463) new_variable : new_variable '{' expr . '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	'}'		shift 841 and reduce (463)
	.		error

state 145
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(442) dereferencable : '(' expr . ')' 
	(445) callable_expr : '(' expr . ')' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 334
	.		error

state 146
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr . '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	'}'		shift 825 and reduce (499)
	.		error

state 147
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(366) expr : T_EVAL '(' expr . ')' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 856 and reduce (366)
	.		error

state 148
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(359) expr : expr '?' expr . ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	':'		shift 128
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		error

state 149
	(144) non_empty_statement : T_SWITCH '(' expr . ')' switch_case_list 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 313
	.		error

state 150
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(468) member_name : '{' expr . '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	'}'		shift 560 and reduce (468)
	.		error

state 151
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(485) array_pair : expr . T_DOUBLE_ARROW expr 
	(486) array_pair : expr . 
	(487) array_pair : expr . T_DOUBLE_ARROW '&' variable 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	T_DOUBLE_ARROW	shift 26
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (486)

state 152
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(457) simple_variable : '$' '{' expr . '}' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	'}'		shift 850 and reduce (457)
	.		error

state 153
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr . ')' ';' 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 454
	.		error

state 154
	(141) non_empty_statement : T_WHILE '(' expr . ')' while_statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 14
	.		error

state 155
	(154) non_empty_statement : T_FOREACH '(' expr . T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' expr . T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	T_AS		shift 214
	.		error

state 156
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(358) expr : '(' expr . ')' 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(442) dereferencable : '(' expr . ')' 
	(445) callable_expr : '(' expr . ')' 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	')'		shift 243
	.		error

state 157
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(367) expr : T_REQUIRE expr . 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (367)

state 158
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(364) expr : T_INCLUDE expr . 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (364)

state 159
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(365) expr : T_INCLUDE_ONCE expr . 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (365)

state 160
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (236)

state 161
	(204) declare_list_element : T_STRING '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (204)

state 162
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(440) optional_expr : expr . 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (440)

state 163
	(252) argument : T_ELLIPSIS expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (252)

state 164
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(368) expr : T_REQUIRE_ONCE expr . 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (368)

state 165
	(298) property_declaration : T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (298)

state 166
	(250) argument : expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (250)

state 167
	(301) non_empty_expr_list : expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (301)

state 168
	(126) constant_declaration : T_STRING '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (126)

state 169
	(261) static_var : T_VARIABLE '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (261)

state 170
	(130) class_const : identifier '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (130)

state 171
	(300) non_empty_expr_list : non_empty_expr_list ',' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (300)

state 172
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(485) array_pair : expr T_DOUBLE_ARROW expr . 

	T_LOGICAL_OR	shift 52
	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (485)

state 173
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(329) expr : expr T_LOGICAL_OR expr . 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_XOR	shift 63
	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (329)

state 174
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(331) expr : expr T_LOGICAL_XOR expr . 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_LOGICAL_AND	shift 65
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (331)

state 175
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(382) expr : T_YIELD expr . 
	(383) expr : T_YIELD expr . T_DOUBLE_ARROW expr 

	T_DOUBLE_ARROW	shift 97
	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (382)

state 176
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(330) expr : expr T_LOGICAL_AND expr . 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (330)

state 177
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(380) expr : T_PRINT expr . 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (380)

state 178
	(313) expr : variable T_MUL_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (313)

state 179
	(314) expr : variable T_DIV_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (314)

state 180
	(307) expr : variable '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (307)

state 181
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(384) expr : T_YIELD_FROM expr . 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (384)

state 182
	(315) expr : variable T_CONCAT_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (315)

state 183
	(306) expr : array_short_syntax '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (306)

state 184
	(316) expr : variable T_MOD_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (316)

state 185
	(305) expr : list_expr '=' expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (305)

state 186
	(311) expr : variable T_PLUS_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (311)

state 187
	(317) expr : variable T_AND_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (317)

state 188
	(318) expr : variable T_OR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (318)

state 189
	(319) expr : variable T_XOR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (319)

state 190
	(322) expr : variable T_POW_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (322)

state 191
	(320) expr : variable T_SL_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (320)

state 192
	(321) expr : variable T_SR_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (321)

state 193
	(312) expr : variable T_MINUS_EQUAL expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'?'		shift 23
	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (312)

state 194
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(360) expr : expr '?' ':' expr . 
	(361) expr : expr . T_COALESCE expr 

	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (360)

state 195
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(361) expr : expr T_COALESCE expr . 

	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (361)

state 196
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(359) expr : expr '?' expr ':' expr . 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_COALESCE	shift 71
	T_BOOLEAN_OR	shift 72
	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (359)

state 197
	(327) expr : expr . T_BOOLEAN_OR expr 
	(327) expr : expr T_BOOLEAN_OR expr . 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_BOOLEAN_AND	shift 73
	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (327)

state 198
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(328) expr : expr T_BOOLEAN_AND expr . 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'|'		shift 50
	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (328)

state 199
	(304) expr : variable . 
	(307) expr : variable . '=' expr 
	(308) expr : variable . '=' '&' variable 
	(311) expr : variable . T_PLUS_EQUAL expr 
	(312) expr : variable . T_MINUS_EQUAL expr 
	(313) expr : variable . T_MUL_EQUAL expr 
	(314) expr : variable . T_DIV_EQUAL expr 
	(315) expr : variable . T_CONCAT_EQUAL expr 
	(316) expr : variable . T_MOD_EQUAL expr 
	(317) expr : variable . T_AND_EQUAL expr 
	(318) expr : variable . T_OR_EQUAL expr 
	(319) expr : variable . T_XOR_EQUAL expr 
	(320) expr : variable . T_SL_EQUAL expr 
	(321) expr : variable . T_SR_EQUAL expr 
	(322) expr : variable . T_POW_EQUAL expr 
	(323) expr : variable . T_INC 
	(325) expr : variable . T_DEC 
	(441) dereferencable : variable . 
	(477) list_expr_element : variable . 

	','		reduce (477)
	'='		shift 24
	T_PLUS_EQUAL	shift 121
	T_MINUS_EQUAL	shift 119
	T_MUL_EQUAL	shift 117
	T_DIV_EQUAL	shift 115
	T_CONCAT_EQUAL	shift 114
	T_MOD_EQUAL	shift 113
	T_AND_EQUAL	shift 127
	T_OR_EQUAL	shift 120
	T_XOR_EQUAL	shift 129
	T_SL_EQUAL	shift 130
	T_SR_EQUAL	shift 94
	T_POW_EQUAL	shift 81
	T_INC		shift 729 and reduce (323)
	T_DEC		shift 696 and reduce (325)
	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	')'		reduce (477)
	.		reduce (304)

state 200
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(332) expr : expr '|' expr . 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'^'		shift 64
	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (332)

state 201
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(334) expr : expr '^' expr . 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'&'		shift 49
	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (334)

state 202
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(348) expr : expr T_IS_IDENTICAL expr . 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (348)

state 203
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(351) expr : expr T_IS_NOT_EQUAL expr . 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (351)

state 204
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(350) expr : expr T_IS_EQUAL expr . 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (350)

state 205
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(349) expr : expr T_IS_NOT_IDENTICAL expr . 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (349)

state 206
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(352) expr : expr T_SPACESHIP expr . 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	error
	T_IS_NOT_EQUAL	error
	T_IS_IDENTICAL	error
	T_IS_NOT_IDENTICAL	error
	T_SPACESHIP	error
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (352)

state 207
	(304) expr : variable . 
	(307) expr : variable . '=' expr 
	(308) expr : variable . '=' '&' variable 
	(311) expr : variable . T_PLUS_EQUAL expr 
	(312) expr : variable . T_MINUS_EQUAL expr 
	(313) expr : variable . T_MUL_EQUAL expr 
	(314) expr : variable . T_DIV_EQUAL expr 
	(315) expr : variable . T_CONCAT_EQUAL expr 
	(316) expr : variable . T_MOD_EQUAL expr 
	(317) expr : variable . T_AND_EQUAL expr 
	(318) expr : variable . T_OR_EQUAL expr 
	(319) expr : variable . T_XOR_EQUAL expr 
	(320) expr : variable . T_SL_EQUAL expr 
	(321) expr : variable . T_SR_EQUAL expr 
	(322) expr : variable . T_POW_EQUAL expr 
	(323) expr : variable . T_INC 
	(325) expr : variable . T_DEC 
	(441) dereferencable : variable . 

	'='		shift 24
	T_PLUS_EQUAL	shift 121
	T_MINUS_EQUAL	shift 119
	T_MUL_EQUAL	shift 117
	T_DIV_EQUAL	shift 115
	T_CONCAT_EQUAL	shift 114
	T_MOD_EQUAL	shift 113
	T_AND_EQUAL	shift 127
	T_OR_EQUAL	shift 120
	T_XOR_EQUAL	shift 129
	T_SL_EQUAL	shift 130
	T_SR_EQUAL	shift 94
	T_POW_EQUAL	shift 81
	T_INC		shift 729 and reduce (323)
	T_DEC		shift 696 and reduce (325)
	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (304)

state 208
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(333) expr : expr '&' expr . 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_IS_EQUAL	shift 33
	T_IS_NOT_EQUAL	shift 34
	T_IS_IDENTICAL	shift 29
	T_IS_NOT_IDENTICAL	shift 37
	T_SPACESHIP	shift 38
	'<'		shift 39
	T_IS_SMALLER_OR_EQUAL	shift 36
	'>'		shift 41
	T_IS_GREATER_OR_EQUAL	shift 77
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (333)

state 209
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(356) expr : expr T_IS_GREATER_OR_EQUAL expr . 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (356)

state 210
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(355) expr : expr '>' expr . 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (355)

state 211
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(354) expr : expr T_IS_SMALLER_OR_EQUAL expr . 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (354)

state 212
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(353) expr : expr '<' expr . 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'<'		error
	T_IS_SMALLER_OR_EQUAL	error
	'>'		error
	T_IS_GREATER_OR_EQUAL	error
	T_SL		shift 42
	T_SR		shift 43
	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (353)

state 213
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW . foreach_variable ')' foreach_statement 

	'&'		shift 216
	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	foreach_variable	goto 384
	variable	goto 333
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 836 and reduce (229)
	array_short_syntax	goto 331
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 214
	(154) non_empty_statement : T_FOREACH '(' expr T_AS . foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH '(' expr T_AS . variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	'&'		shift 216
	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	foreach_variable	goto 404
	variable	goto 288
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 836 and reduce (229)
	array_short_syntax	goto 331
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 215
	(479) list_expr_element : expr T_DOUBLE_ARROW . variable 
	(480) list_expr_element : expr T_DOUBLE_ARROW . list_expr 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_LIST		shift 458
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 286
	name		goto 290
	class_name	goto 737 and reduce (407)
	list_expr	goto 578 and reduce (480)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 216
	(228) foreach_variable : '&' . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 332
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 217
	(326) expr : T_DEC . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 254
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 218
	(324) expr : T_INC . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 255
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 219
	(487) array_pair : expr T_DOUBLE_ARROW '&' . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 269
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 220
	(88) no_comma : ',' . 
	(173) non_empty_variables_list : non_empty_variables_list ',' . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 284
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		reduce (88)

state 221
	(251) argument : '&' . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 287
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 222
	(153) non_empty_statement : T_UNSET '(' . variables_list ')' semi 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variables_list	goto 528
	variable	goto 285
	name		goto 290
	non_empty_variables_list	goto 545
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 223
	(488) array_pair : '&' . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 270
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 224
	(308) expr : variable '=' '&' . variable 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 253
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 225
	(362) expr : T_ISSET '(' . variables_list ')' 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variables_list	goto 518
	variable	goto 285
	name		goto 290
	non_empty_variables_list	goto 545
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 226
	(502) encaps_var : T_CURLY_OPEN . variable '}' 

	'['		shift 28
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_CONSTANT_ENCAPSED_STRING	shift 755 and reduce (422)
	T_STATIC	shift 762 and reduce (399)
	T_ARRAY		shift 457
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'('		shift 66
	'$'		shift 266
	namespace_name_parts	goto 446
	variable	goto 509
	name		goto 290
	class_name	goto 737 and reduce (407)
	array_short_syntax	goto 779 and reduce (421)
	simple_variable	goto 736 and reduce (447)
	function_call	goto 733 and reduce (451)
	callable_expr	goto 364
	class_name_or_var	goto 363
	dereferencable	goto 283
	constant	goto 344
	dereferencable_scalar	goto 338
	callable_variable	goto 341
	static_member	goto 761 and reduce (454)
	.		error

state 227
	(262) class_statement_list : class_statement_list . class_statement 
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list . '}' 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 567 and reduce (291)
	T_ABSTRACT	shift 576 and reduce (292)
	T_FINAL		shift 572 and reduce (293)
	T_PRIVATE	shift 569 and reduce (290)
	T_PROTECTED	shift 573 and reduce (289)
	T_PUBLIC	shift 575 and reduce (288)
	T_VAR		shift 580 and reduce (283)
	'}'		shift 609 and reduce (387)
	class_statement	goto 587 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 556 and reduce (286)
	non_empty_member_modifiers	goto 238
	.		reduce (284)

state 228
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 567 and reduce (291)
	T_ABSTRACT	shift 576 and reduce (292)
	T_FINAL		shift 572 and reduce (293)
	T_PRIVATE	shift 569 and reduce (290)
	T_PROTECTED	shift 573 and reduce (289)
	T_PUBLIC	shift 575 and reduce (288)
	T_VAR		shift 580 and reduce (283)
	'}'		shift 602 and reduce (180)
	class_statement	goto 587 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 556 and reduce (286)
	non_empty_member_modifiers	goto 238
	.		reduce (284)

state 229
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 567 and reduce (291)
	T_ABSTRACT	shift 576 and reduce (292)
	T_FINAL		shift 572 and reduce (293)
	T_PRIVATE	shift 569 and reduce (290)
	T_PROTECTED	shift 573 and reduce (289)
	T_PUBLIC	shift 575 and reduce (288)
	T_VAR		shift 580 and reduce (283)
	'}'		shift 585 and reduce (181)
	class_statement	goto 587 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 556 and reduce (286)
	non_empty_member_modifiers	goto 238
	.		reduce (284)

state 230
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list . '}' 
	(262) class_statement_list : class_statement_list . class_statement 
	(284) method_modifiers : . 

	T_USE		shift 268
	T_STATIC	shift 567 and reduce (291)
	T_ABSTRACT	shift 576 and reduce (292)
	T_FINAL		shift 572 and reduce (293)
	T_PRIVATE	shift 569 and reduce (290)
	T_PROTECTED	shift 573 and reduce (289)
	T_PUBLIC	shift 575 and reduce (288)
	T_VAR		shift 580 and reduce (283)
	'}'		shift 619 and reduce (179)
	class_statement	goto 587 and reduce (262)
	variable_modifiers	goto 416
	method_modifiers	goto 304
	member_modifier	goto 556 and reduce (286)
	non_empty_member_modifiers	goto 238
	.		reduce (284)

state 231
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(342) expr : expr T_SR expr . 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (342)

state 232
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(341) expr : expr T_SL expr . 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'+'		shift 45
	'-'		shift 46
	'.'		shift 47
	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (341)

state 233
	(388) new_expr : T_NEW . class_name_reference ctor_arguments 
	(389) new_expr : T_NEW . anonymous_class 

	error		shift 791 and reduce (406)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_STATIC	shift 762 and reduce (399)
	T_CLASS		shift 377
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'$'		shift 266
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 535
	simple_variable	goto 789 and reduce (461)
	class_name_reference	goto 537
	anonymous_class	goto 788 and reduce (389)
	new_variable	goto 263
	.		error

state 234
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 244
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	')'		reduce (232)
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	parameter_list	goto 424
	non_empty_parameter_list	goto 440
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 442
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 235
	(385) expr : T_FUNCTION optional_ref '(' . parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 244
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	')'		reduce (232)
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	parameter_list	goto 439
	non_empty_parameter_list	goto 440
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 442
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 236
	(88) no_comma : ',' . 
	(234) non_empty_parameter_list : non_empty_parameter_list ',' . parameter 
	(242) optional_param_type : . 

	'?'		shift 244
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	')'		reduce (88)
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	parameter	goto 661 and reduce (234)
	optional_param_type	goto 442
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 237
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' . parameter_list ')' optional_return_type method_body 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 244
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	')'		reduce (232)
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	parameter_list	goto 365
	non_empty_parameter_list	goto 440
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 442
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 238
	(282) variable_modifiers : non_empty_member_modifiers . 
	(285) method_modifiers : non_empty_member_modifiers . 
	(287) non_empty_member_modifiers : non_empty_member_modifiers . member_modifier 

	T_VARIABLE	reduce (282)
	T_STATIC	shift 567 and reduce (291)
	T_ABSTRACT	shift 576 and reduce (292)
	T_FINAL		shift 572 and reduce (293)
	T_PRIVATE	shift 569 and reduce (290)
	T_PROTECTED	shift 573 and reduce (289)
	T_PUBLIC	shift 575 and reduce (288)
	member_modifier	goto 604 and reduce (287)
	.		reduce (285)

state 239
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' . parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(242) optional_param_type : . 
	(232) parameter_list : . 

	'?'		shift 244
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	')'		reduce (232)
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	parameter_list	goto 423
	non_empty_parameter_list	goto 440
	parameter	goto 813 and reduce (233)
	optional_param_type	goto 442
	type_expr	goto 812 and reduce (243)
	type		goto 811 and reduce (237)
	.		reduce (242)

state 240
	(357) expr : expr T_INSTANCEOF . class_name_reference 

	error		shift 791 and reduce (406)
	T_STRING	shift 747 and reduce (82)
	T_VARIABLE	shift 757 and reduce (456)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	'$'		shift 266
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 535
	simple_variable	goto 789 and reduce (461)
	class_name_reference	goto 717 and reduce (357)
	new_variable	goto 263
	.		error

state 241
	(245) optional_return_type : ':' . type_expr 

	'?'		shift 244
	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	type_expr	goto 643 and reduce (245)
	type		goto 811 and reduce (237)
	.		error

state 242
	(433) scalar : dereferencable_scalar . 
	(443) dereferencable : dereferencable_scalar . 
	(446) callable_expr : dereferencable_scalar . 

	'['		reduce (443)
	T_OBJECT_OPERATOR	reduce (443)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (443)
	'{'		reduce (443)
	'('		reduce (446)
	.		reduce (433)

state 243
	(358) expr : '(' expr ')' . 
	(442) dereferencable : '(' expr ')' . 
	(445) callable_expr : '(' expr ')' . 

	'['		reduce (442)
	T_OBJECT_OPERATOR	reduce (442)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (442)
	'{'		reduce (442)
	'('		reduce (445)
	.		reduce (358)

state 244
	(238) type_expr : '?' . type 

	T_STRING	shift 747 and reduce (82)
	T_ARRAY		shift 816 and reduce (240)
	T_CALLABLE	shift 815 and reduce (241)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 814 and reduce (239)
	type		goto 829 and reduce (238)
	.		error

state 245
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(335) expr : expr '.' expr . 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (335)

state 246
	(435) scalar : T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
	(436) scalar : T_START_HEREDOC . T_END_HEREDOC 
	(438) scalar : T_START_HEREDOC . encaps_list T_END_HEREDOC 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 480
	T_END_HEREDOC	shift 771 and reduce (436)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	encaps_list	goto 252
	encaps_var	goto 770 and reduce (492)
	encaps_string_part	goto 276
	encaps_base_var	goto 301
	.		error

state 247
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(337) expr : expr '-' expr . 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (337)

state 248
	(464) new_variable : new_variable T_OBJECT_OPERATOR . property_name 

	error		shift 890 and reduce (473)
	T_STRING	shift 857 and reduce (470)
	T_VARIABLE	shift 757 and reduce (456)
	'{'		shift 70
	'$'		shift 266
	simple_variable	goto 826 and reduce (472)
	property_name	goto 820 and reduce (464)
	.		error

state 249
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR . property_name argument_list 
	(455) variable : dereferencable T_OBJECT_OPERATOR . property_name 

	error		shift 890 and reduce (473)
	T_STRING	shift 857 and reduce (470)
	T_VARIABLE	shift 757 and reduce (456)
	'{'		shift 70
	'$'		shift 266
	simple_variable	goto 826 and reduce (472)
	property_name	goto 349
	.		error

state 250
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(336) expr : expr '+' expr . 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	'*'		shift 126
	'/'		shift 125
	'%'		shift 124
	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (336)

state 251
	(437) scalar : '"' encaps_list . '"' 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	'"'		shift 719 and reduce (437)
	encaps_var	goto 683 and reduce (490)
	encaps_string_part	goto 698 and reduce (491)
	encaps_base_var	goto 301
	.		error

state 252
	(438) scalar : T_START_HEREDOC encaps_list . T_END_HEREDOC 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_END_HEREDOC	shift 697 and reduce (438)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	encaps_var	goto 683 and reduce (490)
	encaps_string_part	goto 698 and reduce (491)
	encaps_base_var	goto 301
	.		error

state 253
	(308) expr : variable '=' '&' variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (308)

state 254
	(326) expr : T_DEC variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (326)

state 255
	(324) expr : T_INC variable . 
	(441) dereferencable : variable . 

	'['		reduce (441)
	T_OBJECT_OPERATOR	reduce (441)
	T_PAAMAYIM_NEKUDOTAYIM	reduce (441)
	'{'		reduce (441)
	.		reduce (324)

state 256
	(188) interface_extends_list : T_EXTENDS . class_name_list 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 799 and reduce (188)
	non_empty_class_name_list	goto 455
	.		error

state 257
	(98) top_statement : T_USE . use_declarations semi 
	(99) top_statement : T_USE . use_type use_declarations semi 
	(104) group_use_declaration : T_USE . use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(105) group_use_declaration : T_USE . use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(106) group_use_declaration : T_USE . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
	(107) group_use_declaration : T_USE . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	T_NS_SEPARATOR	shift 487
	namespace_name_parts	goto 486
	namespace_name	goto 485
	use_declarations	goto 328
	use_type	goto 329
	unprefixed_use_declaration	goto 778 and reduce (119)
	non_empty_use_declarations	goto 517
	use_declaration	goto 764 and reduce (113)
	.		error

state 258
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF . class_name_list ';' 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 444
	non_empty_class_name_list	goto 455
	.		error

state 259
	(190) implements_list : T_IMPLEMENTS . class_name_list 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 557 and reduce (190)
	non_empty_class_name_list	goto 455
	.		error

state 260
	(497) encaps_var : encaps_base_var '[' . encaps_var_offset ']' 

	'-'		shift 460
	T_STRING	shift 855 and reduce (503)
	T_VARIABLE	shift 854 and reduce (506)
	T_NUM_STRING	shift 853 and reduce (504)
	encaps_var_offset	goto 461
	.		error

state 261
	(413) backticks_expr : encaps_list . 
	(490) encaps_list : encaps_list . encaps_var 
	(491) encaps_list : encaps_list . encaps_string_part 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	encaps_var	goto 683 and reduce (490)
	encaps_string_part	goto 698 and reduce (491)
	encaps_base_var	goto 301
	.		reduce (413)

state 262
	(88) no_comma : ',' . 
	(193) non_empty_class_name_list : non_empty_class_name_list ',' . class_name 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 603 and reduce (193)
	.		reduce (88)

state 263
	(405) class_name_reference : new_variable . 
	(462) new_variable : new_variable . '[' optional_expr ']' 
	(463) new_variable : new_variable . '{' expr '}' 
	(464) new_variable : new_variable . T_OBJECT_OPERATOR property_name 
	(466) new_variable : new_variable . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	'['		shift 75
	T_OBJECT_OPERATOR	shift 248
	T_PAAMAYIM_NEKUDOTAYIM	shift 294
	'{'		shift 58
	.		reduce (405)

state 264
	(437) scalar : '"' . encaps_list '"' 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 768 and reduce (494)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	encaps_list	goto 251
	encaps_var	goto 770 and reduce (492)
	encaps_string_part	goto 276
	encaps_base_var	goto 301
	.		error

state 265
	(379) expr : '`' . backticks_expr '`' 
	(411) backticks_expr : . 

	T_VARIABLE	shift 772 and reduce (495)
	T_ENCAPSED_AND_WHITESPACE	shift 339
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	backticks_expr	goto 510
	encaps_list	goto 261
	encaps_var	goto 770 and reduce (492)
	encaps_string_part	goto 276
	encaps_base_var	goto 301
	.		reduce (411)

state 266
	(457) simple_variable : '$' . '{' expr '}' 
	(458) simple_variable : '$' . simple_variable 
	(459) simple_variable : '$' . error 

	error		shift 767 and reduce (459)
	T_VARIABLE	shift 757 and reduce (456)
	'{'		shift 59
	'$'		shift 266
	simple_variable	goto 766 and reduce (458)
	.		error

state 267
	(186) extends_from : T_EXTENDS . class_name 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 849 and reduce (186)
	.		error

state 268
	(267) class_statement : T_USE . class_name_list trait_adaptations 

	T_STRING	shift 747 and reduce (82)
	T_STATIC	shift 762 and reduce (399)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 790 and reduce (400)
	class_name	goto 800 and reduce (192)
	class_name_list	goto 302
	non_empty_class_name_list	goto 455
	.		error

state 269
	(441) dereferencable : variable . 
	(487) array_pair : expr T_DOUBLE_ARROW '&' variable . 

	','		reduce (487)
	')'		reduce (487)
	']'		reduce (487)
	.		reduce (441)

state 270
	(441) dereferencable : variable . 
	(488) array_pair : '&' variable . 

	','		reduce (488)
	')'		reduce (488)
	']'		reduce (488)
	.		reduce (441)

state 271
	(206) switch_case_list : '{' ';' case_list . '}' 
	(210) case_list : case_list . case 

	T_CASE		shift 56
	T_DEFAULT	shift 319
	'}'		shift 642 and reduce (206)
	case		goto 624 and reduce (210)
	.		error

state 272
	(208) switch_case_list : ':' ';' case_list . T_ENDSWITCH ';' 
	(210) case_list : case_list . case 

	T_ENDSWITCH	shift 475
	T_CASE		shift 56
	T_DEFAULT	shift 319
	case		goto 624 and reduce (210)
	.		error

state 273
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	use_type	goto 431
	inline_use_declarations	goto 352
	unprefixed_use_declaration	goto 795 and reduce (121)
	non_empty_inline_use_declarations	goto 531
	inline_use_declaration	goto 668 and reduce (116)
	.		error

state 274
	(95) top_statement : T_NAMESPACE . namespace_name semi 
	(96) top_statement : T_NAMESPACE . namespace_name '{' top_statement_list '}' 
	(97) top_statement : T_NAMESPACE . '{' top_statement_list '}' 
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_STRING	shift 747 and reduce (82)
	T_NS_SEPARATOR	shift 505
	'{'		shift 769
	namespace_name_parts	goto 514
	namespace_name	goto 282
	.		error

state 275
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' . inline_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	use_type	goto 431
	inline_use_declarations	goto 432
	unprefixed_use_declaration	goto 795 and reduce (121)
	non_empty_inline_use_declarations	goto 531
	inline_use_declaration	goto 668 and reduce (116)
	.		error

state 276
	(493) encaps_list : encaps_string_part . encaps_var 

	T_VARIABLE	shift 772 and reduce (495)
	T_DOLLAR_OPEN_CURLY_BRACES	shift 22
	T_CURLY_OPEN	shift 226
	encaps_var	goto 715 and reduce (493)
	encaps_base_var	goto 301
	.		error

state 277
	(168) catch : T_CATCH '(' . name_union T_VARIABLE ')' '{' inner_statement_list '}' 

	T_STRING	shift 747 and reduce (82)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name_union	goto 291
	name		goto 574 and reduce (166)
	.		error

state 278
	(205) switch_case_list : '{' case_list . '}' 
	(210) case_list : case_list . case 

	T_CASE		shift 56
	T_DEFAULT	shift 319
	'}'		shift 622 and reduce (205)
	case		goto 624 and reduce (210)
	.		error

state 279
	(90) optional_comma : ',' . 
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' . inline_use_declaration 

	T_STRING	shift 747 and reduce (82)
	T_FUNCTION	shift 781 and reduce (102)
	T_CONST		shift 780 and reduce (103)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	use_type	goto 431
	unprefixed_use_declaration	goto 795 and reduce (121)
	inline_use_declaration	goto 616 and reduce (115)
	.		reduce (90)

state 280
	(167) name_union : name_union '|' . name 

	T_STRING	shift 747 and reduce (82)
	T_NAMESPACE	shift 343
	T_NS_SEPARATOR	shift 450
	namespace_name_parts	goto 446
	name		goto 623 and reduce (167)
	.		error

state 281
	(207) switch_case_list : ':' case_list . T_ENDSWITCH ';' 
	(210) case_list : case_list . case 

	T_ENDSWITCH	shift 380
	T_CASE		shift 56
	T_DEFAULT	shift 319
	case		goto 624 and reduce (210)
	.		error

state 282
	(95) top_statement : T_NAMESPACE namespace_name . semi 
	(96) top_statement : T_NAMESPACE namespace_name . '{' top_statement_list '}' 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	'{'		shift 728
	semi		goto 727 and reduce (95)
	.		error

state 283
	(408) class_name_or_var : dereferencable . 
	(448) callable_variable : dereferencable . '[' optional_expr ']' 
	(450) callable_variable : dereferencable . '{' expr '}' 
	(452) callable_variable : dereferencable . T_OBJECT_OPERATOR property_name argument_list 
	(455) variable : dereferencable . T_OBJECT_OPERATOR property_name 

	'['		shift 85
	T_OBJECT_OPERATOR	shift 249
	'{'		shift 86
	.		reduce (408)

state 284
	(173) non_empty_variables_list : non_empty_variables_list ',' variable . 
	(441) dereferencable : variable . 

	','		reduce (173)
	')'		reduce (173)
	.		reduce (441)

state 285
	(172) non_empty_variables_list : variable . 
	(441) dereferencable : variable . 

	','		reduce (172)
	')'		reduce (172)
	.		reduce (441)

state 286
	(441) dereferencable : variable . 
	(479) list_expr_element : expr T_DOUBLE_ARROW variable . 

	','		reduce (479)
	')'		reduce (479)
	.		reduce (441)

state 287
	(251) argument : '&' variable . 
	(441) dereferencable : variable . 

	','		reduce (251)
	')'		reduce (251)
	.		reduce (441)

state 288
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable . T_DOUBLE_ARROW foreach_variable ')' foreach_statement 
	(227) foreach_variable : variable . 
	(441) dereferencable : variable . 

	T_DOUBLE_ARROW	shift 213
	')'		reduce (227)
	.		reduce (441)

state 289
	(88) no_comma : ',' . 
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' . lexical_var 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	')'		reduce (88)
	optional_ref	goto 495
	lexical_var	goto 621 and reduce (394)
	.		reduce (174)

state 290
	(396) function_call : name . argument_list 
	(400) class_name : name . 
	(416) constant : name . 

	T_PAAMAYIM_NEKUDOTAYIM	reduce (400)
	'('		shift 20
	argument_list	goto 695 and reduce (396)
	.		reduce (416)

state 291
	(167) name_union : name_union . '|' name 
	(168) catch : T_CATCH '(' name_union . T_VARIABLE ')' '{' inner_statement_list '}' 

	'|'		shift 280
	T_VARIABLE	shift 508
	.		error

state 292
	(99) top_statement : T_USE use_type use_declarations . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 807 and reduce (99)
	.		error

state 293
	(474) list_expr : T_LIST '(' list_expr_elements . ')' 
	(475) list_expr_elements : list_expr_elements . ',' list_expr_element 

	','		shift 112
	')'		shift 797 and reduce (474)
	.		error

state 294
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 266
	simple_variable	goto 819 and reduce (466)
	.		error

state 295
	(88) no_comma : ',' . 
	(112) non_empty_use_declarations : non_empty_use_declarations ',' . use_declaration 

	T_STRING	shift 747 and reduce (82)
	T_NS_SEPARATOR	shift 436
	namespace_name_parts	goto 514
	namespace_name	goto 485
	unprefixed_use_declaration	goto 778 and reduce (119)
	use_declaration	goto 806 and reduce (112)
	.		reduce (88)

state 296
	(88) no_comma : ',' . 
	(254) non_empty_global_var_list : non_empty_global_var_list ',' . global_var 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 266
	global_var	goto 805 and reduce (254)
	simple_variable	goto 776 and reduce (256)
	.		reduce (88)

state 297
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM . simple_variable 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 266
	simple_variable	goto 821 and reduce (465)
	.		error

state 298
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '}' 
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}' 

	'['		shift 118
	'}'		shift 810 and reduce (500)
	.		error

state 299
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 368
	.		error

state 300
	(146) non_empty_statement : T_CONTINUE optional_expr . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 685 and reduce (146)
	.		error

state 301
	(496) encaps_var : encaps_base_var . 
	(497) encaps_var : encaps_base_var . '[' encaps_var_offset ']' 
	(498) encaps_var : encaps_base_var . T_OBJECT_OPERATOR T_STRING 

	'['		shift 260
	T_OBJECT_OPERATOR	shift 501
	.		reduce (496)

state 302
	(267) class_statement : T_USE class_name_list . trait_adaptations 

	';'		shift 612 and reduce (268)
	'{'		shift 658
	trait_adaptations	goto 590 and reduce (267)
	.		error

state 303
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches . optional_finally 
	(165) catches : catches . catch 
	(169) optional_finally : . 

	T_CATCH		shift 359
	T_FINALLY	shift 354
	optional_finally	goto 654 and reduce (157)
	catch		goto 652 and reduce (165)
	.		reduce (169)

state 304
	(265) class_statement : method_modifiers . T_CONST class_const_list ';' 
	(266) class_statement : method_modifiers . T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body 

	T_FUNCTION	shift 395
	T_CONST		shift 7
	.		error

state 305
	(148) non_empty_statement : T_GLOBAL . global_var_list semi 

	T_VARIABLE	shift 757 and reduce (456)
	'$'		shift 266
	global_var_list	goto 330
	non_empty_global_var_list	goto 484
	global_var	goto 777 and reduce (255)
	simple_variable	goto 776 and reduce (256)
	.		error

state 306
	(149) non_empty_statement : T_STATIC . static_var_list semi 
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(399) class_name : T_STATIC . 

	T_VARIABLE	shift 479
	T_FUNCTION	shift 469
	static_var_list	goto 318
	non_empty_static_var_list	goto 478
	static_var	goto 775 and reduce (259)
	.		reduce (399)

state 307
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type . method_body 

	';'		shift 588 and reduce (280)
	'{'		shift 571
	method_body	goto 577 and reduce (266)
	.		error

state 308
308: shift/reduce conflict (shift 17, reduce 223) on T_ELSE
308: shift/reduce conflict (shift 389, reduce 223) on T_ELSEIF
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list . else_single 
	(218) elseif_list : elseif_list . elseif 
	(223) else_single : . 

	T_ELSEIF	shift 389
	T_ELSE		shift 17
	else_single	goto 666 and reduce (139)
	elseif		goto 596 and reduce (218)
	.		reduce (223)

state 309
	(153) non_empty_statement : T_UNSET '(' variables_list ')' . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 581 and reduce (153)
	.		error

state 310
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR . '{' unprefixed_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 427
	.		error

state 311
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 273
	.		error

state 312
	(100) top_statement : group_use_declaration . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 730 and reduce (100)
	.		error

state 313
	(144) non_empty_statement : T_SWITCH '(' expr ')' . switch_case_list 

	':'		shift 421
	'{'		shift 422
	switch_case_list	goto 830 and reduce (144)
	.		error

state 314
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(346) expr : '!' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (346)

state 315
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(338) expr : expr '*' expr . 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (338)

state 316
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR . '{' inline_use_declarations '}' 

	T_STRING	shift 718 and reduce (83)
	'{'		shift 275
	.		error

state 317
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list . new_else_single T_ENDIF ';' 
	(221) new_elseif_list : new_elseif_list . new_elseif 
	(225) new_else_single : . 

	T_ELSEIF	shift 522
	T_ELSE		shift 521
	new_else_single	goto 520
	new_elseif	goto 594 and reduce (221)
	.		reduce (225)

state 318
	(149) non_empty_statement : T_STATIC static_var_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 674 and reduce (149)
	.		error

state 319
	(212) case : T_DEFAULT . case_separator inner_statement_list 

	':'		shift 636 and reduce (213)
	';'		shift 637 and reduce (214)
	case_separator	goto 639
	.		error

state 320
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(339) expr : expr '/' expr . 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (339)

state 321
	(150) non_empty_statement : T_ECHO expr_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 690 and reduce (150)
	.		error

state 322
	(145) non_empty_statement : T_BREAK optional_expr . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 686 and reduce (145)
	.		error

state 323
	(159) non_empty_statement : T_GOTO T_STRING . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 684 and reduce (159)
	.		error

state 324
	(178) function_declaration_statement : T_FUNCTION optional_ref . T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	T_STRING	shift 529
	'('		shift 235
	.		error

state 325
	(101) top_statement : T_CONST constant_declaration_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 682 and reduce (101)
	.		error

state 326
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(340) expr : expr '%' expr . 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_INSTANCEOF	shift 240
	T_POW		shift 123
	.		reduce (340)

state 327
	(147) non_empty_statement : T_RETURN optional_expr . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 681 and reduce (147)
	.		error

state 328
	(98) top_statement : T_USE use_declarations . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 678 and reduce (98)
	.		error

state 329
	(99) top_statement : T_USE use_type . use_declarations semi 
	(104) group_use_declaration : T_USE use_type . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(105) group_use_declaration : T_USE use_type . T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	T_NS_SEPARATOR	shift 534
	namespace_name_parts	goto 533
	namespace_name	goto 485
	use_declarations	goto 292
	unprefixed_use_declaration	goto 778 and reduce (119)
	non_empty_use_declarations	goto 517
	use_declaration	goto 764 and reduce (113)
	.		error

state 330
	(148) non_empty_statement : T_GLOBAL global_var_list . semi 

	error		shift 765 and reduce (86)
	';'		shift 763 and reduce (85)
	semi		goto 676 and reduce (148)
	.		error

state 331
	(230) foreach_variable : array_short_syntax . 
	(421) dereferencable_scalar : array_short_syntax . 

	')'		reduce (230)
	.		reduce (421)

state 332
	(228) foreach_variable : '&' variable . 
	(441) dereferencable : variable . 

	')'		reduce (228)
	.		reduce (441)

state 333
	(227) foreach_variable : variable . 
	(441) dereferencable : variable . 

	')'		reduce (227)
	.		reduce (441)

state 334
	(442) dereferencable : '(' expr ')' . 
	(445) callable_expr : '(' expr ')' . 

	'('		reduce (445)
	.		reduce (442)

state 335
	(460) static_member : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM simple_variable . 
	(469) member_name : simple_variable . 

	'('		reduce (469)
	.		reduce (460)

state 336
	(417) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM identifier . 
	(467) member_name : identifier . 

	'('		reduce (467)
	.		reduce (417)

state 337
	(0) $start : start . 

	$EOF		accept
	.		error

state 338
	(443) dereferencable : dereferencable_scalar . 
	(446) callable_expr : dereferencable_scalar . 

	'('		reduce (446)
	.		reduce (443)

state 339
	(412) backticks_expr : T_ENCAPSED_AND_WHITESPACE . 
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	'`'		reduce (412)
	.		reduce (494)

state 340
	(80) identifier : T_STRING . 
	(82) namespace_name_parts : T_STRING . 

	T_AS		reduce (80)
	.		reduce (82)

state 341
	(444) callable_expr : callable_variable . 
	(453) variable : callable_variable . 

	'('		reduce (444)
	.		reduce (453)

state 342
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_NS_SEPARATOR	shift 311
	.		reduce (84)

state 343
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_NS_SEPARATOR	shift 505
	.		error

state 344
	(449) callable_variable : constant . '[' optional_expr ']' 

	'['		shift 88
	.		error

state 345
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name . argument_list 

	'('		shift 20
	argument_list	goto 848 and reduce (398)
	.		error

state 346
	(448) callable_variable : dereferencable '[' optional_expr . ']' 

	']'		shift 847 and reduce (448)
	.		error

state 347
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 646 and reduce (386)
	.		error

state 348
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(347) expr : '~' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 123
	.		reduce (347)

state 349
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name . argument_list 
	(455) variable : dereferencable T_OBJECT_OPERATOR property_name . 

	'('		shift 20
	argument_list	goto 846 and reduce (452)
	.		reduce (455)

state 350
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(345) expr : '-' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 123
	.		reduce (345)

state 351
	(449) callable_variable : constant '[' optional_expr . ']' 

	']'		shift 844 and reduce (449)
	.		error

state 352
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 

	'}'		shift 617 and reduce (107)
	.		error

state 353
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(344) expr : '+' expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 123
	.		reduce (344)

state 354
	(170) optional_finally : T_FINALLY . '{' inner_statement_list '}' 

	'{'		shift 611
	.		error

state 355
	(386) expr : T_STATIC . T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(399) class_name : T_STATIC . 

	T_FUNCTION	shift 469
	.		reduce (399)

state 356
	(387) anonymous_class : T_CLASS ctor_arguments extends_from . implements_list '{' class_statement_list '}' 
	(189) implements_list : . 

	T_IMPLEMENTS	shift 259
	implements_list	goto 414
	.		reduce (189)

state 357
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(369) expr : T_INT_CAST expr . 

	T_POW		shift 123
	.		reduce (369)

state 358
	(462) new_variable : new_variable '[' optional_expr . ']' 

	']'		shift 843 and reduce (462)
	.		error

state 359
	(168) catch : T_CATCH . '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' 

	'('		shift 277
	.		error

state 360
	(235) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE 
	(236) parameter : optional_param_type optional_ref optional_ellipsis . T_VARIABLE '=' expr 

	T_VARIABLE	shift 373
	.		error

state 361
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 502
	.		reduce (174)

state 362
	(434) scalar : constant . 
	(449) callable_variable : constant . '[' optional_expr ']' 

	'['		shift 88
	.		reduce (434)

state 363
	(398) function_call : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM member_name argument_list 
	(417) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM identifier 
	(418) constant : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM error 
	(460) static_member : class_name_or_var . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	T_PAAMAYIM_NEKUDOTAYIM	shift 3
	.		error

state 364
	(397) function_call : callable_expr . argument_list 

	'('		shift 20
	argument_list	goto 694 and reduce (397)
	.		error

state 365
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list . ')' optional_return_type method_body 

	')'		shift 449
	.		error

state 366
	(222) new_elseif : T_ELSEIF '(' expr ')' . ':' inner_statement_list 

	':'		shift 640
	.		error

state 367
	(195) for_statement : ':' inner_statement_list T_ENDFOR . ';' 

	';'		shift 641 and reduce (195)
	.		error

state 368
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	unprefixed_use_declarations	goto 372
	non_empty_unprefixed_use_declarations	goto 386
	unprefixed_use_declaration	goto 607 and reduce (110)
	.		error

state 369
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 

	'}'		shift 615 and reduce (104)
	.		error

state 370
	(306) expr : array_short_syntax . '=' expr 
	(421) dereferencable_scalar : array_short_syntax . 

	'='		shift 84
	.		reduce (421)

state 371
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr . ')' for_statement 

	')'		shift 11
	.		error

state 372
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations . '}' 

	'}'		shift 559 and reduce (105)
	.		error

state 373
	(235) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . 
	(236) parameter : optional_param_type optional_ref optional_ellipsis T_VARIABLE . '=' expr 

	'='		shift 111
	.		reduce (235)

state 374
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 566
	.		error

state 375
	(391) lexical_vars : T_USE '(' . lexical_var_list ')' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 495
	lexical_var_list	goto 496
	non_empty_lexical_var_list	goto 497
	lexical_var	goto 547 and reduce (393)
	.		reduce (174)

state 376
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 629
	.		error

state 377
	(387) anonymous_class : T_CLASS . ctor_arguments extends_from implements_list '{' class_statement_list '}' 
	(414) ctor_arguments : . 

	'('		shift 20
	argument_list	goto 692 and reduce (415)
	ctor_arguments	goto 499
	.		reduce (414)

state 378
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' . '{' inner_statement_list '}' 

	'{'		shift 662
	.		error

state 379
	(482) array_pair_list : inner_array_pair_list . 
	(483) inner_array_pair_list : inner_array_pair_list . ',' array_pair 

	','		shift 25
	.		reduce (482)

state 380
	(207) switch_case_list : ':' case_list T_ENDSWITCH . ';' 

	';'		shift 634 and reduce (207)
	.		error

state 381
	(419) array_short_syntax : '[' array_pair_list . ']' 

	']'		shift 693 and reduce (419)
	.		error

state 382
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE . ';' 

	';'		shift 606 and reduce (200)
	.		error

state 383
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(377) expr : '@' expr . 

	T_POW		shift 123
	.		reduce (377)

state 384
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable . ')' foreach_statement 

	')'		shift 13
	.		error

state 385
	(216) while_statement : ':' inner_statement_list T_ENDWHILE . ';' 

	';'		shift 598 and reduce (216)
	.		error

state 386
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations . optional_comma 
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations . ',' unprefixed_use_declaration 
	(89) optional_comma : . 

	','		shift 466
	optional_comma	goto 613 and reduce (108)
	.		reduce (89)

state 387
	(118) unprefixed_use_declaration : namespace_name T_AS . T_STRING 

	T_STRING	shift 808 and reduce (118)
	.		error

state 388
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(375) expr : T_UNSET_CAST expr . 

	T_POW		shift 123
	.		reduce (375)

state 389
	(219) elseif : T_ELSEIF . '(' expr ')' statement 

	'('		shift 76
	.		error

state 390
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(374) expr : T_BOOL_CAST expr . 

	T_POW		shift 123
	.		reduce (374)

state 391
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(373) expr : T_OBJECT_CAST expr . 

	T_POW		shift 123
	.		reduce (373)

state 392
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(372) expr : T_ARRAY_CAST expr . 

	T_POW		shift 123
	.		reduce (372)

state 393
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}' 

	'}'		shift 626 and reduce (501)
	.		error

state 394
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(371) expr : T_STRING_CAST expr . 

	T_POW		shift 123
	.		reduce (371)

state 395
	(266) class_statement : method_modifiers T_FUNCTION . optional_ref identifier '(' parameter_list ')' optional_return_type method_body 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 6
	.		reduce (174)

state 396
	(294) property_declaration_list : non_empty_property_declaration_list . no_comma 
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list . ',' property_declaration 
	(87) no_comma : . 

	','		shift 532
	no_comma	goto 620 and reduce (294)
	.		reduce (87)

state 397
	(264) class_statement : variable_modifiers property_declaration_list . ';' 

	';'		shift 614 and reduce (264)
	.		error

state 398
	(297) property_declaration : T_VARIABLE . 
	(298) property_declaration : T_VARIABLE . '=' expr 

	'='		shift 53
	.		reduce (297)

state 399
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(370) expr : T_DOUBLE_CAST expr . 

	T_POW		shift 123
	.		reduce (370)

state 400
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
	(390) lexical_vars : . 

	T_USE		shift 437
	lexical_vars	goto 403
	.		reduce (390)

state 401
	(88) no_comma : ',' . 
	(203) non_empty_declare_list : non_empty_declare_list ',' . declare_list_element 

	T_STRING	shift 477
	declare_list_element	goto 831 and reduce (203)
	.		reduce (88)

state 402
	(305) expr : list_expr . '=' expr 

	'='		shift 83
	.		error

state 403
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 524
	.		reduce (244)

state 404
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable . ')' foreach_statement 

	')'		shift 16
	.		error

state 405
	(157) non_empty_statement : T_TRY . '{' inner_statement_list '}' catches optional_finally 

	'{'		shift 782
	.		error

state 406
	(101) top_statement : T_CONST . constant_declaration_list semi 

	T_STRING	shift 516
	constant_declaration_list	goto 325
	non_empty_constant_declaration_list	goto 490
	constant_declaration	goto 783 and reduce (125)
	.		error

state 407
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list . '{' class_statement_list '}' 

	'{'		shift 558
	.		error

state 408
	(178) function_declaration_statement : T_FUNCTION . optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 
	(385) expr : T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 324
	.		reduce (174)

state 409
	(159) non_empty_statement : T_GOTO . T_STRING semi 

	T_STRING	shift 323
	.		error

state 410
	(144) non_empty_statement : T_SWITCH . '(' expr ')' switch_case_list 

	'('		shift 51
	.		error

state 411
	(156) non_empty_statement : T_DECLARE . '(' declare_list ')' declare_statement 

	'('		shift 493
	.		error

state 412
	(154) non_empty_statement : T_FOREACH . '(' expr T_AS foreach_variable ')' foreach_statement 
	(155) non_empty_statement : T_FOREACH . '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement 

	'('		shift 68
	.		error

state 413
	(143) non_empty_statement : T_FOR . '(' for_expr ';' for_expr ';' for_expr ')' for_statement 

	'('		shift 67
	.		error

state 414
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list . '{' class_statement_list '}' 

	'{'		shift 563
	.		error

state 415
	(141) non_empty_statement : T_WHILE . '(' expr ')' while_statement 

	'('		shift 61
	.		error

state 416
	(264) class_statement : variable_modifiers . property_declaration_list ';' 

	T_VARIABLE	shift 398
	property_declaration_list	goto 397
	non_empty_property_declaration_list	goto 396
	property_declaration	goto 605 and reduce (295)
	.		error

state 417
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr . ';' for_expr ')' for_statement 

	';'		shift 78
	.		error

state 418
	(82) namespace_name_parts : T_STRING . 
	(160) non_empty_statement : T_STRING . ':' 

	':'		shift 785 and reduce (160)
	.		reduce (82)

state 419
	(183) class_entry_type : T_ABSTRACT . T_CLASS 

	T_CLASS		shift 774 and reduce (183)
	.		error

state 420
	(139) non_empty_statement : T_IF . '(' expr ')' statement elseif_list else_single 
	(140) non_empty_statement : T_IF . '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 

	'('		shift 60
	.		error

state 421
	(207) switch_case_list : ':' . case_list T_ENDSWITCH ';' 
	(208) switch_case_list : ':' . ';' case_list T_ENDSWITCH ';' 
	(209) case_list : . 

	';'		shift 632
	case_list	goto 281
	.		reduce (209)

state 422
	(205) switch_case_list : '{' . case_list '}' 
	(206) switch_case_list : '{' . ';' case_list '}' 
	(209) case_list : . 

	';'		shift 638
	case_list	goto 278
	.		reduce (209)

state 423
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list . ')' optional_return_type '{' inner_statement_list '}' 

	')'		shift 438
	.		error

state 424
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	')'		shift 400
	.		error

state 425
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' . lexical_vars optional_return_type '{' inner_statement_list '}' 
	(390) lexical_vars : . 

	T_USE		shift 437
	lexical_vars	goto 435
	.		reduce (390)

state 426
	(376) expr : T_EXIT . exit_expr 
	(409) exit_expr : . 

	'('		shift 57
	exit_expr	goto 786 and reduce (376)
	.		reduce (409)

state 427
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' . unprefixed_use_declarations '}' 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	unprefixed_use_declarations	goto 369
	non_empty_unprefixed_use_declarations	goto 386
	unprefixed_use_declaration	goto 607 and reduce (110)
	.		error

state 428
	(235) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE 
	(236) parameter : optional_param_type optional_ref . optional_ellipsis T_VARIABLE '=' expr 
	(176) optional_ellipsis : . 

	T_ELLIPSIS	shift 649 and reduce (177)
	optional_ellipsis	goto 360
	.		reduce (176)

state 429
	(366) expr : T_EVAL . '(' expr ')' 

	'('		shift 74
	.		error

state 430
	(281) method_body : '{' inner_statement_list . '}' 

	'}'		shift 920 and reduce (281)
	.		error

state 431
	(122) inline_use_declaration : use_type . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	unprefixed_use_declaration	goto 651 and reduce (122)
	.		error

state 432
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations . '}' 

	'}'		shift 650 and reduce (106)
	.		error

state 433
	(247) argument_list : '(' non_empty_argument_list no_comma . ')' 

	')'		shift 564 and reduce (247)
	.		error

state 434
	(184) class_entry_type : T_FINAL . T_CLASS 

	T_CLASS		shift 773 and reduce (184)
	.		error

state 435
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 374
	.		reduce (244)

state 436
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	unprefixed_use_declaration	goto 679 and reduce (120)
	.		error

state 437
	(391) lexical_vars : T_USE . '(' lexical_var_list ')' 

	'('		shift 375
	.		error

state 438
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' . optional_return_type '{' inner_statement_list '}' 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 376
	.		reduce (244)

state 439
	(385) expr : T_FUNCTION optional_ref '(' parameter_list . ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	')'		shift 425
	.		error

state 440
	(231) parameter_list : non_empty_parameter_list . no_comma 
	(234) non_empty_parameter_list : non_empty_parameter_list . ',' parameter 
	(87) no_comma : . 

	','		shift 236
	no_comma	goto 828 and reduce (231)
	.		reduce (87)

state 441
	(179) class_declaration_statement : class_entry_type . T_STRING extends_from implements_list '{' class_statement_list '}' 

	T_STRING	shift 494
	.		error

state 442
	(235) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE 
	(236) parameter : optional_param_type . optional_ref optional_ellipsis T_VARIABLE '=' expr 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 428
	.		reduce (174)

state 443
	(200) declare_statement : ':' inner_statement_list . T_ENDDECLARE ';' 

	T_ENDDECLARE	shift 382
	.		error

state 444
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list . ';' 

	';'		shift 644 and reduce (272)
	.		error

state 445
	(275) trait_adaptation : trait_method_reference T_AS T_STRING . ';' 

	';'		shift 645 and reduce (275)
	.		error

state 446
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(401) name : namespace_name_parts . 

	T_NS_SEPARATOR	shift 507
	.		reduce (401)

state 447
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_NS_SEPARATOR	shift 299
	.		reduce (84)

state 448
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers . ';' 

	';'		shift 591 and reduce (276)
	.		error

state 449
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' . optional_return_type method_body 
	(244) optional_return_type : . 

	':'		shift 241
	optional_return_type	goto 307
	.		reduce (244)

state 450
	(402) name : T_NS_SEPARATOR . namespace_name_parts 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 513
	.		error

state 451
	(153) non_empty_statement : T_UNSET . '(' variables_list ')' semi 

	'('		shift 222
	.		error

state 452
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list . '}' 

	'}'		shift 582 and reduce (168)
	.		error

state 453
	(216) while_statement : ':' inner_statement_list . T_ENDWHILE ';' 

	T_ENDWHILE	shift 385
	.		error

state 454
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' . ';' 

	';'		shift 595 and reduce (142)
	.		error

state 455
	(191) class_name_list : non_empty_class_name_list . no_comma 
	(193) non_empty_class_name_list : non_empty_class_name_list . ',' class_name 
	(87) no_comma : . 

	','		shift 262
	no_comma	goto 579 and reduce (191)
	.		reduce (87)

state 456
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier . ';' 

	';'		shift 553 and reduce (273)
	.		error

state 457
	(420) dereferencable_scalar : T_ARRAY . '(' array_pair_list ')' 

	'('		shift 27
	.		error

state 458
	(474) list_expr : T_LIST . '(' list_expr_elements ')' 

	'('		shift 55
	.		error

state 459
	(180) class_declaration_statement : T_INTERFACE . T_STRING interface_extends_list '{' class_statement_list '}' 

	T_STRING	shift 470
	.		error

state 460
	(505) encaps_var_offset : '-' . T_NUM_STRING 

	T_NUM_STRING	shift 549 and reduce (505)
	.		error

state 461
	(497) encaps_var : encaps_base_var '[' encaps_var_offset . ']' 

	']'		shift 550 and reduce (497)
	.		error

state 462
	(181) class_declaration_statement : T_TRAIT . T_STRING '{' class_statement_list '}' 

	T_STRING	shift 471
	.		error

state 463
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list . '}' 

	'}'		shift 551 and reduce (96)
	.		error

state 464
	(363) expr : T_EMPTY . '(' expr ')' 

	'('		shift 54
	.		error

state 465
	(362) expr : T_ISSET . '(' variables_list ')' 

	'('		shift 225
	.		error

state 466
	(90) optional_comma : ',' . 
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 514
	namespace_name	goto 485
	unprefixed_use_declaration	goto 570 and reduce (109)
	.		reduce (90)

state 467
	(157) non_empty_statement : T_TRY '{' inner_statement_list . '}' catches optional_finally 

	'}'		shift 796
	.		error

state 468
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 592 and reduce (178)
	.		error

state 469
	(386) expr : T_STATIC T_FUNCTION . optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 
	(174) optional_ref : . 

	'&'		shift 784 and reduce (175)
	optional_ref	goto 525
	.		reduce (174)

state 470
	(180) class_declaration_statement : T_INTERFACE T_STRING . interface_extends_list '{' class_statement_list '}' 
	(187) interface_extends_list : . 

	T_EXTENDS	shift 256
	interface_extends_list	goto 488
	.		reduce (187)

state 471
	(181) class_declaration_statement : T_TRAIT T_STRING . '{' class_statement_list '}' 

	'{'		shift 672
	.		error

state 472
	(170) optional_finally : T_FINALLY '{' inner_statement_list . '}' 

	'}'		shift 660 and reduce (170)
	.		error

state 473
	(277) trait_method_reference_fully_qualified : name . T_PAAMAYIM_NEKUDOTAYIM identifier 

	T_PAAMAYIM_NEKUDOTAYIM	shift 8
	.		error

state 474
	(305) expr : list_expr . '=' expr 
	(478) list_expr_element : list_expr . 

	'='		shift 83
	.		reduce (478)

state 475
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH . ';' 

	';'		shift 635 and reduce (208)
	.		error

state 476
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(343) expr : expr T_POW expr . 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	T_POW		shift 123
	.		reduce (343)

state 477
	(204) declare_list_element : T_STRING . '=' expr 

	'='		shift 35
	.		error

state 478
	(257) static_var_list : non_empty_static_var_list . no_comma 
	(258) non_empty_static_var_list : non_empty_static_var_list . ',' static_var 
	(87) no_comma : . 

	','		shift 538
	no_comma	goto 673 and reduce (257)
	.		reduce (87)

state 479
	(260) static_var : T_VARIABLE . 
	(261) static_var : T_VARIABLE . '=' expr 

	'='		shift 44
	.		reduce (260)

state 480
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC 
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	T_END_HEREDOC	shift 670 and reduce (435)
	.		reduce (494)

state 481
	(272) trait_adaptation : trait_method_reference_fully_qualified . T_INSTEADOF class_name_list ';' 
	(278) trait_method_reference : trait_method_reference_fully_qualified . 

	T_INSTEADOF	shift 258
	.		reduce (278)

state 482
	(273) trait_adaptation : trait_method_reference . T_AS member_modifier identifier ';' 
	(274) trait_adaptation : trait_method_reference . T_AS member_modifier ';' 
	(275) trait_adaptation : trait_method_reference . T_AS T_STRING ';' 
	(276) trait_adaptation : trait_method_reference . T_AS reserved_non_modifiers ';' 

	T_AS		shift 10
	.		error

state 483
	(156) non_empty_statement : T_DECLARE '(' declare_list . ')' declare_statement 

	')'		shift 15
	.		error

state 484
	(253) global_var_list : non_empty_global_var_list . no_comma 
	(254) non_empty_global_var_list : non_empty_global_var_list . ',' global_var 
	(87) no_comma : . 

	','		shift 296
	no_comma	goto 675 and reduce (253)
	.		reduce (87)

state 485
	(117) unprefixed_use_declaration : namespace_name . 
	(118) unprefixed_use_declaration : namespace_name . T_AS T_STRING 

	T_AS		shift 387
	.		reduce (117)

state 486
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(106) group_use_declaration : T_USE namespace_name_parts . T_NS_SEPARATOR '{' inline_use_declarations '}' 

	T_NS_SEPARATOR	shift 316
	.		reduce (84)

state 487
	(107) group_use_declaration : T_USE T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' 
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 342
	namespace_name	goto 485
	unprefixed_use_declaration	goto 679 and reduce (120)
	.		error

state 488
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list . '{' class_statement_list '}' 

	'{'		shift 798
	.		error

state 489
	(201) declare_list : non_empty_declare_list . no_comma 
	(203) non_empty_declare_list : non_empty_declare_list . ',' declare_list_element 
	(87) no_comma : . 

	','		shift 401
	no_comma	goto 817 and reduce (201)
	.		reduce (87)

state 490
	(123) constant_declaration_list : non_empty_constant_declaration_list . no_comma 
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list . ',' constant_declaration 
	(87) no_comma : . 

	','		shift 530
	no_comma	goto 669 and reduce (123)
	.		reduce (87)

state 491
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list . ')' 

	')'		shift 824 and reduce (420)
	.		error

state 492
	(60) reserved_non_modifiers : T_NAMESPACE . 
	(403) name : T_NAMESPACE . T_NS_SEPARATOR namespace_name_parts 

	T_NS_SEPARATOR	shift 505
	.		reduce (60)

state 493
	(156) non_empty_statement : T_DECLARE '(' . declare_list ')' declare_statement 

	T_STRING	shift 477
	declare_list	goto 483
	non_empty_declare_list	goto 489
	declare_list_element	goto 687 and reduce (202)
	.		error

state 494
	(179) class_declaration_statement : class_entry_type T_STRING . extends_from implements_list '{' class_statement_list '}' 
	(185) extends_from : . 

	T_EXTENDS	shift 267
	extends_from	goto 544
	.		reduce (185)

state 495
	(395) lexical_var : optional_ref . T_VARIABLE 

	T_VARIABLE	shift 665 and reduce (395)
	.		error

state 496
	(391) lexical_vars : T_USE '(' lexical_var_list . ')' 

	')'		shift 664 and reduce (391)
	.		error

state 497
	(392) lexical_var_list : non_empty_lexical_var_list . no_comma 
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list . ',' lexical_var 
	(87) no_comma : . 

	','		shift 289
	no_comma	goto 663 and reduce (392)
	.		reduce (87)

state 498
	(97) top_statement : T_NAMESPACE '{' top_statement_list . '}' 

	'}'		shift 851 and reduce (97)
	.		error

state 499
	(387) anonymous_class : T_CLASS ctor_arguments . extends_from implements_list '{' class_statement_list '}' 
	(185) extends_from : . 

	T_EXTENDS	shift 267
	extends_from	goto 356
	.		reduce (185)

state 500
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(403) name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts . 

	T_NS_SEPARATOR	shift 507
	.		reduce (403)

state 501
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR . T_STRING 

	T_STRING	shift 852 and reduce (498)
	.		error

state 502
	(385) expr : T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	'('		shift 235
	.		error

state 503
	(410) exit_expr : '(' optional_expr . ')' 

	')'		shift 818 and reduce (410)
	.		error

state 504
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list . '}' 

	'}'		shift 618 and reduce (385)
	.		error

state 505
	(403) name : T_NAMESPACE T_NS_SEPARATOR . namespace_name_parts 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 500
	.		error

state 506
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH . ';' 

	';'		shift 601 and reduce (197)
	.		error

state 507
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR . T_STRING 

	T_STRING	shift 718 and reduce (83)
	.		error

state 508
	(168) catch : T_CATCH '(' name_union T_VARIABLE . ')' '{' inner_statement_list '}' 

	')'		shift 378
	.		error

state 509
	(441) dereferencable : variable . 
	(502) encaps_var : T_CURLY_OPEN variable . '}' 

	'}'		shift 842 and reduce (502)
	.		reduce (441)

state 510
	(379) expr : '`' backticks_expr . '`' 

	'`'		shift 720 and reduce (379)
	.		error

state 511
	(142) non_empty_statement : T_DO statement T_WHILE . '(' expr ')' ';' 

	'('		shift 31
	.		error

state 512
	(138) non_empty_statement : '{' inner_statement_list . '}' 

	'}'		shift 721 and reduce (138)
	.		error

state 513
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(402) name : T_NS_SEPARATOR namespace_name_parts . 

	T_NS_SEPARATOR	shift 507
	.		reduce (402)

state 514
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 

	T_NS_SEPARATOR	shift 507
	.		reduce (84)

state 515
	(143) non_empty_statement : T_FOR '(' for_expr . ';' for_expr ';' for_expr ')' for_statement 

	';'		shift 32
	.		error

state 516
	(126) constant_declaration : T_STRING . '=' expr 

	'='		shift 122
	.		error

state 517
	(111) use_declarations : non_empty_use_declarations . no_comma 
	(112) non_empty_use_declarations : non_empty_use_declarations . ',' use_declaration 
	(87) no_comma : . 

	','		shift 295
	no_comma	goto 677 and reduce (111)
	.		reduce (87)

state 518
	(362) expr : T_ISSET '(' variables_list . ')' 

	')'		shift 802 and reduce (362)
	.		error

state 519
	(265) class_statement : method_modifiers T_CONST class_const_list . ';' 

	';'		shift 554 and reduce (265)
	.		error

state 520
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single . T_ENDIF ';' 

	T_ENDIF		shift 540
	.		error

state 521
	(226) new_else_single : T_ELSE . ':' inner_statement_list 

	':'		shift 586
	.		error

state 522
	(222) new_elseif : T_ELSEIF . '(' expr ')' ':' inner_statement_list 

	'('		shift 116
	.		error

state 523
	(142) non_empty_statement : T_DO statement . T_WHILE '(' expr ')' ';' 

	T_WHILE		shift 511
	.		error

state 524
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type . '{' inner_statement_list '}' 

	'{'		shift 657
	.		error

state 525
	(386) expr : T_STATIC T_FUNCTION optional_ref . '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' 

	'('		shift 234
	.		error

state 526
	(127) class_const_list : non_empty_class_const_list . no_comma 
	(128) non_empty_class_const_list : non_empty_class_const_list . ',' class_const 
	(87) no_comma : . 

	','		shift 9
	no_comma	goto 548 and reduce (127)
	.		reduce (87)

state 527
	(130) class_const : identifier . '=' expr 

	'='		shift 40
	.		error

state 528
	(153) non_empty_statement : T_UNSET '(' variables_list . ')' semi 

	')'		shift 309
	.		error

state 529
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING . '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' 

	'('		shift 239
	.		error

state 530
	(88) no_comma : ',' . 
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' . constant_declaration 

	T_STRING	shift 516
	constant_declaration	goto 809 and reduce (124)
	.		reduce (88)

state 531
	(114) inline_use_declarations : non_empty_inline_use_declarations . optional_comma 
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations . ',' inline_use_declaration 
	(89) optional_comma : . 

	','		shift 279
	optional_comma	goto 648 and reduce (114)
	.		reduce (89)

state 532
	(88) no_comma : ',' . 
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' . property_declaration 

	T_VARIABLE	shift 398
	property_declaration	goto 552 and reduce (296)
	.		reduce (88)

state 533
	(83) namespace_name_parts : namespace_name_parts . T_NS_SEPARATOR T_STRING 
	(84) namespace_name : namespace_name_parts . 
	(104) group_use_declaration : T_USE use_type namespace_name_parts . T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 

	T_NS_SEPARATOR	shift 310
	.		reduce (84)

state 534
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR . namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
	(120) use_declaration : T_NS_SEPARATOR . unprefixed_use_declaration 

	T_STRING	shift 747 and reduce (82)
	namespace_name_parts	goto 447
	namespace_name	goto 485
	unprefixed_use_declaration	goto 679 and reduce (120)
	.		error

state 535
	(404) class_name_reference : class_name . 
	(465) new_variable : class_name . T_PAAMAYIM_NEKUDOTAYIM simple_variable 

	T_PAAMAYIM_NEKUDOTAYIM	shift 297
	.		reduce (404)

state 536
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier . '(' parameter_list ')' optional_return_type method_body 

	'('		shift 237
	.		error

state 537
	(388) new_expr : T_NEW class_name_reference . ctor_arguments 
	(414) ctor_arguments : . 

	'('		shift 20
	argument_list	goto 692 and reduce (415)
	ctor_arguments	goto 691 and reduce (388)
	.		reduce (414)

state 538
	(88) no_comma : ',' . 
	(258) non_empty_static_var_list : non_empty_static_var_list ',' . static_var 

	T_VARIABLE	shift 479
	static_var	goto 804 and reduce (258)
	.		reduce (88)

state 539
	(195) for_statement : ':' inner_statement_list . T_ENDFOR ';' 

	T_ENDFOR	shift 367
	.		error

state 540
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF . ';' 

	';'		shift 627 and reduce (140)
	.		error

state 541
	(247) argument_list : '(' non_empty_argument_list . no_comma ')' 
	(249) non_empty_argument_list : non_empty_argument_list . ',' argument 
	(87) no_comma : . 

	','		shift 21
	no_comma	goto 433
	.		reduce (87)

state 542
	(197) foreach_statement : ':' inner_statement_list . T_ENDFOREACH ';' 

	T_ENDFOREACH	shift 506
	.		error

state 543
	(299) expr_list : non_empty_expr_list . no_comma 
	(300) non_empty_expr_list : non_empty_expr_list . ',' expr 
	(87) no_comma : . 

	','		shift 30
	no_comma	goto 689 and reduce (299)
	.		reduce (87)

state 544
	(179) class_declaration_statement : class_entry_type T_STRING extends_from . implements_list '{' class_statement_list '}' 
	(189) implements_list : . 

	T_IMPLEMENTS	shift 259
	implements_list	goto 407
	.		reduce (189)

state 545
	(171) variables_list : non_empty_variables_list . no_comma 
	(173) non_empty_variables_list : non_empty_variables_list . ',' variable 
	(87) no_comma : . 

	','		shift 220
	no_comma	goto 803 and reduce (171)
	.		reduce (87)

state 546
	(249) non_empty_argument_list : non_empty_argument_list ',' argument . 

	.		reduce (249)

state 547
	(393) non_empty_lexical_var_list : lexical_var . 

	.		reduce (393)

state 548
	(127) class_const_list : non_empty_class_const_list no_comma . 

	.		reduce (127)

state 549
	(505) encaps_var_offset : '-' T_NUM_STRING . 

	.		reduce (505)

state 550
	(497) encaps_var : encaps_base_var '[' encaps_var_offset ']' . 

	.		reduce (497)

state 551
	(96) top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}' . 

	.		reduce (96)

state 552
	(296) non_empty_property_declaration_list : non_empty_property_declaration_list ',' property_declaration . 

	.		reduce (296)

state 553
	(273) trait_adaptation : trait_method_reference T_AS member_modifier identifier ';' . 

	.		reduce (273)

state 554
	(265) class_statement : method_modifiers T_CONST class_const_list ';' . 

	.		reduce (265)

state 555
	(475) list_expr_elements : list_expr_elements ',' list_expr_element . 

	.		reduce (475)

state 556
	(286) non_empty_member_modifiers : member_modifier . 

	.		reduce (286)

state 557
	(190) implements_list : T_IMPLEMENTS class_name_list . 

	.		reduce (190)

state 558
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 230
	.		reduce (263)

state 559
	(105) group_use_declaration : T_USE use_type T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 

	.		reduce (105)

state 560
	(468) member_name : '{' expr '}' . 

	.		reduce (468)

state 561
	(195) for_statement : ':' . inner_statement_list T_ENDFOR ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 539
	.		reduce (132)

state 562
	(471) property_name : '{' expr '}' . 

	.		reduce (471)

state 563
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 227
	.		reduce (263)

state 564
	(247) argument_list : '(' non_empty_argument_list no_comma ')' . 

	.		reduce (247)

state 565
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' inner_statement_list . 

	.		reduce (222)

state 566
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 504
	.		reduce (132)

state 567
	(291) member_modifier : T_STATIC . 

	.		reduce (291)

state 568
	(194) for_statement : statement . 

	.		reduce (194)

state 569
	(290) member_modifier : T_PRIVATE . 

	.		reduce (290)

state 570
	(109) non_empty_unprefixed_use_declarations : non_empty_unprefixed_use_declarations ',' unprefixed_use_declaration . 

	.		reduce (109)

state 571
	(281) method_body : '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 430
	.		reduce (132)

state 572
	(293) member_modifier : T_FINAL . 

	.		reduce (293)

state 573
	(289) member_modifier : T_PROTECTED . 

	.		reduce (289)

state 574
	(166) name_union : name . 

	.		reduce (166)

state 575
	(288) member_modifier : T_PUBLIC . 

	.		reduce (288)

state 576
	(292) member_modifier : T_ABSTRACT . 

	.		reduce (292)

state 577
	(266) class_statement : method_modifiers T_FUNCTION optional_ref identifier '(' parameter_list ')' optional_return_type method_body . 

	.		reduce (266)

state 578
	(480) list_expr_element : expr T_DOUBLE_ARROW list_expr . 

	.		reduce (480)

state 579
	(191) class_name_list : non_empty_class_name_list no_comma . 

	.		reduce (191)

state 580
	(283) variable_modifiers : T_VAR . 

	.		reduce (283)

state 581
	(153) non_empty_statement : T_UNSET '(' variables_list ')' semi . 

	.		reduce (153)

state 582
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' inner_statement_list '}' . 

	.		reduce (168)

state 583
	(143) non_empty_statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement . 

	.		reduce (143)

state 584
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list . new_elseif_list new_else_single T_ENDIF ';' 
	(220) new_elseif_list : . 

	new_elseif_list	goto 317
	.		reduce (220)

state 585
	(181) class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}' . 

	.		reduce (181)

state 586
	(226) new_else_single : T_ELSE ':' . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 610 and reduce (226)
	.		reduce (132)

state 587
	(262) class_statement_list : class_statement_list class_statement . 

	.		reduce (262)

state 588
	(280) method_body : ';' . 

	.		reduce (280)

state 589
	(274) trait_adaptation : trait_method_reference T_AS member_modifier ';' . 

	.		reduce (274)

state 590
	(267) class_statement : T_USE class_name_list trait_adaptations . 

	.		reduce (267)

state 591
	(276) trait_adaptation : trait_method_reference T_AS reserved_non_modifiers ';' . 

	.		reduce (276)

state 592
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' inner_statement_list '}' . 

	.		reduce (178)

state 593
	(197) foreach_statement : ':' . inner_statement_list T_ENDFOREACH ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 542
	.		reduce (132)

state 594
	(221) new_elseif_list : new_elseif_list new_elseif . 

	.		reduce (221)

state 595
	(142) non_empty_statement : T_DO statement T_WHILE '(' expr ')' ';' . 

	.		reduce (142)

state 596
	(218) elseif_list : elseif_list elseif . 

	.		reduce (218)

state 597
	(224) else_single : T_ELSE statement . 

	.		reduce (224)

state 598
	(216) while_statement : ':' inner_statement_list T_ENDWHILE ';' . 

	.		reduce (216)

state 599
	(211) case : T_CASE expr case_separator inner_statement_list . 

	.		reduce (211)

state 600
	(154) non_empty_statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement . 

	.		reduce (154)

state 601
	(197) foreach_statement : ':' inner_statement_list T_ENDFOREACH ';' . 

	.		reduce (197)

state 602
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}' . 

	.		reduce (180)

state 603
	(193) non_empty_class_name_list : non_empty_class_name_list ',' class_name . 

	.		reduce (193)

state 604
	(287) non_empty_member_modifiers : non_empty_member_modifiers member_modifier . 

	.		reduce (287)

state 605
	(295) non_empty_property_declaration_list : property_declaration . 

	.		reduce (295)

state 606
	(200) declare_statement : ':' inner_statement_list T_ENDDECLARE ';' . 

	.		reduce (200)

state 607
	(110) non_empty_unprefixed_use_declarations : unprefixed_use_declaration . 

	.		reduce (110)

state 608
	(196) foreach_statement : statement . 

	.		reduce (196)

state 609
	(387) anonymous_class : T_CLASS ctor_arguments extends_from implements_list '{' class_statement_list '}' . 

	.		reduce (387)

state 610
	(226) new_else_single : T_ELSE ':' inner_statement_list . 

	.		reduce (226)

state 611
	(170) optional_finally : T_FINALLY '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 472
	.		reduce (132)

state 612
	(268) trait_adaptations : ';' . 

	.		reduce (268)

state 613
	(108) unprefixed_use_declarations : non_empty_unprefixed_use_declarations optional_comma . 

	.		reduce (108)

state 614
	(264) class_statement : variable_modifiers property_declaration_list ';' . 

	.		reduce (264)

state 615
	(104) group_use_declaration : T_USE use_type namespace_name_parts T_NS_SEPARATOR '{' unprefixed_use_declarations '}' . 

	.		reduce (104)

state 616
	(115) non_empty_inline_use_declarations : non_empty_inline_use_declarations ',' inline_use_declaration . 

	.		reduce (115)

state 617
	(107) group_use_declaration : T_USE T_NS_SEPARATOR namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 

	.		reduce (107)

state 618
	(385) expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 

	.		reduce (385)

state 619
	(179) class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}' . 

	.		reduce (179)

state 620
	(294) property_declaration_list : non_empty_property_declaration_list no_comma . 

	.		reduce (294)

state 621
	(394) non_empty_lexical_var_list : non_empty_lexical_var_list ',' lexical_var . 

	.		reduce (394)

state 622
	(205) switch_case_list : '{' case_list '}' . 

	.		reduce (205)

state 623
	(167) name_union : name_union '|' name . 

	.		reduce (167)

state 624
	(210) case_list : case_list case . 

	.		reduce (210)

state 625
	(129) non_empty_class_const_list : class_const . 

	.		reduce (129)

state 626
	(501) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' . 

	.		reduce (501)

state 627
	(140) non_empty_statement : T_IF '(' expr ')' ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';' . 

	.		reduce (140)

state 628
	(128) non_empty_class_const_list : non_empty_class_const_list ',' class_const . 

	.		reduce (128)

state 629
	(178) function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 468
	.		reduce (132)

state 630
	(155) non_empty_statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement . 

	.		reduce (155)

state 631
	(277) trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM identifier . 

	.		reduce (277)

state 632
	(208) switch_case_list : ':' ';' . case_list T_ENDSWITCH ';' 
	(209) case_list : . 

	case_list	goto 272
	.		reduce (209)

state 633
	(211) case : T_CASE expr case_separator . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 599 and reduce (211)
	.		reduce (132)

state 634
	(207) switch_case_list : ':' case_list T_ENDSWITCH ';' . 

	.		reduce (207)

state 635
	(208) switch_case_list : ':' ';' case_list T_ENDSWITCH ';' . 

	.		reduce (208)

state 636
	(213) case_separator : ':' . 

	.		reduce (213)

state 637
	(214) case_separator : ';' . 

	.		reduce (214)

state 638
	(206) switch_case_list : '{' ';' . case_list '}' 
	(209) case_list : . 

	case_list	goto 271
	.		reduce (209)

state 639
	(212) case : T_DEFAULT case_separator . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 647 and reduce (212)
	.		reduce (132)

state 640
	(222) new_elseif : T_ELSEIF '(' expr ')' ':' . inner_statement_list 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 565 and reduce (222)
	.		reduce (132)

state 641
	(195) for_statement : ':' inner_statement_list T_ENDFOR ';' . 

	.		reduce (195)

state 642
	(206) switch_case_list : '{' ';' case_list '}' . 

	.		reduce (206)

state 643
	(245) optional_return_type : ':' type_expr . 

	.		reduce (245)

state 644
	(272) trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF class_name_list ';' . 

	.		reduce (272)

state 645
	(275) trait_adaptation : trait_method_reference T_AS T_STRING ';' . 

	.		reduce (275)

state 646
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' inner_statement_list '}' . 

	.		reduce (386)

state 647
	(212) case : T_DEFAULT case_separator inner_statement_list . 

	.		reduce (212)

state 648
	(114) inline_use_declarations : non_empty_inline_use_declarations optional_comma . 

	.		reduce (114)

state 649
	(177) optional_ellipsis : T_ELLIPSIS . 

	.		reduce (177)

state 650
	(106) group_use_declaration : T_USE namespace_name_parts T_NS_SEPARATOR '{' inline_use_declarations '}' . 

	.		reduce (106)

state 651
	(122) inline_use_declaration : use_type unprefixed_use_declaration . 

	.		reduce (122)

state 652
	(165) catches : catches catch . 

	.		reduce (165)

state 653
	(271) trait_adaptation_list : trait_adaptation_list trait_adaptation . 

	.		reduce (271)

state 654
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' catches optional_finally . 

	.		reduce (157)

state 655
	(279) trait_method_reference : identifier . 

	.		reduce (279)

state 656
	(269) trait_adaptations : '{' trait_adaptation_list '}' . 

	.		reduce (269)

state 657
	(386) expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars optional_return_type '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 347
	.		reduce (132)

state 658
	(269) trait_adaptations : '{' . trait_adaptation_list '}' 
	(270) trait_adaptation_list : . 

	trait_adaptation_list	goto 4
	.		reduce (270)

state 659
	(219) elseif : T_ELSEIF '(' expr ')' statement . 

	.		reduce (219)

state 660
	(170) optional_finally : T_FINALLY '{' inner_statement_list '}' . 

	.		reduce (170)

state 661
	(234) non_empty_parameter_list : non_empty_parameter_list ',' parameter . 

	.		reduce (234)

state 662
	(168) catch : T_CATCH '(' name_union T_VARIABLE ')' '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 452
	.		reduce (132)

state 663
	(392) lexical_var_list : non_empty_lexical_var_list no_comma . 

	.		reduce (392)

state 664
	(391) lexical_vars : T_USE '(' lexical_var_list ')' . 

	.		reduce (391)

state 665
	(395) lexical_var : optional_ref T_VARIABLE . 

	.		reduce (395)

state 666
	(139) non_empty_statement : T_IF '(' expr ')' statement elseif_list else_single . 

	.		reduce (139)

state 667
	(16) reserved_non_modifiers : T_EXIT . 

	.		reduce (16)

state 668
	(116) non_empty_inline_use_declarations : inline_use_declaration . 

	.		reduce (116)

state 669
	(123) constant_declaration_list : non_empty_constant_declaration_list no_comma . 

	.		reduce (123)

state 670
	(435) scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC . 

	.		reduce (435)

state 671
	(476) list_expr_elements : list_expr_element . 

	.		reduce (476)

state 672
	(181) class_declaration_statement : T_TRAIT T_STRING '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 229
	.		reduce (263)

state 673
	(257) static_var_list : non_empty_static_var_list no_comma . 

	.		reduce (257)

state 674
	(149) non_empty_statement : T_STATIC static_var_list semi . 

	.		reduce (149)

state 675
	(253) global_var_list : non_empty_global_var_list no_comma . 

	.		reduce (253)

state 676
	(148) non_empty_statement : T_GLOBAL global_var_list semi . 

	.		reduce (148)

state 677
	(111) use_declarations : non_empty_use_declarations no_comma . 

	.		reduce (111)

state 678
	(98) top_statement : T_USE use_declarations semi . 

	.		reduce (98)

state 679
	(120) use_declaration : T_NS_SEPARATOR unprefixed_use_declaration . 

	.		reduce (120)

state 680
	(158) non_empty_statement : T_THROW expr semi . 

	.		reduce (158)

state 681
	(147) non_empty_statement : T_RETURN optional_expr semi . 

	.		reduce (147)

state 682
	(101) top_statement : T_CONST constant_declaration_list semi . 

	.		reduce (101)

state 683
	(490) encaps_list : encaps_list encaps_var . 

	.		reduce (490)

state 684
	(159) non_empty_statement : T_GOTO T_STRING semi . 

	.		reduce (159)

state 685
	(146) non_empty_statement : T_CONTINUE optional_expr semi . 

	.		reduce (146)

state 686
	(145) non_empty_statement : T_BREAK optional_expr semi . 

	.		reduce (145)

state 687
	(202) non_empty_declare_list : declare_list_element . 

	.		reduce (202)

state 688
	(303) for_expr : expr_list . 

	.		reduce (303)

state 689
	(299) expr_list : non_empty_expr_list no_comma . 

	.		reduce (299)

state 690
	(150) non_empty_statement : T_ECHO expr_list semi . 

	.		reduce (150)

state 691
	(388) new_expr : T_NEW class_name_reference ctor_arguments . 

	.		reduce (388)

state 692
	(415) ctor_arguments : argument_list . 

	.		reduce (415)

state 693
	(419) array_short_syntax : '[' array_pair_list ']' . 

	.		reduce (419)

state 694
	(397) function_call : callable_expr argument_list . 

	.		reduce (397)

state 695
	(396) function_call : name argument_list . 

	.		reduce (396)

state 696
	(325) expr : variable T_DEC . 

	.		reduce (325)

state 697
	(438) scalar : T_START_HEREDOC encaps_list T_END_HEREDOC . 

	.		reduce (438)

state 698
	(491) encaps_list : encaps_list encaps_string_part . 

	.		reduce (491)

state 699
	(152) non_empty_statement : expr semi . 

	.		reduce (152)

state 700
	(418) constant : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM error . 

	.		reduce (418)

state 701
	(15) reserved_non_modifiers : T_CLONE . 

	.		reduce (15)

state 702
	(14) reserved_non_modifiers : T_NEW . 

	.		reduce (14)

state 703
	(13) reserved_non_modifiers : T_INSTANCEOF . 

	.		reduce (13)

state 704
	(49) reserved_non_modifiers : T_YIELD . 

	.		reduce (49)

state 705
	(48) reserved_non_modifiers : T_PRINT . 

	.		reduce (48)

state 706
	(12) reserved_non_modifiers : T_LOGICAL_AND . 

	.		reduce (12)

state 707
	(11) reserved_non_modifiers : T_LOGICAL_XOR . 

	.		reduce (11)

state 708
	(10) reserved_non_modifiers : T_LOGICAL_OR . 

	.		reduce (10)

state 709
	(9) reserved_non_modifiers : T_REQUIRE_ONCE . 

	.		reduce (9)

state 710
	(8) reserved_non_modifiers : T_REQUIRE . 

	.		reduce (8)

state 711
	(7) reserved_non_modifiers : T_EVAL . 

	.		reduce (7)

state 712
	(6) reserved_non_modifiers : T_INCLUDE_ONCE . 

	.		reduce (6)

state 713
	(5) reserved_non_modifiers : T_INCLUDE . 

	.		reduce (5)

state 714
	(248) non_empty_argument_list : argument . 

	.		reduce (248)

state 715
	(493) encaps_list : encaps_string_part encaps_var . 

	.		reduce (493)

state 716
	(246) argument_list : '(' ')' . 

	.		reduce (246)

state 717
	(357) expr : expr T_INSTANCEOF class_name_reference . 

	.		reduce (357)

state 718
	(83) namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING . 

	.		reduce (83)

state 719
	(437) scalar : '"' encaps_list '"' . 

	.		reduce (437)

state 720
	(379) expr : '`' backticks_expr '`' . 

	.		reduce (379)

state 721
	(138) non_empty_statement : '{' inner_statement_list '}' . 

	.		reduce (138)

state 722
	(131) inner_statement_list_ex : inner_statement_list_ex inner_statement . 

	.		reduce (131)

state 723
	(136) inner_statement : class_declaration_statement . 

	.		reduce (136)

state 724
	(135) inner_statement : function_declaration_statement . 

	.		reduce (135)

state 725
	(134) inner_statement : statement . 

	.		reduce (134)

state 726
	(137) inner_statement : T_HALT_COMPILER . 

	.		reduce (137)

state 727
	(95) top_statement : T_NAMESPACE namespace_name semi . 

	.		reduce (95)

state 728
	(96) top_statement : T_NAMESPACE namespace_name '{' . top_statement_list '}' 
	(3) top_statement_list_ex : . 

	top_statement_list	goto 463
	top_statement_list_ex	goto 2
	.		reduce (3)

state 729
	(323) expr : variable T_INC . 

	.		reduce (323)

state 730
	(100) top_statement : group_use_declaration semi . 

	.		reduce (100)

state 731
	(17) reserved_non_modifiers : T_IF . 

	.		reduce (17)

state 732
	(432) scalar : T_NS_C . 

	.		reduce (432)

state 733
	(451) callable_variable : function_call . 

	.		reduce (451)

state 734
	(378) expr : scalar . 

	.		reduce (378)

state 735
	(309) expr : new_expr . 

	.		reduce (309)

state 736
	(447) callable_variable : simple_variable . 

	.		reduce (447)

state 737
	(407) class_name_or_var : class_name . 

	.		reduce (407)

state 738
	(162) statement : non_empty_statement . 

	.		reduce (162)

state 739
	(93) top_statement : class_declaration_statement . 

	.		reduce (93)

state 740
	(92) top_statement : function_declaration_statement . 

	.		reduce (92)

state 741
	(91) top_statement : statement . 

	.		reduce (91)

state 742
	(2) top_statement_list_ex : top_statement_list_ex top_statement . 

	.		reduce (2)

state 743
	(138) non_empty_statement : '{' . inner_statement_list '}' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 512
	.		reduce (132)

state 744
	(163) statement : ';' . 

	.		reduce (163)

state 745
	(427) scalar : T_DIR . 

	.		reduce (427)

state 746
	(426) scalar : T_FILE . 

	.		reduce (426)

state 747
	(82) namespace_name_parts : T_STRING . 

	.		reduce (82)

state 748
	(425) scalar : T_LINE . 

	.		reduce (425)

state 749
	(431) scalar : T_FUNC_C . 

	.		reduce (431)

state 750
	(430) scalar : T_METHOD_C . 

	.		reduce (430)

state 751
	(429) scalar : T_TRAIT_C . 

	.		reduce (429)

state 752
	(428) scalar : T_CLASS_C . 

	.		reduce (428)

state 753
	(182) class_entry_type : T_CLASS . 

	.		reduce (182)

state 754
	(94) top_statement : T_HALT_COMPILER . 

	.		reduce (94)

state 755
	(422) dereferencable_scalar : T_CONSTANT_ENCAPSED_STRING . 

	.		reduce (422)

state 756
	(151) non_empty_statement : T_INLINE_HTML . 

	.		reduce (151)

state 757
	(456) simple_variable : T_VARIABLE . 

	.		reduce (456)

state 758
	(424) scalar : T_DNUMBER . 

	.		reduce (424)

state 759
	(423) scalar : T_LNUMBER . 

	.		reduce (423)

state 760
	(161) non_empty_statement : error . 

	.		reduce (161)

state 761
	(454) variable : static_member . 

	.		reduce (454)

state 762
	(399) class_name : T_STATIC . 

	.		reduce (399)

state 763
	(85) semi : ';' . 

	.		reduce (85)

state 764
	(113) non_empty_use_declarations : use_declaration . 

	.		reduce (113)

state 765
	(86) semi : error . 

	.		reduce (86)

state 766
	(458) simple_variable : '$' simple_variable . 

	.		reduce (458)

state 767
	(459) simple_variable : '$' error . 

	.		reduce (459)

state 768
	(494) encaps_string_part : T_ENCAPSED_AND_WHITESPACE . 

	.		reduce (494)

state 769
	(97) top_statement : T_NAMESPACE '{' . top_statement_list '}' 
	(3) top_statement_list_ex : . 

	top_statement_list	goto 498
	top_statement_list_ex	goto 2
	.		reduce (3)

state 770
	(492) encaps_list : encaps_var . 

	.		reduce (492)

state 771
	(436) scalar : T_START_HEREDOC T_END_HEREDOC . 

	.		reduce (436)

state 772
	(495) encaps_base_var : T_VARIABLE . 

	.		reduce (495)

state 773
	(184) class_entry_type : T_FINAL T_CLASS . 

	.		reduce (184)

state 774
	(183) class_entry_type : T_ABSTRACT T_CLASS . 

	.		reduce (183)

state 775
	(259) non_empty_static_var_list : static_var . 

	.		reduce (259)

state 776
	(256) global_var : simple_variable . 

	.		reduce (256)

state 777
	(255) non_empty_global_var_list : global_var . 

	.		reduce (255)

state 778
	(119) use_declaration : unprefixed_use_declaration . 

	.		reduce (119)

state 779
	(421) dereferencable_scalar : array_short_syntax . 

	.		reduce (421)

state 780
	(103) use_type : T_CONST . 

	.		reduce (103)

state 781
	(102) use_type : T_FUNCTION . 

	.		reduce (102)

state 782
	(157) non_empty_statement : T_TRY '{' . inner_statement_list '}' catches optional_finally 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 467
	.		reduce (132)

state 783
	(125) non_empty_constant_declaration_list : constant_declaration . 

	.		reduce (125)

state 784
	(175) optional_ref : '&' . 

	.		reduce (175)

state 785
	(160) non_empty_statement : T_STRING ':' . 

	.		reduce (160)

state 786
	(376) expr : T_EXIT exit_expr . 

	.		reduce (376)

state 787
	(310) expr : T_CLONE expr . 
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 

	.		reduce (310)

state 788
	(389) new_expr : T_NEW anonymous_class . 

	.		reduce (389)

state 789
	(461) new_variable : simple_variable . 

	.		reduce (461)

state 790
	(400) class_name : name . 

	.		reduce (400)

state 791
	(406) class_name_reference : error . 

	.		reduce (406)

state 792
	(484) inner_array_pair_list : array_pair . 

	.		reduce (484)

state 793
	(1) start : top_statement_list . 

	.		reduce (1)

state 794
	(18) reserved_non_modifiers : T_ELSEIF . 

	.		reduce (18)

state 795
	(121) inline_use_declaration : unprefixed_use_declaration . 

	.		reduce (121)

state 796
	(157) non_empty_statement : T_TRY '{' inner_statement_list '}' . catches optional_finally 
	(164) catches : . 

	catches		goto 303
	.		reduce (164)

state 797
	(474) list_expr : T_LIST '(' list_expr_elements ')' . 

	.		reduce (474)

state 798
	(180) class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' . class_statement_list '}' 
	(263) class_statement_list : . 

	class_statement_list	goto 228
	.		reduce (263)

state 799
	(188) interface_extends_list : T_EXTENDS class_name_list . 

	.		reduce (188)

state 800
	(192) non_empty_class_name_list : class_name . 

	.		reduce (192)

state 801
	(363) expr : T_EMPTY '(' expr ')' . 

	.		reduce (363)

state 802
	(362) expr : T_ISSET '(' variables_list ')' . 

	.		reduce (362)

state 803
	(171) variables_list : non_empty_variables_list no_comma . 

	.		reduce (171)

state 804
	(258) non_empty_static_var_list : non_empty_static_var_list ',' static_var . 

	.		reduce (258)

state 805
	(254) non_empty_global_var_list : non_empty_global_var_list ',' global_var . 

	.		reduce (254)

state 806
	(112) non_empty_use_declarations : non_empty_use_declarations ',' use_declaration . 

	.		reduce (112)

state 807
	(99) top_statement : T_USE use_type use_declarations semi . 

	.		reduce (99)

state 808
	(118) unprefixed_use_declaration : namespace_name T_AS T_STRING . 

	.		reduce (118)

state 809
	(124) non_empty_constant_declaration_list : non_empty_constant_declaration_list ',' constant_declaration . 

	.		reduce (124)

state 810
	(500) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' . 

	.		reduce (500)

state 811
	(237) type_expr : type . 

	.		reduce (237)

state 812
	(243) optional_param_type : type_expr . 

	.		reduce (243)

state 813
	(233) non_empty_parameter_list : parameter . 

	.		reduce (233)

state 814
	(239) type : name . 

	.		reduce (239)

state 815
	(241) type : T_CALLABLE . 

	.		reduce (241)

state 816
	(240) type : T_ARRAY . 

	.		reduce (240)

state 817
	(201) declare_list : non_empty_declare_list no_comma . 

	.		reduce (201)

state 818
	(410) exit_expr : '(' optional_expr ')' . 

	.		reduce (410)

state 819
	(466) new_variable : new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable . 

	.		reduce (466)

state 820
	(464) new_variable : new_variable T_OBJECT_OPERATOR property_name . 

	.		reduce (464)

state 821
	(465) new_variable : class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable . 

	.		reduce (465)

state 822
	(483) inner_array_pair_list : inner_array_pair_list ',' array_pair . 

	.		reduce (483)

state 823
	(327) expr : expr . T_BOOLEAN_OR expr 
	(328) expr : expr . T_BOOLEAN_AND expr 
	(329) expr : expr . T_LOGICAL_OR expr 
	(330) expr : expr . T_LOGICAL_AND expr 
	(331) expr : expr . T_LOGICAL_XOR expr 
	(332) expr : expr . '|' expr 
	(333) expr : expr . '&' expr 
	(334) expr : expr . '^' expr 
	(335) expr : expr . '.' expr 
	(336) expr : expr . '+' expr 
	(337) expr : expr . '-' expr 
	(338) expr : expr . '*' expr 
	(339) expr : expr . '/' expr 
	(340) expr : expr . '%' expr 
	(341) expr : expr . T_SL expr 
	(342) expr : expr . T_SR expr 
	(343) expr : expr . T_POW expr 
	(348) expr : expr . T_IS_IDENTICAL expr 
	(349) expr : expr . T_IS_NOT_IDENTICAL expr 
	(350) expr : expr . T_IS_EQUAL expr 
	(351) expr : expr . T_IS_NOT_EQUAL expr 
	(352) expr : expr . T_SPACESHIP expr 
	(353) expr : expr . '<' expr 
	(354) expr : expr . T_IS_SMALLER_OR_EQUAL expr 
	(355) expr : expr . '>' expr 
	(356) expr : expr . T_IS_GREATER_OR_EQUAL expr 
	(357) expr : expr . T_INSTANCEOF class_name_reference 
	(359) expr : expr . '?' expr ':' expr 
	(360) expr : expr . '?' ':' expr 
	(361) expr : expr . T_COALESCE expr 
	(383) expr : T_YIELD expr T_DOUBLE_ARROW expr . 

	.		reduce (383)

state 824
	(420) dereferencable_scalar : T_ARRAY '(' array_pair_list ')' . 

	.		reduce (420)

state 825
	(499) encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}' . 

	.		reduce (499)

state 826
	(472) property_name : simple_variable . 

	.		reduce (472)

state 827
	(140) non_empty_statement : T_IF '(' expr ')' ':' . inner_statement_list new_elseif_list new_else_single T_ENDIF ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 584
	.		reduce (132)

state 828
	(231) parameter_list : non_empty_parameter_list no_comma . 

	.		reduce (231)

state 829
	(238) type_expr : '?' type . 

	.		reduce (238)

state 830
	(144) non_empty_statement : T_SWITCH '(' expr ')' switch_case_list . 

	.		reduce (144)

state 831
	(203) non_empty_declare_list : non_empty_declare_list ',' declare_list_element . 

	.		reduce (203)

state 832
	(156) non_empty_statement : T_DECLARE '(' declare_list ')' declare_statement . 

	.		reduce (156)

state 833
	(198) declare_statement : non_empty_statement . 

	.		reduce (198)

state 834
	(199) declare_statement : ';' . 

	.		reduce (199)

state 835
	(200) declare_statement : ':' . inner_statement_list T_ENDDECLARE ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 443
	.		reduce (132)

state 836
	(229) foreach_variable : list_expr . 

	.		reduce (229)

state 837
	(141) non_empty_statement : T_WHILE '(' expr ')' while_statement . 

	.		reduce (141)

state 838
	(215) while_statement : statement . 

	.		reduce (215)

state 839
	(216) while_statement : ':' . inner_statement_list T_ENDWHILE ';' 
	(132) inner_statement_list_ex : . 

	inner_statement_list_ex	goto 1
	inner_statement_list	goto 453
	.		reduce (132)

state 840
	(139) non_empty_statement : T_IF '(' expr ')' statement . elseif_list else_single 
	(217) elseif_list : . 

	elseif_list	goto 308
	.		reduce (217)

state 841
	(463) new_variable : new_variable '{' expr '}' . 

	.		reduce (463)

state 842
	(502) encaps_var : T_CURLY_OPEN variable '}' . 

	.		reduce (502)

state 843
	(462) new_variable : new_variable '[' optional_expr ']' . 

	.		reduce (462)

state 844
	(449) callable_variable : constant '[' optional_expr ']' . 

	.		reduce (449)

state 845
	(450) callable_variable : dereferencable '{' expr '}' . 

	.		reduce (450)

state 846
	(452) callable_variable : dereferencable T_OBJECT_OPERATOR property_name argument_list . 

	.		reduce (452)

state 847
	(448) callable_variable : dereferencable '[' optional_expr ']' . 

	.		reduce (448)

state 848
	(398) function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM member_name argument_list . 

	.		reduce (398)

state 849
	(186) extends_from : T_EXTENDS class_name . 

	.		reduce (186)

state 850
	(457) simple_variable : '$' '{' expr '}' . 

	.		reduce (457)

state 851
	(97) top_statement : T_NAMESPACE '{' top_statement_list '}' . 

	.		reduce (97)

state 852
	(498) encaps_var : encaps_base_var T_OBJECT_OPERATOR T_STRING . 

	.		reduce (498)

state 853
	(504) encaps_var_offset : T_NUM_STRING . 

	.		reduce (504)

state 854
	(506) encaps_var_offset : T_VARIABLE . 

	.		reduce (506)

state 855
	(503) encaps_var_offset : T_STRING . 

	.		reduce (503)

state 856
	(366) expr : T_EVAL '(' expr ')' . 

	.		reduce (366)

state 857
	(470) property_name : T_STRING . 

	.		reduce (470)

state 858
	(19) reserved_non_modifiers : T_ELSE . 

	.		reduce (19)

state 859
	(52) reserved_non_modifiers : T_ENDSWITCH . 

	.		reduce (52)

state 860
	(36) reserved_non_modifiers : T_USE . 

	.		reduce (36)

state 861
	(35) reserved_non_modifiers : T_THROW . 

	.		reduce (35)

state 862
	(34) reserved_non_modifiers : T_FINALLY . 

	.		reduce (34)

state 863
	(33) reserved_non_modifiers : T_CATCH . 

	.		reduce (33)

state 864
	(32) reserved_non_modifiers : T_TRY . 

	.		reduce (32)

state 865
	(47) reserved_non_modifiers : T_RETURN . 

	.		reduce (47)

state 866
	(46) reserved_non_modifiers : T_CONST . 

	.		reduce (46)

state 867
	(45) reserved_non_modifiers : T_FUNCTION . 

	.		reduce (45)

state 868
	(44) reserved_non_modifiers : T_GOTO . 

	.		reduce (44)

state 869
	(43) reserved_non_modifiers : T_CONTINUE . 

	.		reduce (43)

state 870
	(55) reserved_non_modifiers : T_BREAK . 

	.		reduce (55)

state 871
	(54) reserved_non_modifiers : T_DEFAULT . 

	.		reduce (54)

state 872
	(53) reserved_non_modifiers : T_CASE . 

	.		reduce (53)

state 873
	(51) reserved_non_modifiers : T_SWITCH . 

	.		reduce (51)

state 874
	(38) reserved_non_modifiers : T_GLOBAL . 

	.		reduce (38)

state 875
	(31) reserved_non_modifiers : T_AS . 

	.		reduce (31)

state 876
	(30) reserved_non_modifiers : T_ENDDECLARE . 

	.		reduce (30)

state 877
	(29) reserved_non_modifiers : T_DECLARE . 

	.		reduce (29)

state 878
	(28) reserved_non_modifiers : T_ENDFOREACH . 

	.		reduce (28)

state 879
	(27) reserved_non_modifiers : T_FOREACH . 

	.		reduce (27)

state 880
	(26) reserved_non_modifiers : T_ENDFOR . 

	.		reduce (26)

state 881
	(25) reserved_non_modifiers : T_FOR . 

	.		reduce (25)

state 882
	(24) reserved_non_modifiers : T_ENDWHILE . 

	.		reduce (24)

state 883
	(23) reserved_non_modifiers : T_WHILE . 

	.		reduce (23)

state 884
	(22) reserved_non_modifiers : T_DO . 

	.		reduce (22)

state 885
	(21) reserved_non_modifiers : T_ECHO . 

	.		reduce (21)

state 886
	(80) identifier : T_STRING . 

	.		reduce (80)

state 887
	(20) reserved_non_modifiers : T_ENDIF . 

	.		reduce (20)

state 888
	(37) reserved_non_modifiers : T_INSTEADOF . 

	.		reduce (37)

state 889
	(74) semi_reserved : T_STATIC . 

	.		reduce (74)

state 890
	(473) property_name : error . 

	.		reduce (473)

state 891
	(50) reserved_non_modifiers : T_LIST . 

	.		reduce (50)

state 892
	(81) identifier : semi_reserved . 

	.		reduce (81)

state 893
	(73) semi_reserved : reserved_non_modifiers . 

	.		reduce (73)

state 894
	(70) reserved_non_modifiers : T_DIR . 

	.		reduce (70)

state 895
	(71) reserved_non_modifiers : T_NS_C . 

	.		reduce (71)

state 896
	(60) reserved_non_modifiers : T_NAMESPACE . 

	.		reduce (60)

state 897
	(69) reserved_non_modifiers : T_FILE . 

	.		reduce (69)

state 898
	(68) reserved_non_modifiers : T_LINE . 

	.		reduce (68)

state 899
	(66) reserved_non_modifiers : T_FUNC_C . 

	.		reduce (66)

state 900
	(67) reserved_non_modifiers : T_METHOD_C . 

	.		reduce (67)

state 901
	(65) reserved_non_modifiers : T_TRAIT_C . 

	.		reduce (65)

state 902
	(64) reserved_non_modifiers : T_CLASS_C . 

	.		reduce (64)

state 903
	(57) reserved_non_modifiers : T_CALLABLE . 

	.		reduce (57)

state 904
	(56) reserved_non_modifiers : T_ARRAY . 

	.		reduce (56)

state 905
	(59) reserved_non_modifiers : T_IMPLEMENTS . 

	.		reduce (59)

state 906
	(75) semi_reserved : T_ABSTRACT . 

	.		reduce (75)

state 907
	(58) reserved_non_modifiers : T_EXTENDS . 

	.		reduce (58)

state 908
	(62) reserved_non_modifiers : T_INTERFACE . 

	.		reduce (62)

state 909
	(61) reserved_non_modifiers : T_TRAIT . 

	.		reduce (61)

state 910
	(63) reserved_non_modifiers : T_CLASS . 

	.		reduce (63)

state 911
	(72) reserved_non_modifiers : T_HALT_COMPILER . 

	.		reduce (72)

state 912
	(42) reserved_non_modifiers : T_EMPTY . 

	.		reduce (42)

state 913
	(41) reserved_non_modifiers : T_ISSET . 

	.		reduce (41)

state 914
	(40) reserved_non_modifiers : T_UNSET . 

	.		reduce (40)

state 915
	(39) reserved_non_modifiers : T_VAR . 

	.		reduce (39)

state 916
	(79) semi_reserved : T_PUBLIC . 

	.		reduce (79)

state 917
	(78) semi_reserved : T_PROTECTED . 

	.		reduce (78)

state 918
	(77) semi_reserved : T_PRIVATE . 

	.		reduce (77)

state 919
	(76) semi_reserved : T_FINAL . 

	.		reduce (76)

state 920
	(281) method_body : '{' inner_statement_list '}' . 

	.		reduce (281)

/home/ircmaxell/Workspace/PhpYacc/examples/10-php7/grammar.y: there are  2 shift/reduce conflicts

Statistics for /home/ircmaxell/Workspace/PhpYacc/examples/10-php7/grammar.y:
	165 terminal symbols
	143 nonterminal symbols
	507 productions
	921 states
	840 non leaf states
	2 shift/reduce, 0 reduce/reduce conflicts
	1277 lookahead sets used
	13816+1041=14857 action entries
State=>class:

  0=>0     1=>289   2=>302   3=>287   4=>283   5=>286   6=>285   7=>285   8=>285   9=>285 
 10=>284  11=>290  12=>292  13=>291  14=>294  15=>293  16=>291  17=>288  18=>288  19=>288 
 20=>279  21=>278  22=>276  23=>282  24=>281  25=>280  26=>277  27=>280  28=>280  29=>275 
 30=>275  31=>275  32=>275  33=>275  34=>275  35=>275  36=>275  37=>275  38=>275  39=>275 
 40=>275  41=>275  42=>275  43=>275  44=>275  45=>275  46=>275  47=>275  48=>275  49=>275 
 50=>275  51=>275  52=>275  53=>275  54=>275  55=>275  56=>275  57=>275  58=>275  59=>275 
 60=>275  61=>275  62=>275  63=>275  64=>275  65=>275  66=>275  67=>275  68=>275  69=>275 
 70=>275  71=>275  72=>275  73=>275  74=>275  75=>275  76=>275  77=>275  78=>275  79=>275 
 80=>275  81=>275  82=>275  83=>275  84=>275  85=>275  86=>275  87=>275  88=>275  89=>275 
 90=>275  91=>275  92=>275  93=>275  94=>275  95=>275  96=>275  97=>275  98=>275  99=>275 
100=>275 101=>275 102=>275 103=>275 104=>275 105=>275 106=>275 107=>275 108=>275 109=>275 
110=>275 111=>275 112=>275 113=>275 114=>275 115=>275 116=>275 117=>275 118=>275 119=>275 
120=>275 121=>275 122=>275 123=>275 124=>275 125=>275 126=>275 127=>275 128=>275 129=>275 
130=>275 131=>275 132=>275 133=>297 134=>297 135=>248 136=>229 137=>244 138=>238 139=>241 
140=>250 141=>232 142=>236 143=>230 144=>243 145=>235 146=>242 147=>239 148=>247 149=>234 
150=>240 151=>249 152=>245 153=>237 154=>231 155=>246 156=>233 157=>228 158=>228 159=>228 
160=>228 161=>228 162=>228 163=>228 164=>228 165=>228 166=>228 167=>228 168=>228 169=>228 
170=>228 171=>228 172=>228 173=>227 174=>226 175=>224 176=>211 177=>211 178=>211 179=>211 
180=>211 181=>211 182=>211 183=>211 184=>211 185=>211 186=>211 187=>211 188=>211 189=>211 
190=>211 191=>211 192=>211 193=>211 194=>204 195=>204 196=>204 197=>203 198=>201 199=>254 
200=>200 201=>196 202=>194 203=>194 204=>194 205=>194 206=>194 207=>215 208=>195 209=>193 
210=>193 211=>193 212=>193 213=>197 214=>197 215=>182 216=>181 217=>181 218=>181 219=>181 
220=>181 221=>181 222=>181 223=>181 224=>181 225=>181 226=>181 227=>120 228=>119 229=>118 
230=>121 231=>192 232=>192 233=>300 234=>213 235=>213 236=>214 237=>213 238=>139 239=>213 
240=>299 241=>212 242=>178 243=>179 244=>169 245=>190 246=>148 247=>190 248=>301 249=>301 
250=>190 251=>150 252=>151 253=>180 254=>180 255=>180 256=>170 257=>172 258=>170 259=>170 
260=>191 261=>149 262=>170 263=>183 264=>149 265=>147 266=>298 267=>170 268=>170 269=>252 
270=>251 271=>127 272=>129 273=>171 274=>166 275=>171 276=>146 277=>168 278=>126 279=>171 
280=>168 281=>128 282=>296 283=>184 284=>256 285=>257 286=>253 287=>255 288=>225 289=>199 
290=>107 291=>202 292=>295 293=>262 294=>145 295=>165 296=>145 297=>145 298=>186 299=>162 
300=>295 301=>187 302=>90  303=>123 304=>124 305=>145 306=>143 307=>84  308=>176 309=>295 
310=>163 311=>160 312=>295 313=>206 314=>189 315=>189 316=>161 317=>177 318=>295 319=>208 
320=>189 321=>295 322=>295 323=>295 324=>158 325=>295 326=>189 327=>295 328=>295 329=>167 
330=>295 331=>8   332=>9   333=>10  334=>29  335=>26  336=>27  337=>303 338=>28  339=>6   
340=>130 341=>30  342=>103 343=>105 344=>185 345=>31  346=>5   347=>62  348=>188 349=>31  
350=>188 351=>4   352=>59  353=>188 354=>73  355=>125 356=>112 357=>188 358=>3   359=>51  
360=>140 361=>198 362=>185 363=>108 364=>31  365=>20  366=>209 367=>97  368=>164 369=>58  
370=>221 371=>11  372=>55  373=>222 374=>72  375=>198 376=>74  377=>31  378=>76  379=>260 
380=>94  381=>2   382=>89  383=>188 384=>12  385=>87  386=>271 387=>173 388=>188 389=>43  
390=>188 391=>188 392=>188 393=>61  394=>188 395=>198 396=>273 397=>91  398=>219 399=>188 
400=>122 401=>155 402=>220 403=>205 404=>14  405=>78  406=>157 407=>70  408=>198 409=>152 
410=>34  411=>53  412=>41  413=>40  414=>71  415=>39  416=>141 417=>81  418=>210 419=>116 
420=>38  421=>93  422=>96  423=>19  424=>17  425=>122 426=>37  427=>164 428=>100 429=>42  
430=>69  431=>164 432=>63  433=>21  434=>115 435=>205 436=>164 437=>52  438=>205 439=>18  
440=>264 441=>156 442=>198 443=>133 444=>98  445=>99  446=>106 447=>101 448=>85  449=>205 
450=>164 451=>45  452=>56  453=>136 454=>86  455=>265 456=>82  457=>32  458=>36  459=>153 
460=>138 461=>1   462=>154 463=>54  464=>35  465=>46  466=>164 467=>66  468=>57  469=>198 
470=>113 471=>77  472=>64  473=>109 474=>220 475=>95  476=>188 477=>216 478=>274 479=>218 
480=>111 481=>117 482=>131 483=>13  484=>269 485=>132 486=>104 487=>164 488=>79  489=>270 
490=>272 491=>25  492=>105 493=>155 494=>114 495=>144 496=>22  497=>267 498=>68  499=>114 
500=>106 501=>174 502=>48  503=>24  504=>60  505=>164 506=>88  507=>159 508=>16  509=>67  
510=>7   511=>33  512=>65  513=>106 514=>106 515=>80  516=>223 517=>268 518=>23  519=>83  
520=>175 521=>207 522=>44  523=>137 524=>75  525=>47  526=>258 527=>217 528=>15  529=>50  
530=>157 531=>266 532=>141 533=>102 534=>164 535=>110 536=>49  537=>31  538=>142 539=>135 
540=>92  541=>259 542=>134 543=>261 544=>112 545=>263 546=>0   547=>0   548=>0   549=>0   
550=>0   551=>0   552=>0   553=>0   554=>0   555=>0   556=>0   557=>0   558=>0   559=>0   
560=>0   561=>0   562=>0   563=>0   564=>0   565=>0   566=>0   567=>0   568=>0   569=>0   
570=>0   571=>0   572=>0   573=>0   574=>0   575=>0   576=>0   577=>0   578=>0   579=>0   
580=>0   581=>0   582=>0   583=>0   584=>0   585=>0   586=>0   587=>0   588=>0   589=>0   
590=>0   591=>0   592=>0   593=>0   594=>0   595=>0   596=>0   597=>0   598=>0   599=>0   
600=>0   601=>0   602=>0   603=>0   604=>0   605=>0   606=>0   607=>0   608=>0   609=>0   
610=>0   611=>0   612=>0   613=>0   614=>0   615=>0   616=>0   617=>0   618=>0   619=>0   
620=>0   621=>0   622=>0   623=>0   624=>0   625=>0   626=>0   627=>0   628=>0   629=>0   
630=>0   631=>0   632=>0   633=>0   634=>0   635=>0   636=>0   637=>0   638=>0   639=>0   
640=>0   641=>0   642=>0   643=>0   644=>0   645=>0   646=>0   647=>0   648=>0   649=>0   
650=>0   651=>0   652=>0   653=>0   654=>0   655=>0   656=>0   657=>0   658=>0   659=>0   
660=>0   661=>0   662=>0   663=>0   664=>0   665=>0   666=>0   667=>0   668=>0   669=>0   
670=>0   671=>0   672=>0   673=>0   674=>0   675=>0   676=>0   677=>0   678=>0   679=>0   
680=>0   681=>0   682=>0   683=>0   684=>0   685=>0   686=>0   687=>0   688=>0   689=>0   
690=>0   691=>0   692=>0   693=>0   694=>0   695=>0   696=>0   697=>0   698=>0   699=>0   
700=>0   701=>0   702=>0   703=>0   704=>0   705=>0   706=>0   707=>0   708=>0   709=>0   
710=>0   711=>0   712=>0   713=>0   714=>0   715=>0   716=>0   717=>0   718=>0   719=>0   
720=>0   721=>0   722=>0   723=>0   724=>0   725=>0   726=>0   727=>0   728=>0   729=>0   
730=>0   731=>0   732=>0   733=>0   734=>0   735=>0   736=>0   737=>0   738=>0   739=>0   
740=>0   741=>0   742=>0   743=>0   744=>0   745=>0   746=>0   747=>0   748=>0   749=>0   
750=>0   751=>0   752=>0   753=>0   754=>0   755=>0   756=>0   757=>0   758=>0   759=>0   
760=>0   761=>0   762=>0   763=>0   764=>0   765=>0   766=>0   767=>0   768=>0   769=>0   
770=>0   771=>0   772=>0   773=>0   774=>0   775=>0   776=>0   777=>0   778=>0   779=>0   
780=>0   781=>0   782=>0   783=>0   784=>0   785=>0   786=>0   787=>0   788=>0   789=>0   
790=>0   791=>0   792=>0   793=>0   794=>0   795=>0   796=>0   797=>0   798=>0   799=>0   
800=>0   801=>0   802=>0   803=>0   804=>0   805=>0   806=>0   807=>0   808=>0   809=>0   
810=>0   811=>0   812=>0   813=>0   814=>0   815=>0   816=>0   817=>0   818=>0   819=>0   
820=>0   821=>0   822=>0   823=>0   824=>0   825=>0   826=>0   827=>0   828=>0   829=>0   
830=>0   831=>0   832=>0   833=>0   834=>0   835=>0   836=>0   837=>0   838=>0   839=>0   

Terminal action:
     T\S   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303

   error




T_REQUIR  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  105 105 105 105 105 105 105 105 709 709 709 709 709 105 105 105 105 105 105 105  .   .   .   .   .   .   .  105  . 













T_CONCAT  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  114  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  114  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 












     '|

     '&'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   49 216 784 784  49  49  .   49  49  .   .   .   .   .   .   49  .   .   .   .   .   .   .   .   .   .   .   .   49  .   49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  49  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  219 221 221 223 224  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   49  .   .   .   .   .   . 



















     '~
   T_INC  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  729  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  729  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  218 218 218 218 218 218 218 218  .   .   .   .   .  218 218 218 218 218 218 218  .   .   .   .   .   .   .  218  . 












 T_CLONE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   87  87  87  87  87  87  87  87 701 701 701 701 701  87  87  87  87  87  87  87  .   .   .   .   .   .   .   87  . 
  T_EXIT  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  426 426 426 426 426 426 426 426 667 667 667 667 667 426 426 426 426 426 426 426  .   .   .   .   .   .   .  426  . 

T_ELSEIF  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  389 522  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  794 794 794 794 794  . -133  .   .   .   .   .   .   .   .   .   .   .   .   .   . 



T_DNUMBE  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  758 758 758 758 758 758 758 758  .   .   .   .   .  758 758 758 758 758 758 758  .   .   .   .   .   .   .  758  . 



T_NUM_ST  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  549  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  853  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 




    T_DO  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  884 884 884 884 884  18  18  18  18  18  18  18  .   .   .   .   .   .   .   18  . 
























T_INSTEA  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  258  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  888 888 888 888 888  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 



















 T_ARRAY  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  816  .   .   .   .   .   .   .   .   .   .   .  457 457  .   .   .   .   .   .   .   .   .   .   .   .   .   .  457  .   .   .   .   .   .   .   .   .   .   .   .   .   .  816 816 816  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  457 457 457 457 457 457 457 457 904 904 904 904 904 457 457 457 457 457 457 457  .   .   .   .   .   .   .  457  . 















T_NS_SEP  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  299 310 311 316 505 507  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  436 505 534 450 450 450  .  487  .   .   .   .   .   .   .   .  450 450  .   .   .   .   .   .   .   .   .   .   .   .   .   .  450  .   .   .   .   .   .   .   .   .   .   .   .   .   .  450 450 450  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  450 450 450 450 450 450 450 450 450  .   .   .   .  450 450 450 450 450 450 450  .   .   .   .  450 450  .  450  . 

     ';'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   32  78 553 554 588 591 595 598 601 606 612 614 627 632 634 635 638 641 644 645  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  637  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  637  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  589  .  744 744 744 744 744 834 744 763 763 763  .   .   .   .  744  . 
     '{'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  558 563 566 611 629 657 662 672 782 798  .   .   .   .  571  .   .   .   .   .  658  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  273 275 368 427  .   .  769  .   .   .   .   .   .   .   .   .   .   . -443-442-441  .   .   58  86  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  422  .   .   .   .   .   .   .   . -441  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -441  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   62 743 743 743 743 743 743 743  .  728  .   59  .   .   70 743  . 
     '}'  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  551 559 582 592 615 617 618 626 646 650 660 721 796 842 851 920  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  585 602 609 619  .   .   .   .  622 642  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  810  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  560 562 825 841 845 850  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  656  .   .   .   .   . -133  .   .   .   .   .   .   .   .   .   .   .   .   -4  . 
     '('  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -469-467-446-445-444  20  27  31  51  54  55  57  60  61  67  68  74  76 116 222 225 234 235 237 239 277 375 493  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   20  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  235  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . -446-445  .   66  66  .   .   .   .   .   .   .   .   .   .   .   .   .   .   66  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   48  48  48  48  48  48  48  48  .   .   .   .   .   48  48  48  48  48  48  48  .   .   .   .   .   .   .   48  . 
     ')'  .   .   .   .   .   .   .   . -230-228-227  11  13  15  16 309 378 400 425 438 449 564 664 802 818 824  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  -88  .   .   .   .   .   .   .   .   .   .   .   .   . -232 -88  .   .   .   .   .   .   .   .   .   . -227  .   .   .   .   12  14  19 243 313 334 366 454 801 856  .   .   .   .   .   .   .   .   .   .   . -488-487-479-477-251-173-172  .   .   .   .  797  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  716  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
     '`




Nonterminal GOTO table:
     T\S   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839
   start 337  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
top_stat
top_stat
top_stat
reserved
semi_res
identifi
namespac
namespac
    semi
no_comma
optional
statemen
function  .  724 740  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_de
use_decl
use_type
group_us
constant
unprefix
inline_u  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  352  .  432  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
unprefix
non_empt
use_decl
non_empt
inline_u
non_empt
constant
    expr
class_co
non_empt
class_co
inner_st
inner_st
inner_st
non_empt
else_sin
new_else  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  317  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
new_else
while_st
for_expr
for_stat
switch_c  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  830  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
optional
global_v
static_v
expr_lis
variable
foreach
foreach
variable
declare
declare
 catches
optional
   catch
name_uni
    name
non_empt
optional
optional
paramete
optional
class_en
extends
implemen
class_st
interfac
class_na
class_na
non_empt
non_empt
declare_  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  831  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  687  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
case_lis
    case
case_sep
  elseif
new_else
list_exp
array_sh
non_empt
paramete
optional
type_exp
    type
argument
non_empt
argument  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  714 546  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  484  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
global_v
simple_v
non_empt
static_v
class_st
variable
property
method_m  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  304 304 304 304  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
method_b
trait_ad
trait_ad
trait_ad
trait_me
trait_me
member_m
non_empt
non_empt  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  396  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
property
non_empt
new_expr
class_na
exit_exp
  scalar
backtick
lexical
anonymou
ctor_arg
lexical
non_empt
lexical
function
callable
class_na
member_n
new_vari
derefere
encaps_l
constant  .  362 362  .   .   .   .   .   .   .   .  362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362 362  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  344 344 344 344 344 344 344 344 344 344 344 344 344 344  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
array_pa
derefere
callable
property
static_m
list_exp
list_exp
inner_ar
array_pa
encaps_v
encaps_s
encaps_b  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  301  .   .   .   .  301 301  .   .   .   .   .   .   .   .  301  .   .  301 301  .   .   .   .   .   .   .   .   .   .  301  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
encaps_v

Nonterminal GOTO table:
     T\S default
   start
top_stat
top_stat
top_stat
reserved
semi_res
identifi
namespac
namespac
    semi
no_comma
optional
statemen
function
class_de
use_decl
use_type
group_us
constant
unprefix
inline_u
non_empt
unprefix     795  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  778  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   =   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  778  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  778  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  607  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  607  .   .   .  651  .   .   .   .  679  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  570  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  679  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  679  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
use_decl
non_empt
inline_u
non_empt
constant
    expr     133  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =   =   =   =   =   =  166 166 146 148 180 151 172 151 151 202 171 153 167 204 203 161 211 205 206 212 170 210 232 231 169 250 247 245 156 208 200 149 173 165 138 140 135 162 144 152 143 154 150 174 201 176 145 167 155 163 139 195 197 198 147 162 141 209 167 392 162 190 194 185 183 162 137 787 162 383 388 390 391 394 192 399 357 823 348 314 350 353 181 175 177 164 157 159 158 162 167 160 140 184 182 179 142 178 136 193 188 186 168 476 326 320 315 187 196 189 191 134 162  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
class_co
non_empt
class_co
inner_st
inner_st
inner_st
non_empt     738  .   =   =   .   .   .   .   .   .   .   .   =   =   =   =  833  =   =   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
else_sin
new_else
new_else     520  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
while_st
for_expr
for_stat
switch_c
optional
global_v
static_v     318  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
expr_lis
variable
foreach
foreach
variable
declare
declare
 catches
optional
   catch     652  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
name_uni
    name
non_empt
optional
optional     360  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
paramete
optional
class_en
extends_     544  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .  356  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
implemen
class_st
interfac
class_na
class_na
non_empt
non_empt
declare
case_lis
    case
case_sep     633  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  639  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
  elseif
new_else
list_exp
array_sh
non_empt
paramete
optional
type_exp     812  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   =   =   =   .   =   .  643  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
    type
argument
non_empt
argument     714  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =  546  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
non_empt
global_v
simple_v
non_empt     478  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
static_v
class_st
variable
property
method_m
method_b
trait_ad
trait_ad
trait_ad
trait_me
trait_me
member_m
non_empt
non_empt
property
non_empt
new_expr
class_na
exit_exp
  scalar
backtick
lexical
anonymou
ctor_arg
lexical
non_empt
lexical
function
callable
class_na
member_n
new_vari
derefere
encaps_l
constant
array_pa
derefere
callable
property
static_m
list_exp
list_exp
inner_ar
array_pa     792  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  822  .   =   =   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
encaps_v
encaps_s
encaps_b
encaps_v

Candidates of aux table:
Used aux table:
state 0 (class 0)
state 1 (class 289)
state 2 (class 302)
state 3 (class 287)
state 4 (class 283)
state 5 (class 286)
state 6 (class 285)
state 7 (class 285)
state 8 (class 285)
state 9 (class 285)
state 10 (class 284)
state 11 (class 290)
state 12 (class 292)
state 13 (class 291)
state 14 (class 294)
state 15 (class 293)
state 16 (class 291)
state 17 (class 288)
state 18 (class 288)
state 19 (class 288)
state 20 (class 279)
state 21 (class 278)
state 22 (class 276)
state 23 (class 282)
state 24 (class 281)
state 25 (class 280)
state 26 (class 277)
state 27 (class 280)
state 28 (class 280)
state 29 (class 275)
state 30 (class 275)
state 31 (class 275)
state 32 (class 275)
state 33 (class 275)
state 34 (class 275)
state 35 (class 275)
state 36 (class 275)
state 37 (class 275)
state 38 (class 275)
state 39 (class 275)
state 40 (class 275)
state 41 (class 275)
state 42 (class 275)
state 43 (class 275)
state 44 (class 275)
state 45 (class 275)
state 46 (class 275)
state 47 (class 275)
state 48 (class 275)
state 49 (class 275)
state 50 (class 275)
state 51 (class 275)
state 52 (class 275)
state 53 (class 275)
state 54 (class 275)
state 55 (class 275)
state 56 (class 275)
state 57 (class 275)
state 58 (class 275)
state 59 (class 275)
state 60 (class 275)
state 61 (class 275)
state 62 (class 275)
state 63 (class 275)
state 64 (class 275)
state 65 (class 275)
state 66 (class 275)
state 67 (class 275)
state 68 (class 275)
state 69 (class 275)
state 70 (class 275)
state 71 (class 275)
state 72 (class 275)
state 73 (class 275)
state 74 (class 275)
state 75 (class 275)
state 76 (class 275)
state 77 (class 275)
state 78 (class 275)
state 79 (class 275)
state 80 (class 275)
state 81 (class 275)
state 82 (class 275)
state 83 (class 275)
state 84 (class 275)
state 85 (class 275)
state 86 (class 275)
state 87 (class 275)
state 88 (class 275)
state 89 (class 275)
state 90 (class 275)
state 91 (class 275)
state 92 (class 275)
state 93 (class 275)
state 94 (class 275)
state 95 (class 275)
state 96 (class 275)
state 97 (class 275)
state 98 (class 275)
state 99 (class 275)
state 100 (class 275)
state 101 (class 275)
state 102 (class 275)
state 103 (class 275)
state 104 (class 275)
state 105 (class 275)
state 106 (class 275)
state 107 (class 275)
state 108 (class 275)
state 109 (class 275)
state 110 (class 275)
state 111 (class 275)
state 112 (class 275)
state 113 (class 275)
state 114 (class 275)
state 115 (class 275)
state 116 (class 275)
state 117 (class 275)
state 118 (class 275)
state 119 (class 275)
state 120 (class 275)
state 121 (class 275)
state 122 (class 275)
state 123 (class 275)
state 124 (class 275)
state 125 (class 275)
state 126 (class 275)
state 127 (class 275)
state 128 (class 275)
state 129 (class 275)
state 130 (class 275)
state 131 (class 275)
state 132 (class 275)
state 133 (class 297)
state 134 (class 297)
state 135 (class 248)
state 136 (class 229)
state 137 (class 244)
state 138 (class 238)
state 139 (class 241)
state 140 (class 250)
state 141 (class 232)
state 142 (class 236)
state 143 (class 230)
state 144 (class 243)
state 145 (class 235)
state 146 (class 242)
state 147 (class 239)
state 148 (class 247)
state 149 (class 234)
state 150 (class 240)
state 151 (class 249)
state 152 (class 245)
state 153 (class 237)
state 154 (class 231)
state 155 (class 246)
state 156 (class 233)
state 157 (class 228)
state 158 (class 228)
state 159 (class 228)
state 160 (class 228)
state 161 (class 228)
state 162 (class 228)
state 163 (class 228)
state 164 (class 228)
state 165 (class 228)
state 166 (class 228)
state 167 (class 228)
state 168 (class 228)
state 169 (class 228)
state 170 (class 228)
state 171 (class 228)
state 172 (class 228)
state 173 (class 227)
state 174 (class 226)
state 175 (class 224)
state 176 (class 211)
state 177 (class 211)
state 178 (class 211)
state 179 (class 211)
state 180 (class 211)
state 181 (class 211)
state 182 (class 211)
state 183 (class 211)
state 184 (class 211)
state 185 (class 211)
state 186 (class 211)
state 187 (class 211)
state 188 (class 211)
state 189 (class 211)
state 190 (class 211)
state 191 (class 211)
state 192 (class 211)
state 193 (class 211)
state 194 (class 204)
state 195 (class 204)
state 196 (class 204)
state 197 (class 203)
state 198 (class 201)
state 199 (class 254)
state 200 (class 200)
state 201 (class 196)
state 202 (class 194)
state 203 (class 194)
state 204 (class 194)
state 205 (class 194)
state 206 (class 194)
state 207 (class 215)
state 208 (class 195)
state 209 (class 193)
state 210 (class 193)
state 211 (class 193)
state 212 (class 193)
state 213 (class 197)
state 214 (class 197)
state 215 (class 182)
state 216 (class 181)
state 217 (class 181)
state 218 (class 181)
state 219 (class 181)
state 220 (class 181)
state 221 (class 181)
state 222 (class 181)
state 223 (class 181)
state 224 (class 181)
state 225 (class 181)
state 226 (class 181)
state 227 (class 120)
state 228 (class 119)
state 229 (class 118)
state 230 (class 121)
state 231 (class 192)
state 232 (class 192)
state 233 (class 300)
state 234 (class 213)
state 235 (class 213)
state 236 (class 214)
state 237 (class 213)
state 238 (class 139)
state 239 (class 213)
state 240 (class 299)
state 241 (class 212)
state 242 (class 178)
state 243 (class 179)
state 244 (class 169)
state 245 (class 190)
state 246 (class 148)
state 247 (class 190)
state 248 (class 301)
state 249 (class 301)
state 250 (class 190)
state 251 (class 150)
state 252 (class 151)
state 253 (class 180)
state 254 (class 180)
state 255 (class 180)
state 256 (class 170)
state 257 (class 172)
state 258 (class 170)
state 259 (class 170)
state 260 (class 191)
state 261 (class 149)
state 262 (class 170)
state 263 (class 183)
state 264 (class 149)
state 265 (class 147)
state 266 (class 298)
state 267 (class 170)
state 268 (class 170)
state 269 (class 252)
state 270 (class 251)
state 271 (class 127)
state 272 (class 129)
state 273 (class 171)
state 274 (class 166)
state 275 (class 171)
state 276 (class 146)
state 277 (class 168)
state 278 (class 126)
state 279 (class 171)
state 280 (class 168)
state 281 (class 128)
state 282 (class 296)
state 283 (class 184)
state 284 (class 256)
state 285 (class 257)
state 286 (class 253)
state 287 (class 255)
state 288 (class 225)
state 289 (class 199)
state 290 (class 107)
state 291 (class 202)
state 292 (class 295)
state 293 (class 262)
state 294 (class 145)
state 295 (class 165)
state 296 (class 145)
state 297 (class 145)
state 298 (class 186)
state 299 (class 162)
state 300 (class 295)
state 301 (class 187)
state 302 (class 90)
state 303 (class 123)
state 304 (class 124)
state 305 (class 145)
state 306 (class 143)
state 307 (class 84)
state 308 (class 176)
state 309 (class 295)
state 310 (class 163)
state 311 (class 160)
state 312 (class 295)
state 313 (class 206)
state 314 (class 189)
state 315 (class 189)
state 316 (class 161)
state 317 (class 177)
state 318 (class 295)
state 319 (class 208)
state 320 (class 189)
state 321 (class 295)
state 322 (class 295)
state 323 (class 295)
state 324 (class 158)
state 325 (class 295)
state 326 (class 189)
state 327 (class 295)
state 328 (class 295)
state 329 (class 167)
state 330 (class 295)
state 331 (class 8)
state 332 (class 9)
state 333 (class 10)
state 334 (class 29)
state 335 (class 26)
state 336 (class 27)
state 337 (class 303)
state 338 (class 28)
state 339 (class 6)
state 340 (class 130)
state 341 (class 30)
state 342 (class 103)
state 343 (class 105)
state 344 (class 185)
state 345 (class 31)
state 346 (class 5)
state 347 (class 62)
state 348 (class 188)
state 349 (class 31)
state 350 (class 188)
state 351 (class 4)
state 352 (class 59)
state 353 (class 188)
state 354 (class 73)
state 355 (class 125)
state 356 (class 112)
state 357 (class 188)
state 358 (class 3)
state 359 (class 51)
state 360 (class 140)
state 361 (class 198)
state 362 (class 185)
state 363 (class 108)
state 364 (class 31)
state 365 (class 20)
state 366 (class 209)
state 367 (class 97)
state 368 (class 164)
state 369 (class 58)
state 370 (class 221)
state 371 (class 11)
state 372 (class 55)
state 373 (class 222)
state 374 (class 72)
state 375 (class 198)
state 376 (class 74)
state 377 (class 31)
state 378 (class 76)
state 379 (class 260)
state 380 (class 94)
state 381 (class 2)
state 382 (class 89)
state 383 (class 188)
state 384 (class 12)
state 385 (class 87)
state 386 (class 271)
state 387 (class 173)
state 388 (class 188)
state 389 (class 43)
state 390 (class 188)
state 391 (class 188)
state 392 (class 188)
state 393 (class 61)
state 394 (class 188)
state 395 (class 198)
state 396 (class 273)
state 397 (class 91)
state 398 (class 219)
state 399 (class 188)
state 400 (class 122)
state 401 (class 155)
state 402 (class 220)
state 403 (class 205)
state 404 (class 14)
state 405 (class 78)
state 406 (class 157)
state 407 (class 70)
state 408 (class 198)
state 409 (class 152)
state 410 (class 34)
state 411 (class 53)
state 412 (class 41)
state 413 (class 40)
state 414 (class 71)
state 415 (class 39)
state 416 (class 141)
state 417 (class 81)
state 418 (class 210)
state 419 (class 116)
state 420 (class 38)
state 421 (class 93)
state 422 (class 96)
state 423 (class 19)
state 424 (class 17)
state 425 (class 122)
state 426 (class 37)
state 427 (class 164)
state 428 (class 100)
state 429 (class 42)
state 430 (class 69)
state 431 (class 164)
state 432 (class 63)
state 433 (class 21)
state 434 (class 115)
state 435 (class 205)
state 436 (class 164)
state 437 (class 52)
state 438 (class 205)
state 439 (class 18)
state 440 (class 264)
state 441 (class 156)
state 442 (class 198)
state 443 (class 133)
state 444 (class 98)
state 445 (class 99)
state 446 (class 106)
state 447 (class 101)
state 448 (class 85)
state 449 (class 205)
state 450 (class 164)
state 451 (class 45)
state 452 (class 56)
state 453 (class 136)
state 454 (class 86)
state 455 (class 265)
state 456 (class 82)
state 457 (class 32)
state 458 (class 36)
state 459 (class 153)
state 460 (class 138)
state 461 (class 1)
state 462 (class 154)
state 463 (class 54)
state 464 (class 35)
state 465 (class 46)
state 466 (class 164)
state 467 (class 66)
state 468 (class 57)
state 469 (class 198)
state 470 (class 113)
state 471 (class 77)
state 472 (class 64)
state 473 (class 109)
state 474 (class 220)
state 475 (class 95)
state 476 (class 188)
state 477 (class 216)
state 478 (class 274)
state 479 (class 218)
state 480 (class 111)
state 481 (class 117)
state 482 (class 131)
state 483 (class 13)
state 484 (class 269)
state 485 (class 132)
state 486 (class 104)
state 487 (class 164)
state 488 (class 79)
state 489 (class 270)
state 490 (class 272)
state 491 (class 25)
state 492 (class 105)
state 493 (class 155)
state 494 (class 114)
state 495 (class 144)
state 496 (class 22)
state 497 (class 267)
state 498 (class 68)
state 499 (class 114)
state 500 (class 106)
state 501 (class 174)
state 502 (class 48)
state 503 (class 24)
state 504 (class 60)
state 505 (class 164)
state 506 (class 88)
state 507 (class 159)
state 508 (class 16)
state 509 (class 67)
state 510 (class 7)
state 511 (class 33)
state 512 (class 65)
state 513 (class 106)
state 514 (class 106)
state 515 (class 80)
state 516 (class 223)
state 517 (class 268)
state 518 (class 23)
state 519 (class 83)
state 520 (class 175)
state 521 (class 207)
state 522 (class 44)
state 523 (class 137)
state 524 (class 75)
state 525 (class 47)
state 526 (class 258)
state 527 (class 217)
state 528 (class 15)
state 529 (class 50)
state 530 (class 157)
state 531 (class 266)
state 532 (class 141)
state 533 (class 102)
state 534 (class 164)
state 535 (class 110)
state 536 (class 49)
state 537 (class 31)
state 538 (class 142)
state 539 (class 135)
state 540 (class 92)
state 541 (class 259)
state 542 (class 134)
state 543 (class 261)
state 544 (class 112)
state 545 (class 263)
state 546 (class 0)
state 547 (class 0)
state 548 (class 0)
state 549 (class 0)
state 550 (class 0)
state 551 (class 0)
state 552 (class 0)
state 553 (class 0)
state 554 (class 0)
state 555 (class 0)
state 556 (class 0)
state 557 (class 0)
state 558 (class 0)
state 559 (class 0)
state 560 (class 0)
state 561 (class 0)
state 562 (class 0)
state 563 (class 0)
state 564 (class 0)
state 565 (class 0)
state 566 (class 0)
state 567 (class 0)
state 568 (class 0)
state 569 (class 0)
state 570 (class 0)
state 571 (class 0)
state 572 (class 0)
state 573 (class 0)
state 574 (class 0)
state 575 (class 0)
state 576 (class 0)
state 577 (class 0)
state 578 (class 0)
state 579 (class 0)
state 580 (class 0)
state 581 (class 0)
state 582 (class 0)
state 583 (class 0)
state 584 (class 0)
state 585 (class 0)
state 586 (class 0)
state 587 (class 0)
state 588 (class 0)
state 589 (class 0)
state 590 (class 0)
state 591 (class 0)
state 592 (class 0)
state 593 (class 0)
state 594 (class 0)
state 595 (class 0)
state 596 (class 0)
state 597 (class 0)
state 598 (class 0)
state 599 (class 0)
state 600 (class 0)
state 601 (class 0)
state 602 (class 0)
state 603 (class 0)
state 604 (class 0)
state 605 (class 0)
state 606 (class 0)
state 607 (class 0)
state 608 (class 0)
state 609 (class 0)
state 610 (class 0)
state 611 (class 0)
state 612 (class 0)
state 613 (class 0)
state 614 (class 0)
state 615 (class 0)
state 616 (class 0)
state 617 (class 0)
state 618 (class 0)
state 619 (class 0)
state 620 (class 0)
state 621 (class 0)
state 622 (class 0)
state 623 (class 0)
state 624 (class 0)
state 625 (class 0)
state 626 (class 0)
state 627 (class 0)
state 628 (class 0)
state 629 (class 0)
state 630 (class 0)
state 631 (class 0)
state 632 (class 0)
state 633 (class 0)
state 634 (class 0)
state 635 (class 0)
state 636 (class 0)
state 637 (class 0)
state 638 (class 0)
state 639 (class 0)
state 640 (class 0)
state 641 (class 0)
state 642 (class 0)
state 643 (class 0)
state 644 (class 0)
state 645 (class 0)
state 646 (class 0)
state 647 (class 0)
state 648 (class 0)
state 649 (class 0)
state 650 (class 0)
state 651 (class 0)
state 652 (class 0)
state 653 (class 0)
state 654 (class 0)
state 655 (class 0)
state 656 (class 0)
state 657 (class 0)
state 658 (class 0)
state 659 (class 0)
state 660 (class 0)
state 661 (class 0)
state 662 (class 0)
state 663 (class 0)
state 664 (class 0)
state 665 (class 0)
state 666 (class 0)
state 667 (class 0)
state 668 (class 0)
state 669 (class 0)
state 670 (class 0)
state 671 (class 0)
state 672 (class 0)
state 673 (class 0)
state 674 (class 0)
state 675 (class 0)
state 676 (class 0)
state 677 (class 0)
state 678 (class 0)
state 679 (class 0)
state 680 (class 0)
state 681 (class 0)
state 682 (class 0)
state 683 (class 0)
state 684 (class 0)
state 685 (class 0)
state 686 (class 0)
state 687 (class 0)
state 688 (class 0)
state 689 (class 0)
state 690 (class 0)
state 691 (class 0)
state 692 (class 0)
state 693 (class 0)
state 694 (class 0)
state 695 (class 0)
state 696 (class 0)
state 697 (class 0)
state 698 (class 0)
state 699 (class 0)
state 700 (class 0)
state 701 (class 0)
state 702 (class 0)
state 703 (class 0)
state 704 (class 0)
state 705 (class 0)
state 706 (class 0)
state 707 (class 0)
state 708 (class 0)
state 709 (class 0)
state 710 (class 0)
state 711 (class 0)
state 712 (class 0)
state 713 (class 0)
state 714 (class 0)
state 715 (class 0)
state 716 (class 0)
state 717 (class 0)
state 718 (class 0)
state 719 (class 0)
state 720 (class 0)
state 721 (class 0)
state 722 (class 0)
state 723 (class 0)
state 724 (class 0)
state 725 (class 0)
state 726 (class 0)
state 727 (class 0)
state 728 (class 0)
state 729 (class 0)
state 730 (class 0)
state 731 (class 0)
state 732 (class 0)
state 733 (class 0)
state 734 (class 0)
state 735 (class 0)
state 736 (class 0)
state 737 (class 0)
state 738 (class 0)
state 739 (class 0)
state 740 (class 0)
state 741 (class 0)
state 742 (class 0)
state 743 (class 0)
state 744 (class 0)
state 745 (class 0)
state 746 (class 0)
state 747 (class 0)
state 748 (class 0)
state 749 (class 0)
state 750 (class 0)
state 751 (class 0)
state 752 (class 0)
state 753 (class 0)
state 754 (class 0)
state 755 (class 0)
state 756 (class 0)
state 757 (class 0)
state 758 (class 0)
state 759 (class 0)
state 760 (class 0)
state 761 (class 0)
state 762 (class 0)
state 763 (class 0)
state 764 (class 0)
state 765 (class 0)
state 766 (class 0)
state 767 (class 0)
state 768 (class 0)
state 769 (class 0)
state 770 (class 0)
state 771 (class 0)
state 772 (class 0)
state 773 (class 0)
state 774 (class 0)
state 775 (class 0)
state 776 (class 0)
state 777 (class 0)
state 778 (class 0)
state 779 (class 0)
state 780 (class 0)
state 781 (class 0)
state 782 (class 0)
state 783 (class 0)
state 784 (class 0)
state 785 (class 0)
state 786 (class 0)
state 787 (class 0)
state 788 (class 0)
state 789 (class 0)
state 790 (class 0)
state 791 (class 0)
state 792 (class 0)
state 793 (class 0)
state 794 (class 0)
state 795 (class 0)
state 796 (class 0)
state 797 (class 0)
state 798 (class 0)
state 799 (class 0)
state 800 (class 0)
state 801 (class 0)
state 802 (class 0)
state 803 (class 0)
state 804 (class 0)
state 805 (class 0)
state 806 (class 0)
state 807 (class 0)
state 808 (class 0)
state 809 (class 0)
state 810 (class 0)
state 811 (class 0)
state 812 (class 0)
state 813 (class 0)
state 814 (class 0)
state 815 (class 0)
state 816 (class 0)
state 817 (class 0)
state 818 (class 0)
state 819 (class 0)
state 820 (class 0)
state 821 (class 0)
state 822 (class 0)
state 823 (class 0)
state 824 (class 0)
state 825 (class 0)
state 826 (class 0)
state 827 (class 0)
state 828 (class 0)
state 829 (class 0)
state 830 (class 0)
state 831 (class 0)
state 832 (class 0)
state 833 (class 0)
state 834 (class 0)
state 835 (class 0)
state 836 (class 0)
state 837 (class 0)
state 838 (class 0)
state 839 (class 0)
Order:
289,302,287,283,286,285,284,293,291,292,290,294,288,279,278,282,280,281,277,276,275,297,248,229,238,237,236,235,239,234,233,232,231,230,240,241,242,243,244,245,246,249,247,250,228,227,226,224,211,204,203,201,254,200,196,215,195,194,193,197,182,181,118,120,119,121,300,192,299,214,213,139,212,301,179,178,150,169,151,148,190,298,180,183,172,170,149,147,191,296,252,251,184,166,168,146,126,127,171,129,128,295,262,257,256,255,253,225,206,208,199,186,145,158,161,162,163,160,165,167,187,202,143,189,107,177,176,124,123,90,84,303,260,259,274,273,272,271,270,269,268,267,266,265,264,263,261,258,221,218,222,220,219,223,217,216,209,205,207,210,198,188,185,175,173,174,152,164,157,156,155,154,153,159,144,142,141,140,138,137,136,135,134,133,131,130,132,125,122,117,115,116,114,113,112,111,108,110,109,103,101,102,104,106,105,100,89,80,81,83,85,86,87,88,82,91,93,94,95,96,97,98,99,92,74,70,71,72,73,76,75,77,78,79,61,54,55,56,57,58,59,60,69,62,63,64,65,66,67,68,37,36,35,34,33,29,32,30,39,28,27,26,38,31,40,48,41,53,52,50,49,51,47,46,45,44,43,42,16,8,9,10,11,12,13,14,15,20,17,18,19,21,22,23,24,25,7,6,1,5,4,3,2,0,
Order:
30,60,8,36,53,10,131,82,129,11,93,23,71,13,46,81,62,7,88,139,69,76,140,65,72,64,106,2,43,128,15,14,33,5,37,52,90,138,130,49,136,51,50,84,112,86,87,133,17,9,21,27,25,92,78,16,121,116,20,75,67,29,12,109,118,95,68,111,125,99,141,137,100,135,101,134,132,127,102,126,103,124,113,104,105,123,122,98,119,107,108,117,115,110,114,120,0,97,32,44,42,41,40,39,38,35,34,31,47,28,26,24,22,19,18,6,4,3,45,48,96,73,94,91,89,85,83,80,79,77,74,1,54,70,66,63,61,59,58,57,56,55,142,
